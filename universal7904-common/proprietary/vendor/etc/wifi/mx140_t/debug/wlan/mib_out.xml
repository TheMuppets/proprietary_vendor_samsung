<?xml version="1.0" encoding="UTF-8"?>
<metadata_list xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="HydraMeta.xsd">
    <metadata version="498092634" subsystem_name="wlan" subsystem_layer="fw" subsystem_id="2">
        <source_control id="$Id$" time="$DateTime$" change="$Change$" author="$Author$" />
        <enum_def enum_name="unifiCSROnlyMIBShield">
            <enum_entry enum_label="open" enum_value="1" />
            <enum_entry enum_label="warn" enum_value="2" />
            <enum_entry enum_label="guard" enum_value="3" />
            <enum_entry enum_label="alarm" enum_value="4" />
        </enum_def>
        <enum_def enum_name="unifiExternalFastClockRequest">
            <enum_entry enum_label="no_clock_request" enum_value="0" />
            <enum_entry enum_label="totem_pole" enum_value="1" />
            <enum_entry enum_label="inverted_totem_pole" enum_value="2" />
            <enum_entry enum_label="open_drain" enum_value="3" />
            <enum_entry enum_label="open_source" enum_value="4" />
        </enum_def>
        <enum_def enum_name="unifiMLMEFaultReportLevel">
            <enum_entry enum_label="none" enum_value="0" />
            <enum_entry enum_label="detailed" enum_value="1" />
        </enum_def>
        <enum_def enum_name="unifiPioHostWakeMode">
            <enum_entry enum_label="wake_none" enum_value="1" />
            <enum_entry enum_label="wake_pulse" enum_value="2" />
        </enum_def>
        <enum_def enum_name="unifiPioHostWakePolarity">
            <enum_entry enum_label="positive" enum_value="0" />
            <enum_entry enum_label="negative" enum_value="1" />
        </enum_def>
        <enum_def enum_name="unifiPioHostWakeZeal">
            <enum_entry enum_label="wake_normal" enum_value="0" />
            <enum_entry enum_label="wake_always" enum_value="1" />
        </enum_def>
        <enum_def enum_name="unifiUartPios">
            <enum_entry enum_label="no_pios" enum_value="1" />
            <enum_entry enum_label="tx_rx_only" enum_value="2" />
            <enum_entry enum_label="tx_rx_rts_cts" enum_value="3" />
        </enum_def>
        <enum_def enum_name="unifiRateStatsIndex">
            <enum_entry enum_label="rate_1m" enum_value="1" />
            <enum_entry enum_label="rate_2m" enum_value="2" />
            <enum_entry enum_label="rate_5m5" enum_value="3" />
            <enum_entry enum_label="rate_6m" enum_value="4" />
            <enum_entry enum_label="rate_9m" enum_value="5" />
            <enum_entry enum_label="rate_11m" enum_value="6" />
            <enum_entry enum_label="rate_12m" enum_value="7" />
            <enum_entry enum_label="rate_18m" enum_value="8" />
            <enum_entry enum_label="rate_24m" enum_value="9" />
            <enum_entry enum_label="rate_36m" enum_value="10" />
            <enum_entry enum_label="rate_48m" enum_value="11" />
            <enum_entry enum_label="rate_54m" enum_value="12" />
        </enum_def>
        <enum_def enum_name="unifiThroughputDebugIndex">
            <enum_entry enum_label="no_ack_count"  enum_value="1" />
            <enum_entry enum_label="good_fcs_count"  enum_value="2" />
            <enum_entry enum_label="bad_fcs_count" enum_value="3" />
            <enum_entry enum_label="missed_ba_count"  enum_value="4" />
            <enum_entry enum_label="missed_ack_count"  enum_value="5" />
            <enum_entry enum_label="ba_agg_below_quarter"  enum_value="6" />
            <enum_entry enum_label="ba_agg_above_quarter" enum_value="7" />
            <enum_entry enum_label="mpdus_total_transmitted_on_air" enum_value="8" />
            <enum_entry enum_label="mpdus_successfully_transmitted" enum_value="9" />
            <enum_entry enum_label="mpdus_failed_transmit" enum_value="10" />
            <enum_entry enum_label="laa_rate_decrease_counter" enum_value="11" />
            <enum_entry enum_label="laa_rate_increase_counter" enum_value="12" />
            <enum_entry enum_label="dplane_paused_counter" enum_value="13" />
            <enum_entry enum_label="dplane_resumed_counter" enum_value="14" />
            <enum_entry enum_label="missed_sq_num_counter"  enum_value="15" />
            <enum_entry enum_label="duplicate_rcv_counter"  enum_value="16" />
            <enum_entry enum_label="dplp_free_resources_cb_counter" enum_value="17" />
            <enum_entry enum_label="lowest_fh_resources" enum_value="18" />
            <enum_entry enum_label="highest_th_resources" enum_value="19" />
            <enum_entry enum_label="scan_started_counter" enum_value="20" />
            <enum_entry enum_label="outstanding_fh_mbulk" enum_value="21" />
            <enum_entry enum_label="outstanding_th_mbulk" enum_value="22" />
            <enum_entry enum_label="cpu_usage" enum_value="23" />
            <enum_entry enum_label="coex_collisions" enum_value="24" />
            <enum_entry enum_label="mac_bad_sig_count" enum_value="25" />
            <enum_entry enum_label="tx_under_flow" enum_value="26" />
            <enum_entry enum_label="rx_ampdu_dlim_crc_err" enum_value="27" />
            <enum_entry enum_label="rx_mpdus_in_ampdus" enum_value="28" />
            <enum_entry enum_label="rx_mpdus" enum_value="29" />
            <enum_entry enum_label="rx_error_count" enum_value="30" />
            <enum_entry enum_label="rx_ampdus" enum_value="31" />
            <enum_entry enum_label="ba_protection_error_count" enum_value="32" />
            <enum_entry enum_label="ba_missed_cts_count" enum_value="33" />
        </enum_def>
        <enum_def enum_name="unifiReadHardwareCounterIndex">
            <enum_entry enum_label="MAC_DOT11_FCS_ERROR_COUNT" enum_value="1" />
            <enum_entry enum_label="MAC_DOT11_FCS_GOOD_COUNT" enum_value="2" />
            <enum_entry enum_label="MAC_BAD_SIG_COUNT" enum_value="3" />
            <enum_entry enum_label="MAC_TX_UNDER_COUNT" enum_value="4" />
            <enum_entry enum_label="MAC_NO_ACK_COUNT" enum_value="5" />
            <enum_entry enum_label="MAC_DOT11_RX_OCTETS_IN_AMPDUS" enum_value="6" />
            <enum_entry enum_label="MAC_DOT11_RX_AMPDUS_COUNT" enum_value="7" />
            <enum_entry enum_label="MAC_DOT11_RX_MPDUS_IN_AMPDUS_COUNT" enum_value="8" />
            <!-- MAC_DOT11_RX_AMPDU_DELIM_CRC_ERR_COUNT exists only on Night and Sockeye. -->
            <enum_entry enum_label="MAC_DOT11_RX_AMPDU_DELIM_CRC_ERR_COUNT" enum_value="9" />
            <!-- MAC_DOT11_ERROR_COUNT exists only on Sockeye and Rock. -->
            <enum_entry enum_label="MAC_DOT11_ERROR_COUNT" enum_value="10" />
            <!-- MAC_DOT11_RX_AMPDU_DELIM_LEN_ERR_COUNT, MAC_DOT11_RX_AMPDU_DELIM_SPACING_ERR_COUNT
            and MAC_DOT11_RX_AMPDU_DELIM_SINGLE_ERR_COUNT exist only on Rock. -->
            <enum_entry enum_label="MAC_DOT11_RX_AMPDU_DELIM_LEN_ERR_COUNT" enum_value="11" />
            <enum_entry enum_label="MAC_DOT11_RX_AMPDU_DELIM_SPACING_ERR_COUNT" enum_value="12" />
            <enum_entry enum_label="MAC_DOT11_RX_AMPDU_DELIM_SINGLE_ERR_COUNT" enum_value="13" />
            <enum_entry enum_label="dphp_mac_acc_off" enum_value="14" />
            <enum_entry enum_label="dphp_dynamic_restart" enum_value="15" />
        </enum_def>
        <enum_def enum_name="unifiRadioTXSettingsIndex">
            <enum_entry enum_label="OFDM0_PRE_GAIN" enum_value="1" />
            <enum_entry enum_label="OFDM1_PRE_GAIN" enum_value="2" />
            <enum_entry enum_label="CCK_PRE_GAIN" enum_value="3" />
            <enum_entry enum_label="TR_PRE_GAIN" enum_value="4" />
            <enum_entry enum_label="OFDM0_FIR_GAIN" enum_value="5" />
            <enum_entry enum_label="OFDM1_FIR_GAIN" enum_value="6" />
            <enum_entry enum_label="CCK_FIR_GAIN" enum_value="7" />
            <enum_entry enum_label="OFDM0_FW_BK_DELAY" enum_value="8" />
            <enum_entry enum_label="OFDM0_RX_BB1" enum_value="9" />
            <enum_entry enum_label="OFDM0_RX_BB2" enum_value="10" />
            <enum_entry enum_label="LOOPBACK_ATTEN" enum_value="11" />
            <enum_entry enum_label="OFDM0_FIR_COEFF" enum_value="12" />
            <enum_entry enum_label="DRV_BIAS" enum_value="13" />
            <enum_entry enum_label="PA_BIAS" enum_value="14" />
            <enum_entry enum_label="CCK_V2I_GAIN" enum_value="15" />
            <enum_entry enum_label="CCK_DRV_GAIN" enum_value="16" />
            <enum_entry enum_label="CCK_MIX_GAIN" enum_value="17" />
            <enum_entry enum_label="CCK_PA_GAIN" enum_value="18" />
            <enum_entry enum_label="OFDM0_V2I_GAIN" enum_value="19" />
            <enum_entry enum_label="OFDM0_DRV_GAIN" enum_value="20" />
            <enum_entry enum_label="OFDM0_MIX_GAIN" enum_value="21" />
            <enum_entry enum_label="OFDM0_PA_GAIN" enum_value="22" />
            <enum_entry enum_label="OFDM1_V2I_GAIN" enum_value="23" />
            <enum_entry enum_label="OFDM1_DRV_GAIN" enum_value="24" />
            <enum_entry enum_label="OFDM1_MIX_GAIN" enum_value="25" />
            <enum_entry enum_label="OFDM1_PA_GAIN" enum_value="26" />
            <enum_entry enum_label="PAPR_EN" enum_value="27" />
            <enum_entry enum_label="PAPR_THRESHOLD" enum_value="28" />
            <enum_entry enum_label="MIX_FTRIM" enum_value="29" />
            <enum_entry enum_label="DRV_FTRIM" enum_value="30" />
            <enum_entry enum_label="PA_FTRIM" enum_value="31" />
            <enum_entry enum_label="CCK_V2I_DCTRIM_I" enum_value="32" />
            <enum_entry enum_label="CCK_V2I_DCTRIM_Q" enum_value="33" />
            <enum_entry enum_label="OFDM0_V2I_DCTRIM_I" enum_value="34" />
            <enum_entry enum_label="OFDM0_V2I_DCTRIM_Q" enum_value="35" />
            <enum_entry enum_label="OFDM1_V2I_DCTRIM_I" enum_value="36" />
            <enum_entry enum_label="OFDM1_V2I_DCTRIM_Q" enum_value="37" />
            <enum_entry enum_label="MIX_DCTRIM_I" enum_value="38" />
            <enum_entry enum_label="MIX_DCTRIM_Q" enum_value="39" />
            <enum_entry enum_label="IMAGE_SCALE_I" enum_value="40" />
            <enum_entry enum_label="IMAGE_SCALE_Q" enum_value="41" />
            <enum_entry enum_label="IMAGE_PHASE_COMP" enum_value="42" />
            <enum_entry enum_label="FREQ" enum_value="43" />
            <enum_entry enum_label="BW" enum_value="44" />
            <enum_entry enum_label="MODE" enum_value="45" />
            <enum_entry enum_label="IS_SCAN" enum_value="46" />
            <enum_entry enum_label="OFDM1_V2I_CARRIER_LEAKAGE_SA" enum_value="47" />
            <enum_entry enum_label="OFDM0_ADAPT_QUALITY" enum_value="48" />
            <enum_entry enum_label="OFDM1_ADAPT_QUALITY" enum_value="49" />
            <enum_entry enum_label="CCK_ADAPT_QUALITY" enum_value="50" />
            <enum_entry enum_label="TR_ADAPT_QUALITY" enum_value="51" />
            <enum_entry enum_label="IMAGE_SCALE_SA" enum_value="52" />
            <enum_entry enum_label="OFDM1_RX_BB1" enum_value="53" />
            <enum_entry enum_label="OFDM1_RX_BB2" enum_value="54" />
            <enum_entry enum_label="CCK_RX_BB1" enum_value="55" />
            <enum_entry enum_label="CCK_RX_BB2" enum_value="56" />
            <enum_entry enum_label="OFDM1_FW_BK_DELAY" enum_value="57" />
            <enum_entry enum_label="CCK_FW_BK_DELAY" enum_value="58" />
            <enum_entry enum_label="OFDM1_FIR_COEFF" enum_value="59" />
            <enum_entry enum_label="CCK_FIR_COEFF" enum_value="60" />
            <enum_entry enum_label="OFDM0_LOOPBACK_PHASE" enum_value="61" />
            <enum_entry enum_label="OFDM1_LOOPBACK_PHASE" enum_value="62" />
            <enum_entry enum_label="CCK_LOOPBACK_PHASE" enum_value="63" />
        </enum_def>
        <enum_def enum_name="unifiRadioRXSettingsIndex">
            <enum_entry enum_label="WL_RADIO_CHANNEL_STATUS" enum_value="1" />
        </enum_def>
        <enum_def enum_name="unifiRadioCCADebugTableIndex">
            <enum_entry enum_label="CS_GAIN_THRESHOLD_STANDARD"         enum_value="1" />
            <enum_entry enum_label="CS_RSSI_THRESHOLD_STANDARD"         enum_value="2" />
            <enum_entry enum_label="CS_GAIN_THRESHOLD_REDUCED_PRE_GAIN" enum_value="3" />
            <enum_entry enum_label="CS_RSSI_THRESHOLD_REDUCED_PRE_GAIN" enum_value="4" />
        </enum_def>
        <enum_def enum_name="unifiNarrowbandCCADebugTableIndex">
            <enum_entry enum_label="CS_MODE"                        enum_value="1" />
            <enum_entry enum_label="PRI_THRESHOLD_STANDARD"         enum_value="2" />
            <enum_entry enum_label="SEC_THRESHOLD_STANDARD"         enum_value="3" />
        </enum_def>
        <enum_def enum_name="unifiAccessClassIndex">
            <enum_entry enum_label="AC_BK" enum_value="1" />
            <enum_entry enum_label="AC_BE" enum_value="2" />
            <enum_entry enum_label="AC_VI" enum_value="3" />
            <enum_entry enum_label="AC_VO" enum_value="4" />
        </enum_def>
        <enum_def enum_name="unifiDefaultCountryIndexVals">
            <enum_entry enum_label="country_code_default_idx" enum_value="1" />
            <enum_entry enum_label="country_code_vif1_idx" enum_value="2" />
            <enum_entry enum_label="country_code_vif2_idx" enum_value="3" />
            <enum_entry enum_label="country_code_end_idx" enum_value="4" />
        </enum_def>
        <enum_def enum_name="unifiHardwarePlatform">
            <enum_entry enum_label="PLATFORM_NOT_SET" enum_value ="0" />
            <enum_entry enum_label="UNIV2" enum_value="1" />
            <enum_entry enum_label="T20" enum_value="2" />
            <enum_entry enum_label="OPTIMUS" enum_value="3" />
            <enum_entry enum_label="ON5" enum_value="4" />
            <enum_entry enum_label="UNIV3" enum_value="5" />
            <enum_entry enum_label="J3POP" enum_value="6" />
            <enum_entry enum_label="XCOVER4" enum_value="7" />
            <enum_entry enum_label="KATMAI_SMDK" enum_value="8" />
            <enum_entry enum_label="PICO" enum_value="9" />
            <enum_entry enum_label="KATMAI_S612_SMDK" enum_value="10" />
            <enum_entry enum_label="J330F" enum_value="11" />
            <enum_entry enum_label="J330N" enum_value="12" />
            <enum_entry enum_label="XCOVER4_390W" enum_value="13" />
            <enum_entry enum_label="KATMAI_WIN_M1712" enum_value="14" />
            <enum_entry enum_label="KATMAI_WIN_MAESTRO" enum_value="15" />
            <enum_entry enum_label="KATMAI_WIN_S611_SMDK" enum_value="16" />
            <enum_entry enum_label="LASSEN_SMDK" enum_value="17" />
            <enum_entry enum_label="LEMAN_S620_SMDK" enum_value="18" />
            <enum_entry enum_label="LASSEN_UNIV" enum_value="19" />
            <enum_entry enum_label="TAB_E" enum_value="20" />
            <enum_entry enum_label="LASSEN_A6_SMA600_2018_04" enum_value="21" />
            <enum_entry enum_label="LASSEN_A5_REV02_2017_07" enum_value="23" />
            <enum_entry enum_label="LASSEN_A7_REV01_2017_07" enum_value="24" />
            <enum_entry enum_label="LASSEN_J3NEO_2017_08" enum_value="25" />
            <enum_entry enum_label="LASSEN_J3TOP" enum_value="26" />
            <enum_entry enum_label="LASSEN_J7TOP" enum_value="27" />
            <enum_entry enum_label="LASSEN_AVL" enum_value="28" />
            <enum_entry enum_label="LASSEN_J7DUO" enum_value="29" />
            <enum_entry enum_label="J3TOP" enum_value="30" />
            <enum_entry enum_label="J400F" enum_value="31" />
            <enum_entry enum_label="JAVA_J260G" enum_value="32" />
            <enum_entry enum_label="LASSEN_A6_SMA600A_2018_05" enum_value="33" />
            <enum_entry enum_label="JAVA_NU110" enum_value="34" />
            <enum_entry enum_label="LASSEN_A530D" enum_value="35" />
            <enum_entry enum_label="LASSEN_A6_SMA600T_2018_06" enum_value="36" />
            <enum_entry enum_label="KATMAI_WIN_M1712_FULLSCREEN" enum_value="37" />
            <enum_entry enum_label="LASSEN_GV2_2018_06" enum_value="38" />
            <enum_entry enum_label="LASSEN_A750_2018_07" enum_value="39" />
            <enum_entry enum_label="KATMAI_WIN_M1911" enum_value="40" />
            <enum_entry enum_label="JAVA_J260AZ" enum_value="41" />
            <enum_entry enum_label="LASSEN_J2COREPELTESPR" enum_value="42" />
            <enum_entry enum_label="LASSEN_G580F" enum_value="43" />
            <enum_entry enum_label="JAVA_LUXONE" enum_value="44" />
            <enum_entry enum_label="LASSEN_S610_TEMPLATE" enum_value="45" />
            <enum_entry enum_label="LASSEN_A8_WISDOM_2018_11" enum_value="46" />
            <enum_entry enum_label="LASSEN_TAB_A3_2018_11" enum_value="47" />
            <enum_entry enum_label="LASSEN_M30_2018_11" enum_value="48" />
            <enum_entry enum_label="LASSEN_A305FN_GLOBAL" enum_value="49" />
            <enum_entry enum_label="LASSEN_A20_2018_12" enum_value="50" />
            <enum_entry enum_label="LASSEN_A40_2018_12" enum_value="51" />
            <enum_entry enum_label="LASSEN_A10_2018_12" enum_value="52" />
            <enum_entry enum_label="LASSEN_A205U_2018_12" enum_value="53" />
            <enum_entry enum_label="LASSEN_A102U_2019_1" enum_value="54" />
            <enum_entry enum_label="LASSEN_A202F_2019_1" enum_value="55" />
            <enum_entry enum_label="LASSEN_XCOVER4S" enum_value="56" />
            <enum_entry enum_label="LASSEN_A305J_JPN" enum_value="57" />
            <enum_entry enum_label="LASSEN_A205W_2019_03" enum_value="58" />
            <enum_entry enum_label="LASSEN_A30C" enum_value="59" />
            <enum_entry enum_label="LASSEN_A10_KOR" enum_value="60" />
            <enum_entry enum_label="LASSEN_TAB_A3_US_2019_04" enum_value="61" />
            <enum_entry enum_label="LASSEN_A102D_JPN" enum_value="62" />
            <enum_entry enum_label="LASSEN_A307FN_2019_06" enum_value="63" />
            <enum_entry enum_label="LASSEN_A750C_2019_06" enum_value="64" />
            <enum_entry enum_label="LASSEN_TAB_A4_S_2019_09" enum_value="65" />
            <enum_entry enum_label="LASSEN_A40XX_2020_05" enum_value="66" />
        </enum_def>
        <enum_def enum_name="unifiDebugModulesIndex">
        <!-- MODULE_IDS_RESERVED is used to tell apart compressed debug words. -->
            <enum_entry enum_label="MODULE_IDS_COMPRESSED_DEBUG" enum_value="0" />
            <enum_entry enum_label="MODULE_IDS_MLME_SCAN" enum_value="1" />
            <enum_entry enum_label="MODULE_IDS_FAULTS" enum_value="2" />
            <enum_entry enum_label="MODULE_IDS_MLME_CME" enum_value="3" />
            <enum_entry enum_label="MODULE_IDS_MLME_CONMGR" enum_value="4" />
            <enum_entry enum_label="MODULE_IDS_MLME_MIB" enum_value="5" />
            <enum_entry enum_label="MODULE_IDS_MLME_MPDU_ROUTER" enum_value="6" />
            <enum_entry enum_label="MODULE_IDS_MLME_REQUESTS" enum_value="7" />
            <enum_entry enum_label="MODULE_IDS_MLME_VIFCTRL" enum_value="8" />
            <enum_entry enum_label="MODULE_IDS_MLME_CONNECT" enum_value="9" />
            <enum_entry enum_label="MODULE_IDS_MLME_DEVICE" enum_value="10" />
            <enum_entry enum_label="MODULE_IDS_RICE" enum_value="11" />
            <enum_entry enum_label="MODULE_IDS_RICE_SAP" enum_value="12" />
            <enum_entry enum_label="MODULE_IDS_WLANLITE" enum_value="13" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_SCHDL" enum_value="14" />
            <enum_entry enum_label="MODULE_IDS_PMALLOC" enum_value="15" />
            <enum_entry enum_label="MODULE_IDS_CME_MGMT" enum_value="16" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_DPLANE" enum_value="17" />
            <enum_entry enum_label="MODULE_IDS_MLME_BA" enum_value="18" />
            <enum_entry enum_label="MODULE_IDS_MLME_BA_TX" enum_value="19" />
            <enum_entry enum_label="MODULE_IDS_MLME_AP_STA" enum_value="20" />
            <enum_entry enum_label="MODULE_IDS_MLME_REGULATORY" enum_value="21" />
            <enum_entry enum_label="MODULE_IDS_MLME_NAN" enum_value="22" />
            <enum_entry enum_label="MODULE_IDS_HALRADIO" enum_value="23" />
            <enum_entry enum_label="MODULE_IDS_MLME_ROAMING" enum_value="24" />
            <enum_entry enum_label="MODULE_IDS_DATAPLANE" enum_value="25" />
            <enum_entry enum_label="MODULE_IDS_VACANT1" enum_value="26" />
            <enum_entry enum_label="MODULE_IDS_VACANT2" enum_value="27" />
            <enum_entry enum_label="MODULE_IDS_CRYPTO" enum_value="28" />
            <!-- COEX Note: DEBUG_COEX level should NOT exceed level 3 COEX task deinit has debugs defined at lvl4 which is aimed for Software testing (SWAT) only  -->
            <enum_entry enum_label="MODULE_IDS_COEX" enum_value="29" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_PS" enum_value="30" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_BLACKOUT" enum_value="31" />
            <enum_entry enum_label="MODULE_IDS_MLME_SA_QUERY" enum_value="32" />
            <enum_entry enum_label="MODULE_IDS_MLME_SEND_OFFCHANNEL" enum_value="33" />
            <enum_entry enum_label="MODULE_IDS_MLME_MEASUREMENTS" enum_value="34" />
            <enum_entry enum_label="MODULE_IDS_MLME_TDLS" enum_value="35" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_BEACON" enum_value="36" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_VIF" enum_value="37" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_OXYGEN" enum_value="38" /> <!-- DEPRECATED -->
            <enum_entry enum_label="MODULE_IDS_MACRAME_CALIBRATION" enum_value="39" />
            <enum_entry enum_label="MODULE_IDS_MACRAME" enum_value="40" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_TX" enum_value="41" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_COEX_API" enum_value="42" />
            <enum_entry enum_label="MODULE_IDS_MLME_DATA" enum_value="43" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_RADIO" enum_value="44" />
            <enum_entry enum_label="MODULE_IDS_MIB" enum_value="45" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_FILTER" enum_value="46" />
            <enum_entry enum_label="MODULE_IDS_HALRADIO_HW_COUNTERS" enum_value="47" />
            <enum_entry enum_label="MODULE_IDS_HALRADIO_CORE" enum_value="48" />
            <enum_entry enum_label="MODULE_IDS_RICE_RSSI" enum_value="49" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_MLME_API" enum_value="50" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_IDLE_LITE" enum_value="51" />
            <enum_entry enum_label="MODULE_IDS_MLME_MACRAME_API" enum_value="52" />
            <enum_entry enum_label="MODULE_IDS_MLME_MBULK" enum_value="53" />
            <enum_entry enum_label="MODULE_IDS_MLME_TXPOWER" enum_value="54" />
            <enum_entry enum_label="MODULE_IDS_PACKET_FILTER" enum_value="55" />
            <enum_entry enum_label="MODULE_IDS_MLME_WIFI_LOGGER" enum_value="56" />
            <enum_entry enum_label="MODULE_IDS_MACRAME_STATION" enum_value="57" />
            <enum_entry enum_label="MODULE_IDS_BIST" enum_value="58" />
            <enum_entry enum_label="MODULE_IDS_HALRADIO_COEX_FEM" enum_value="59" />
            <enum_entry enum_label="MODULE_IDS_MLME_IE" enum_value="60" />
            <enum_entry enum_label="MODULE_LAST_ID" enum_value="61" />
        </enum_def>
        <enum_def enum_name="unifiBandTableIndex">
            <enum_entry enum_label="BAND_2G" enum_value="1" />
            <enum_entry enum_label="BAND_5G" enum_value="2" />
        </enum_def>
        <enum_def enum_name="unifiBWTableIndex">
            <enum_entry enum_label="BW20" enum_value="1" />
            <enum_entry enum_label="BW40" enum_value="2" />
            <enum_entry enum_label="BW80" enum_value="3" />
        </enum_def>
        <enum_def enum_name="unifiSisoMimoTableIndex">
            <enum_entry enum_label="SINGLE_RADIO" enum_value="1" />
            <enum_entry enum_label="MIMO"         enum_value="2" />
        </enum_def>
        <enum_def enum_name="unifiMacBusyTimeTableIndex">
            <enum_entry enum_label="PRI20" enum_value="1" />
            <enum_entry enum_label="SEC20" enum_value="2" />
            <enum_entry enum_label="SEC40" enum_value="3" />
        </enum_def>
        <enum_def enum_name="unifiRoamRssiFactorTableIndex">
            <enum_entry enum_label="RSSI_NEG_55" enum_value="1" />
            <enum_entry enum_label="RSSI_NEG_60" enum_value="2" />
            <enum_entry enum_label="RSSI_NEG_70" enum_value="3" />
            <enum_entry enum_label="RSSI_NEG_80" enum_value="4" />
            <enum_entry enum_label="RSSI_NEG_90" enum_value="5" />
            <enum_entry enum_label="RSSI_NEG_127" enum_value="6" />
        </enum_def>
        <enum_def enum_name="unifiRoamCUFactorTableIndex">
            <enum_entry enum_label="CU_LOW_2G" enum_value="1" />
            <enum_entry enum_label="CU_MID_2G" enum_value="2" />
            <enum_entry enum_label="CU_HIGH_2G" enum_value="3" />
            <enum_entry enum_label="CU_LOW_5G" enum_value="4" />
            <enum_entry enum_label="CU_MID_5G" enum_value="5" />
            <enum_entry enum_label="CU_HIGH_5G" enum_value="6" />
        </enum_def>
        <enum_def enum_name="unifiWifiLogger">
            <enum_entry enum_label="Disabled" enum_value="0" />
            <enum_entry enum_label="Partial" enum_value="1" />
            <enum_entry enum_label="Full" enum_value="2" />
        </enum_def>
        <enum_def enum_name="unifiAntennaMode">
            <enum_entry enum_label="SISO" enum_value="0" />
            <enum_entry enum_label="MIMO_2x2" enum_value="1" />
            <enum_entry enum_label="MIMO_3x3" enum_value="2" />
            <enum_entry enum_label="MIMO_4x4" enum_value="3" />
        </enum_def>
        <enum_def enum_name="unifiRoamingAKM">
            <enum_entry enum_label="AKM_None" enum_value="0" />
            <enum_entry enum_label="AKM_OKC" enum_value="1" />
            <enum_entry enum_label="AKM_FT_1X" enum_value="2" />
            <enum_entry enum_label="AKM_PSK" enum_value="3" />
            <enum_entry enum_label="AKM_FT_PSK" enum_value="4" />
            <enum_entry enum_label="AKM_PMKSA_Caching" enum_value="5" />
        </enum_def>
        <enum_def enum_name="unifiFrameTXCountersTableIndexEnum">
            <!-- Index = 1  Tx Good Count - shall be incremented for each data and management packet successfully transmitted. -->
            <!-- Index = 2  Tx Bad Count - shall be incremented for each data and management  packet that fails due to either
            Tx_lifetime, max_retry or unspecified failure -->
            <!-- Index = 3  Tx Retry Count - shall be incremented for each data and management packet that is transmitted
            successfully but retried at least once -->
            <enum_entry enum_label="tx_good" enum_value="1" />
            <enum_entry enum_label="tx_bad" enum_value="2" />
            <enum_entry enum_label="tx_retry" enum_value="3" />
        </enum_def>
        <enum_def enum_name="unifiFrameRXCountersTableIndexEnum">
            <!-- Index = 1  Rx Good Count - shall be incremented for each data and management packet successfully received -->
            <enum_entry enum_label="rx_good" enum_value="1" />
        </enum_def>

        <config_element name="unifiDefaultCountryIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>3</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiQueueStatsIndex" psid="0">
            <type>integer</type>
            <range_min>0</range_min><range_max>15</range_max>
            <description_user>Index for unifiQueueStatsIdTable</description_user>
        </config_element>
        <config_element name="dot11RSNAConfigIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>1</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="dot11RSNAStatsIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>6</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiBeamformingPhaseSTS" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>4</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiPrivateOnlyPatchIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiRateStatsIndex" psid="0">
            <type>unifiRateStatsIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiThroughputDebugIndex" psid="0">
            <type>unifiThroughputDebugIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiPeerIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>10</range_max>
            <description_user>Index for unifiPeerIdTable</description_user>
        </config_element>
        <config_element name="unifiRadioRXSettingsIndex" psid="0">
            <type>unifiRadioRXSettingsIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiRadioCCADebugTableIndex" psid="0">
            <type>unifiRadioCCADebugTableIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiNarrowbandCCADebugTableIndex" psid="0">
            <type>unifiNarrowbandCCADebugTableIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiReadRegIndex" psid="0">
            <type>integer</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiMacInstanceIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>8</range_max>
            <description_user>mac instance index.  Note that there is an offset of 1 so that mac_instance == 0 matches unifiMacInstanceIndex == 1</description_user>
        </config_element>
        <config_element name="unifiRadioInstanceIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>8</range_max>
            <description_user>Radio instance index.  Note that there is an offset of 1 so that radio_instance == 0 matches unifiRadioInstanceIndex == 1</description_user>
        </config_element>
        <config_element name="unifiLoadDpdLutGroupIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>3</range_max>
            <description_user>group index</description_user>
        </config_element>
        <config_element name="unifiLoadDpdLutTemperatureIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>3</range_max>
            <description_user>temperature index</description_user>
        </config_element>
        <config_element name="unifiRadioCCAThresholdsTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxSettingsTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxGainSettingsTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiRadioTXPowerOverrideTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>2</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxPowerDetectorResponseTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxDetectorTemperatureCompensationTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxDetectorFrequencyCompensationTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxOpenLoopTemperatureCompensationTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxOpenLoopFrequencyCompensationTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxPaGainDpdTemperatureCompensationTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxPaGainDpdFrequencyCompensationTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxFtrimSettingsTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxGainStepSettingsTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiDpdPredistortGainsTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxPowerTrimConfigTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxAntennaConnectionLossTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>32</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxAntennaMaxGainTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>32</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiRxExternalGainTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>32</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiDebugControlTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>32</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxOOBConstraintTableIndex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>255</range_max>
            <description_user>Index for unifiTxOOBConstraintTable</description_user>
        </config_element>
        <config_element name="unifiRegulatoryTableIndex" psid="0">
            <description_user>Index for unifiRegulatoryTable</description_user>
            <type>integer</type>
            <range_min>1</range_min><range_max>500</range_max>
        </config_element>
        <config_element name="unifiAccessClassIndex" psid="0">
            <type>unifiAccessClassIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiSisoMimoTableIndex" psid="0">
            <type>unifiSisoMimoTableIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiReadHardwareCounterIndex" psid="0">
            <type>unifiReadHardwareCounterIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiRadioTXSettingsIndex" psid="0">
            <type>unifiRadioTXSettingsIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiTxPowerAdjustTableIndex" psid="0">
            <type>integer</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiPeerid" psid="0">
            <type>integer</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiBWTableIndex" psid="0">
            <type>unifiBWTableIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="hutsReadWriteTableInt16" psid="0">
            <type>integer</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="hutsReadWriteTableOctetString" psid="0">
            <type>integer</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="hutsReadWriteRPCTableOctetStringTableIndex0" psid="0">
            <type>integer</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="hutsReadWriteRPCTableOctetStringTableIndex1" psid="0">
            <type>integer</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIFixedSizeTableIndex" psid="0">
            <type>integer</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIFixSizeTableKeysindex" psid="0">
            <type>integer</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIFixVarSizeTableKeysIndex" psid="0">
            <type>integer</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiDPDTrainPacketConfigIndex" psid="0">
            <type>integer</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiBandTableIndex" psid="0">
            <type>unifiBandTableIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiMacBusyTimeTableIndex" psid="0">
            <type>unifiMacBusyTimeTableIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiDebugModulesIndex" psid="0">
            <type>unifiDebugModulesIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiRoamRssiFactorTableIndex" psid="0">
            <type>unifiRoamRssiFactorTableIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiRoamCUFactorTableIndex" psid="0">
            <type>unifiRoamCUFactorTableIndex</type>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="unifiFrameTXCountersTableIndex" psid="0">
            <description_user>table index</description_user>
            <type>unifiFrameTXCountersTableIndexEnum</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiFrameRXCountersTableIndex" psid="0">
            <description_user>table index</description_user>
            <type>unifiFrameRXCountersTableIndexEnum</type>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11ACKFailureCount" psid="148">
            <description_user>This counter shall increment when an ACK is not received when expected.</description_user>
            <access_rights>read_only</access_rights>
            <type>int64</type>
            <range_min>0</range_min><range_max>4294967295</range_max>
            <function type="get" function_name="mibpktcntget" is_for_vif="true"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11FCSErrorCount" psid="151">
            <description_user>This counter shall increment when an FCS error is detected in a received MPDU.</description_user>
            <access_rights>read_only</access_rights>
            <type>int64</type>
            <range_max>4294967295</range_max>
            <function type="get" function_name="mibpktcntget" is_for_vif="true"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11FragmentationThreshold" psid="124">
            <description_user>Current maximum size, in octets, of the MPDU that may be delivered to the security encapsulation. This maximum size does not apply when an MSDU is transmitted using an HT-immediate or HTdelayed Block Ack agreement, or when an MSDU or MMPDU is carried in an AMPDU that does not contain a VHT single MPDU. Fields added to the frame by security encapsulation are not counted against the limit specified. Except as described above, an MSDU or MMPDU is fragmented when the resulting frame has an individual address in the Address1 field, and the length of the frame is larger than this threshold, excluding security encapsulation fields. The default value is the lesser of 11500 or the aMPDUMaxLength or the aPSDUMaxLength of the attached PHY and the value never exceeds the lesser of 11500 or the aMPDUMaxLength or the aPSDUMaxLength of the attached PHY.</description_user>
            <type>uint16</type>
            <range_min>256</range_min><range_max>11500</range_max><default>3000</default>
            <function_list>
                <function type="get" function_name="mibuint16get" is_for_vif="true"></function>
                <function type="set" function_name="mibuint16set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11LongRetryLimit" psid="123">
            <description_user>Maximum number of transmission attempts of a frame, the length of which is greater than dot11RTSThreshold, that shall be made before a failure condition is indicated.</description_user>
            <type>uint16</type>
            <range_min>1</range_min><range_max>255</range_max><default>4</default>
            <function_list>
                <function type="get" function_name="mibuint16get" is_for_vif="true"></function>
                <function type="set" function_name="mibuint16set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11MulticastReceivedFrameCount" psid="150">
            <description_user>This counter shall increment when a MSDU is received with the multicast bit set in the destination MAC address.</description_user>
            <access_rights>read_only</access_rights>
            <type>int64</type>
            <range_min>0</range_min><range_max>4294967295</range_max>
            <function type="get" function_name="mibpktcntget" is_for_vif="true"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11RSNAStatsCCMPDecryptErrors" psid="437">
            <description_user>The number of received MPDUs discarded by the CCMP decryption algorithm.</description_user>
            <access_rights>read_only</access_rights>
            <type>int64</type>
            <range_min>0</range_min><range_max>4294967295</range_max>
            <table_name>dot11RSNAStatsTable</table_name>
            <function type="get" function_name="mibrsnastatsget"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11RSNAStatsCCMPReplays" psid="436">
            <description_user>The number of received CCMP MPDUs discarded by the replay mechanism.</description_user>
            <access_rights>read_only</access_rights>
            <type>int64</type>
            <range_min>0</range_min><range_max>4294967295</range_max>
            <table_name>dot11RSNAStatsTable</table_name>
            <function type="get" function_name="mibrsnastatsget"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11RSNAStatsRobustMgmtCCMPReplays" psid="441">
            <description_user>The number of received Robust Management frame MPDUs discarded due to CCMP replay errors</description_user>
            <access_rights>read_only</access_rights>
            <type>int64</type>
            <range_min>0</range_min><range_max>4294967295</range_max>
            <table_name>dot11RSNAStatsTable</table_name>
            <function type="get" function_name="mibrsnastatsget"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11RSNAStatsSTAAddress" psid="430">
            <description_user>The MAC address of the STA to which the statistics in this conceptual row belong.</description_user>
            <access_rights>read_only</access_rights>
            <type>octet_string</type>
            <table_name>dot11RSNAStatsTable</table_name>
            <function type="get" function_name="mibrsnastatsget"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11RSNAStatsTKIPICVErrors" psid="433">
            <description_user>Counts the number of TKIP ICV errors encountered when decrypting packets for the STA.</description_user>
            <access_rights>read_only</access_rights>
            <type>int64</type>
            <range_min>0</range_min><range_max>4294967295</range_max>
            <table_name>dot11RSNAStatsTable</table_name>
            <function type="get" function_name="mibrsnastatsget"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11RSNAStatsTKIPLocalMICFailures" psid="434">
            <description_user>Counts the number of MIC failures encountered when checking the integrity of packets received from the STA at this entity.</description_user>
            <access_rights>read_only</access_rights>
            <type>int64</type>
            <range_min>0</range_min><range_max>4294967295</range_max>
            <table_name>dot11RSNAStatsTable</table_name>
            <function type="get" function_name="mibrsnastatsget"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11RSNAStatsTKIPRemoteMICFailures" psid="435">
            <description_user>Counts the number of MIC failures encountered by the STA identified by dot11RSNAStatsSTAAddress and reported back to this entity.</description_user>
            <access_rights>read_only</access_rights>
            <type>int64</type>
            <range_min>0</range_min><range_max>4294967295</range_max>
            <table_name>dot11RSNAStatsTable</table_name>
            <function type="get" function_name="mibrsnastatsget"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11RSNAStatsTKIPReplays" psid="438">
            <description_user>Counts the number of TKIP replay errors detected.</description_user>
            <access_rights>read_only</access_rights>
            <type>int64</type>
            <range_min>0</range_min><range_max>4294967295</range_max>
            <table_name>dot11RSNAStatsTable</table_name>
            <function type="get" function_name="mibrsnastatsget"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11RTSSuccessCount" psid="146">
            <description_user>This counter shall increment when a CTS is received in response to an RTS.</description_user>
            <access_rights>read_only</access_rights>
            <type>int64</type>
            <range_min>0</range_min><range_max>4294967295</range_max>
            <function type="get" function_name="mibpktcntget" is_for_vif="true"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11RTSThreshold" psid="121">
            <description_user>Size of an MPDU, below which an RTS/CTS handshake shall not be performed, except as RTS/CTS is used as a cross modulation protection mechanism as defined in 9.10. An RTS/CTS handshake shall be performed at the beginning of any frame exchange sequence where the MPDU is of type Data or Management, the MPDU has an individual address in the Address1 field, and the length of the MPDU is greater than this threshold. (For additional details, refer to Table 21 in 9.7.) Setting larger than the maximum MSDU size shall have the effect of turning off the RTS/CTS handshake for frames of Data or Management type transmitted by this STA. Setting to zero shall have the effect of turning on the RTS/CTS handshake for all frames of Data or Management type transmitted by this STA.</description_user>
            <type>uint16</type>
            <units>octet</units>
            <range_min>0</range_min><range_max>65536</range_max><default>9000</default>
            <function_list>
                <function type="get" function_name="mibuint16get" is_for_vif="true"></function>
                <function type="set" function_name="mibuint16set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11ShortRetryLimit" psid="122">
            <description_user>Maximum number of transmission attempts of a frame, the length of which is less than or equal to dot11RTSThreshold, that shall be made before a failure condition is indicated.</description_user>
            <type>uint16</type>
            <range_min>1</range_min><range_max>255</range_max><default>15</default>
            <function_list>
                <function type="get" function_name="mibuint16get" is_for_vif="true"></function>
                <function type="set" function_name="mibuint16set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11WEPUndecryptableCount" psid="153">
            <description_user>This counter shall increment when a frame is received with the WEP subfield of the Frame Control field set to one and the WEPOn value for the key mapped to the transmitter&apos;s MAC address indicates that the frame should not have been encrypted or that frame is discarded due to the receiving STA not implementing the privacy option.</description_user>
            <access_rights>read_only</access_rights>
            <type>int64</type>
            <range_min>0</range_min><range_max>4294967295</range_max>
            <function type="get" function_name="mibpktcntget" is_for_vif="true"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11manufacturerProductVersion" psid="183">
            <description_user>Printable string used to identify the manufacturer&apos;s product version of the resource.</description_user>
            <description_internal>This string is generated automatically by the build process. It contains the time and date that the build was made, the release configuration used (which itself incorporates the target chip family and variant, whether it is a flash or RAM build, and the host interface), the unique build number, and details of the user account and machine used to produce the build.</description_internal>
            <access_rights>read_only</access_rights>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>300</range_max>
            <function type="get" function_name="mibgetfirmwareproductversion"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11AssociationSAQueryMaximumTimeout" psid="100">
            <description_user>Number of time units (TUs) that an AP can wait, from the scheduling of the first SA Query Request to allow association process to be started without starting additional SA Query procedure if a successful SA Query Response is not received.</description_user>
            <type>uint32</type>
            <units>TU</units>
            <range_min>0</range_min><range_max>4294967295</range_max><default>1000</default>
            <nature>software</nature>
        </config_element>
        <config_element name="dot11AssociationSAQueryRetryTimeout" psid="101">
            <description_user>Number of time units (TUs) that an AP waits between issuing two subsequent SA Query Request frames.</description_user>
            <type>uint32</type>
            <units>TU</units>
            <range_min>1</range_min><range_max>4294967295</range_max><default>201</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiAPSDServicePeriodTimeout" psid="2515">
            <description_user>During Unscheduled Automated Power Save Delivery (U-APSD), UniFi may trigger a service period in order to fetch data from the access point. The service period is normally terminated by a frame from the access point with the EOSP (End Of Service Period) flag set, at which point UniFi returns to sleep. However, if the access point is temporarily inaccessible, UniFi would stay awake indefinitely. Specifies a timeout starting from the point where the trigger frame has been sent. If the timeout expires and no data has been received from the access point, UniFi will behave as if the service period had been ended normally and return to sleep. This timeout takes precedence over unifiPowerSaveExtraListenTime if both would otherwise be applicable.</description_user>
            <units>&#x00b5;s</units>
            <type>uint16</type>
            <default>20000</default>
            <function_list>
                <function type="get" function_name="mibuint16get" is_for_vif="true"></function>
                <function type="set" function_name="mibuint16set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiLegacyPsPollTimeout" psid="2520">
            <description_user>Time we try to stay awake after sending a PS-POLL to receive data.</description_user>
            <units>&#x00b5;s</units>
            <type>uint16</type>
            <default>15000</default>
            <function_list>
                <function type="get" function_name="mibuint16get" is_for_vif="true"></function>
                <function type="set" function_name="mibuint16set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiBasicCapabilities" psid="2030">
            <description_user>The 16-bit field follows the coding of IEEE 802.11 Capability Information.</description_user>
            <type>uint16</type>
            <default>0x0730</default>
            <nature>software</nature>
        </config_element>
        <!-- Tx Power Control -->
        <config_element name="dot11PowerCapabilityMaxImplemented" psid="112">
            <description_user>Rice: Maximum Tx Power Capability at the antenna port (quarter dBm). Fixed per platform.</description_user>
            <access_rights>read_only</access_rights>
            <type>int16</type>
            <function type="get" function_name="mibmaxpowerget"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="dot11PowerCapabilityMinImplemented" psid="113">
            <description_user>Rice: Minimum Tx Power Capability at the antenna port (quarter dBm). Fixed per platform.</description_user>
            <access_rights>read_only</access_rights>
            <type>int16</type>
            <function type="get" function_name="mibminpowerget"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiUserSetTxpowerLevel" psid="6021">
            <description_user>Maximum User Set Tx Power (quarter dBm). For Test only.</description_user>
            <type>int16</type>
            <default>127</default>
            <function_list>
                <function type="set" function_name="mlmeusersettxpowerlevel"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiConnectionTypeTableIndex" psid="0">
            <description_user>Index by modulation, Index 1: 11b, Index 2: 11g, Index 3: 11n, Index 4: 11ac</description_user>
            <type>integer</type>
            <range_min>1</range_min><range_max>4</range_max>
        </config_element>
        <config_element name="unifiNoCellMaxPower" psid="8017">
            <description_user>Max power values for included channels (quarter dBm).</description_user>
            <type>int16</type>
            <table_name>unifiNoCellTable</table_name>
            <default_list>
                <default index1="1"> 28 </default> <!-- 802.11b  -->
                <default index1="2"> 28 </default> <!-- 802.11g  -->
                <default index1="3"> 20 </default> <!-- 802.11n  -->
                <default index1="4"> 20 </default> <!-- 802.11ac -->
            </default_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiNoCellIncludedChannels" psid="8018">
            <description_user>Channels applicable. Defined in a uint64 represented by the octet string.
            First byte of the octet string maps to LSB. Bit 0 maps to channel 1. Mapping defined in mlme_freq_list[].</description_user>
            <type>octet_string</type>
            <range_min>8</range_min><range_max>8</range_max>
            <default>{ 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiSarBackoff" psid="6026">
            <description_user>Max power values for included channels (quarter dBm).</description_user>
            <type>int16</type>
            <table_name>unifiSarBackoffTable</table_name>
            <default_list>
                <default index1="1"> 60 </default> <!-- 2.4  -->
                <default index1="2"> 52 </default> <!-- 5  -->
            </default_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTPCMaxPowerRSSIThreshold" psid="6022">
            <description_user>Macrame: Below this (dBm) threshold, switch to max power allowed by regulatory.
            If it has been previously reduced due to unifiTPCMinPowerRSSIThreshold.</description_user>
            <default>-55</default>
            <type>int16</type>
            <function_list>
                <function type="set" function_name="mibint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibint16get" is_for_vif="false" ></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTPCMinPowerRSSIThreshold" psid="6023">
            <description_user>Macrame: Above this(dBm) threshold, switch to minimum hardware supported - capped by unifiTPCMinPower2G(2.4G) or unifiTPCMinPower5G(5G).
            A Zero value reverts the power to a default state.</description_user>
            <default>-45</default>
            <type>int16</type>
            <function_list>
                <function type="set" function_name="mibint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibint16get" is_for_vif="false" ></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTPCMinPower2G" psid="6024">
            <description_user>Macrame: Minimum power for 2.4GHz interface when RSSI is above unifiTPCMinPowerRSSIThreshold (quarter dbm).
            Should be greater than dot11PowerCapabilityMinImplemented.</description_user>
            <default>52</default>
            <type>int16</type>
            <function_list>
                <function type="set" function_name="mibint16set" is_for_vif="false" ></function>
            </function_list>
            <nature>software</nature>
         </config_element>
        <config_element name="unifiTPCMinPower5G" psid="6025">
            <description_user>Macrame: Minimum power for 5 GHz interface when RSSI is above unifiTPCMinPowerRSSIThreshold (quarter dbm).
            Should be greater than dot11PowerCapabilityMinImplemented.</description_user>
            <default>40</default>
            <type>int16</type>
            <function_list>
                <function type="set" function_name="mibint16set" is_for_vif="false" ></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPrivateBbbTxFilterConfig" psid="4071">
            <description_user>entry is written directly to the BBB_TX_FILTER_CONFIG register. Only the lower eight bits of this register are implemented . Bits 0-3 are the &apos;Tx Gain&apos;, bits 6-8 are the &apos;Tx Delay&apos;. This register should only be changed by an expert.</description_user>
            <is_internal>true</is_internal>
            <type>uint16</type>
            <default>0x17</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiWapiQosMask" psid="4130">
            <description_user>Forces the WAPI encryption hardware use the QoS mask specified.</description_user>
            <is_internal>true</is_internal>
            <type>uint16</type>
            <default>15</default>
            <function_list>
                <function type="get" function_name="mibuint16get"></function>
                <function type="set" function_name="mibuint16set"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiCSROnlyMIBShield" psid="4001">
            <description_user>Each element of the MIB has a set of read/write access constraints that may be applied when the element is accessed by the host. For most elements the constants are derived from their MAX-ACCESS clauses. unifiCSROnlyMIBShield controls the access mechanism. If this entry is set to &apos;warn&apos;, when the host makes an inappropriate access to a MIB variable (e.g., writing to a &apos;read-only&apos; entry) then the firmware attempts to send a warning message to the host, but access is allowed to the MIB variable. If this entry is set to &apos;guard&apos; then inappropriate accesses from the host are prevented. If this entry is set to &apos;alarm&apos; then inappropriate accesses from the host are prevented and the firmware attempts to send warning messages to the host. If this entry is set to &apos;open&apos; then no access constraints are applied and now warnings issued. Note that certain MIB entries have further protection schemes. In particular, the
                MIB prevents the host from reading some security keys (WEP keys, etc.).</description_user>
            <is_internal>true</is_internal>
            <access_rights>not_accessible</access_rights>
            <type>unifiCSROnlyMIBShield</type>
            <default>2</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPsPollThreshold" psid="4179">
            <type>uint16</type>
            <description_user>PS Poll threshold. When Unifi chip is configured for normal power save mode and when access point does not respond to PS-Poll requests, then a fault will be generated on non-zero PS Poll threshold indicating mode has been switched from power save to fast power save. Ignored PS Poll count is given as the fault argument.</description_user>
            <default>30</default>
            <function_list>
                <function type="get" function_name="mibuint16get" is_for_vif="true"></function>
                <function type="set" function_name="mibuint16set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPostEBRTWindow" psid="4173">
            <description_user>Minimum time after the expected beacon reception time that UniFi will continue to listen for the beacon in an infrastructure BSS before timing out. Reducing this value can reduce UniFi power consumption when using low power modes, however a value which is too small may cause beacons to be missed, requiring the radio to remain on for longer periods to ensure reception of the subsequent beacon.</description_user>
            <is_internal>true</is_internal>
            <units>&#x00b5;s</units>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <range_max>2147483647</range_max><default>2000</default>
            <function_list>
                <function type="get" function_name="mibuint32get" is_for_vif="true"></function>
                <function type="set" function_name="mibuint32set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiCSROnlyPowerCalDelay" psid="4078">
            <description_user>Delay applied at each step of the power calibration routine used with an external PA.</description_user>
            <is_internal>true</is_internal>
            <units>&#x00b5;s</units>
            <type>uint16</type>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPreEBRTWindow" psid="4171">
            <description_user>Latest time before the expected beacon reception time that UniFi will turn on its radio in order to receive the beacon. Reducing this value can reduce UniFi power consumption when using low power modes, however a value which is too small may cause beacons to be missed, requiring the radio to remain on for longer periods to ensure reception of the subsequent beacon.</description_user>
            <is_internal>true</is_internal>
            <units>&#x00b5;s</units>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <range_max>2147483647</range_max><default>100</default>
            <function_list>
                <function type="get" function_name="mibuint32get" is_for_vif="true"></function>
                <function type="set" function_name="mibuint32set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPrivateSWAGCExtThresh" psid="4077">
            <description_user>Signal level at which external LNA will be used for AGC purposes.</description_user>
            <is_internal>true</is_internal>
            <type>int16</type>
            <range_min>-128</range_min><range_max>127</range_max><default>-25</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPrivateSWAGCFrontEndGain" psid="4075">
            <description_user>Gain of the path between chip and antenna when LNA is on.</description_user>
            <is_internal>true</is_internal>
            <type>int16</type>
            <range_min>-128</range_min><range_max>127</range_max><default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPrivateSWAGCFrontEndLoss" psid="4076">
            <description_user>Loss of the path between chip and antenna when LNA is off.</description_user>
            <is_internal>true</is_internal>
            <type>int16</type>
            <range_min>-128</range_min><range_max>127</range_max><default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiChipVersion" psid="2022">
            <description_user>Numeric identifier for the UniFi silicon revision (as returned by the GBL_CHIP_VERSION hardware register). Other than being different for each design variant (but not for alternative packaging options), the particular values returned do not have any significance.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiClockFrequency" psid="2140">
            <description_user>Query the nominal frequency of the external clock source or crystal oscillator used by UniFi. The clock frequency is a system parameter and can not be modified by key.</description_user>
            <units>kHz</units>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mibuint16get"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiCrystalFrequencyTrim" psid="2141">
            <description_user>The IEEE 802.11 standard requires a frequency accuracy of either +/- 20 ppm or +/- 25 ppm depending on the physical layer being used. If UniFi&apos;s frequency reference is a crystal then this attribute should be used to tweak the oscillating frequency to compensate for design- or device-specific variations. Each step change trims the frequency by approximately 2 ppm.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <range_max>63</range_max><default>31</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDTIMWaitTimeout" psid="2529">
            <description_user>If UniFi is in power save and receives a Traffic Indication Map from its associated access point with a DTIM indication, it will wait a maximum time given by this attribute for succeeding broadcast or multicast traffic, or until it receives such traffic with the &apos;more data&apos; flag clear. Any reception of broadcast or multicast traffic with the &apos;more data&apos; flag set, or any reception of unicast data, resets the timeout. The timeout can be turned off by setting the value to zero; in that case UniFi will remain awake indefinitely waiting for broadcast or multicast data. Otherwise, the value should be larger than that of unifiPowerSaveExtraListenTime.</description_user>
            <units>&#x00b5;s</units>
            <type>uint16</type>
            <default>50000</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDebugKeepRadioOn" psid="2545">
            <description_user>Keep the radio on. For debug purposes only. Setting the value to FALSE means radio on/off functionality will behave normally. Note that setting this value to TRUE will automatically disable dorm. The intention is *not* for this value to be changed at runtime.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiEnableDorm" psid="2142">
            <description_user>Enable Dorm (deep sleep). When disabled, WLAN will not switch the radio power domain on/off *and* it will always veto deep sleep. Setting the value to TRUE means dorm functionality will behave normally. The intention is *not* for this value to be changed at runtime.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTogglePowerDomain" psid="2522">
            <description_user>Toggle WLAN power domain when entering dorm mode (deep sleep). When entering deep sleep and this value it true, then the WLAN power domain is disabled for the deep sleep duration. When false, the power domain is left turned on. This is to work around issues with WLAN rx, and is considered temporary until the root cause is found and fixed.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiDisableDormWhenBtOn" psid="2143">
            <description_user>Dorm/deep sleep would be dynamically disabled when BT is turned ON if the value is TRUE, even though unifiEnableDorm is TRUE. For more details, take a look at SSB-17864.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDiscardedFrameCount" psid="2214">
            <description_user>This is a counter that indicates the number of data and management frames that have been processed by the UniFi hardware but were discarded before being processed by the firmware. It does not include frames not processed by the hardware because they were not addressed to the local device, nor does it include frames discarded by the firmware in the course of normal MAC processing (which include, for example, frames in an appropriate encryption state and multicast frames not requested by the host). Typically this counter indicates lost data frames for which there was no buffer space; however, other cases may cause the counter to increment, such as receiving a retransmitted frame that was already successfully processed. Hence this counter should not be treated as a reliable guide to lost frames. The counter wraps to 0 after 65535.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mibpktcntget" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiCurrentTSFTime" psid="2218">
            <description_user>Get TSF time (last 32 bits) for the specified VIF. VIF index can't be 0 as that is treated as global VIF For station VIF - Correct BSS TSF wil only be reported after MLME-CONNECT.indication(success) indication to host. Note that if MAC Hardware is switched off then TSF returned is estimated value</description_user>
            <access_rights>read_only</access_rights>
            <type>int64</type>
            <function_list>
                <function type="get" function_name="mibtsftime" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiExtendedCapabilitiesSoftAp" psid="2024">
            <description_user>Extended capabilities for SoftAp. Bit field definition and coding follows IEEE 802.11 Extended Capability Information Element, with spare subfields for capabilities that are independent from chip/firmware implementation.</description_user>
            <type>octet_string</type>
            <range_min>9</range_min><range_max>9</range_max><default>{ 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00 }</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiExtendedCapabilities" psid="2031">
            <description_user>Extended capabilities. Bit field definition and coding follows IEEE 802.11 Extended Capability Information Element, with spare subfields for capabilities that are independent from chip/firmware implementation.</description_user>
            <type>octet_string</type>
            <range_min>9</range_min><range_max>9</range_max>
            <default>{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00 }</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiExtendedCapabilitiesDisabled" psid="2036">
            <description_user>This MIB can be used to suppress extended capabilities IE being sent in the association request. Please note that this may fix IOP issues with Aruba APs in WMMAC an
            </description_user>
            <access_rights>read_write</access_rights>
            <type>boolean</type>
            <format>signed_decimal</format>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiExternalClockDetect" psid="2146">
            <description_user>If UniFi is running with an external fast clock source, i.e. unifiExternalFastClockRequest is set, it is common for this clock to be shared with other devices. Setting to true causes UniFi to detect when the clock is present (presumably in response to a request from another device), and to perform any pending activities at that time rather than requesting the clock again some time later. This is likely to reduce overall system power consumption by reducing the total time that the clock needs to be active.</description_user>
            <access_rights>read_only</access_rights>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiExternalFastClockRequest" psid="2149">
            <description_user>It is possible to supply UniFi with an external fast reference clock, as an alternative to using a crystal. If such a clock is used then it is only required when UniFi is active. A signal can be output on PIO[2] or if the version of UniFi in use is the UF602x or later, any PIO may be used (see unifiExternalFastClockRequestPIO) to indicate when UniFi requires a fast clock. Setting makes this signal become active and determines the type of signal output. 0 - No clock request. 1 - Non inverted, totem pole. 2 - Inverted, totem pole. 3 - Open drain. 4 - Open source.</description_user>
            <access_rights>read_only</access_rights>
            <type>unifiExternalFastClockRequest</type>
            <default>1</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiExternalFastClockRequestPIO" psid="2158">
            <description_user>If an external fast reference clock is being supplied to UniFi as an alternative to a crystal (see unifiExternalFastClockRequest) and the version of UniFi in use is the UF602x or later, any PIO may be used as the external fast clock request output from UniFi. key determines the PIO to use.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <range_max>15</range_max><default>9</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiFastPowerSaveTimeout" psid="2500">
            <description_user>UniFi implements a proprietary power management mode called Fast Power Save that balances network performance against power consumption. In this mode UniFi delays entering power save mode until it detects that there has been no exchange of data for the duration of time specified.</description_user>
            <units>&#x00b5;s</units>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <range_max>2147483647</range_max><default>400000</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiFastPowerSaveTimeOutSmall" psid="2501">
            <description_user>UniFi implements a proprietary power management mode called Fast Power Save that balances network performance against power consumption. In this mode UniFi delays entering power save mode until it detects that there has been no exchange of data for the duration of time specified. The unifiFastPowerSaveTimeOutSmall aims to improve the power consumption by setting a lower bound for the Fast Power Save Timeout. If set with a value above unifiFastPowerSaveTimeOut it will default to unifiFastPowerSaveTimeOut.</description_user>
            <units>&#x00b5;s</units>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <range_max>2147483647</range_max><default>200000</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRameDplaneOperationTimeout" psid="2544">
            <description_user>Timeout for requests sent from MACRAME to Data Plane. Any value below 1000ms will be capped at 1000ms.</description_user>
            <units>milliseconds</units>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <default>1000</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiVifIdleMonitorTime" psid="2509">
            <description_user>In Fast Power Save mode, the STA will decide whether it is idle based on monitoring its traffic class. If the traffic class is continuously "occasional" for equal or longer than the specified value (in seconds), then the VIF is marked as idle. Traffic class monitoring is based on the interval specified in the "unifiExitPowerSavePeriod" MIB</description_user>
            <units>second</units>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <range_max>1800</range_max><default>1</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiFirmwareBuildID" psid="2021">
            <description_user>Numeric build identifier for this firmware build. This should normally be displayed in decimal. The textual build identifier is available via the standard dot11manufacturerProductVersion MIB attribute.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <function type="get" function_name="mibgetfirmwarebuildid"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiFirmwarePatchBuildID" psid="2023">
            <description_user>Numeric build identifier for the patch set that has been applied to this firmware image. This should normally be displayed in decimal. For a patched ROM build there will be two build identifiers, the first will correspond to the base ROM image, the second will correspond to the patch set that has been applied.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <function type="get" function_name="mibgetfirmwarebuildid"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDisallowSchedRelinquish" psid="2543">
            <description_user>When enabled the VIFs will not relinquish their assigned schedules when they have nothing left to do.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMLMESTAKeepAliveFailure" psid="2842">
            <description_user>Link lost by keep alive failure. 0 = Disabled. This is required by MCD.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMLMESTAKeepAliveTimeout" psid="2502">
            <description_user>Timeout before disconnecting. 0 = Disabled. Capped to greater than 6 seconds.</description_user>
            <units>second</units>
            <type>uint16</type>
            <range_max>2147</range_max><default>30</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMLMEAPKeepAliveTimeout" psid="2503">
            <description_user>Timeout before disconnecting. 0 = Disabled. Capped to greater than 6 seconds.</description_user>
            <units>second</units>
            <type>uint16</type>
            <range_max>2147</range_max><default>10</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMLMEGOKeepAliveTimeout" psid="2504">
            <description_user>Timeout before disconnecting. 0 = Disabled. Capped to greater than 6 seconds.</description_user>
            <units>second</units>
            <type>uint16</type>
            <range_max>2147</range_max><default>10</default>
            <nature>software</nature>
        </config_element>
        <!-- End of Keep Alive MIBs -->
        <config_element name="unifiSTARouterAdvertisementMinimumIntervalToForward" psid="2505">
            <description_user>STA Mode: Minimum interval to forward Router Advertisement frames to Host. Minimum value = 60 secs.</description_user>
            <units>second</units>
            <type>uint32</type>
            <range_max>4294967285</range_max><default>60</default>
            <nature>software</nature>
        </config_element>
        <!-- End of Router Advertisement Rate Reduction MIBs -->
        <config_element name="unifiFragmentationDuration" psid="2524">
            <description_user>A limit on transmission time for a data frame. If the data payload would take longer than unifiFragmentationDuration to transmit, UniFi will attempt to fragment the frame to ensure that the data portion of each fragment is within the limit. The limit imposed by the fragmentation threshold is also respected, and no more than 16 fragments may be generated. If the value is zero no limit is imposed. The value may be changed dynamically during connections. Note that the limit is a guideline and may not always be respected. In particular, the data rate is finalised after fragmentation in order to ensure responsiveness to conditions, the calculation is not performed to high accuracy, and octets added during encryption are not included in the duration calculation.</description_user>
            <units>&#x00b5;s</units>
            <type>uint16</type>
            <default>0</default>
            <function_list>
                <function type="get" function_name="mibuint16get" is_for_vif="true"></function>
                <function type="set" function_name="mibuint16set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMLMEScanChannelMaxScanTime" psid="2001">
            <description_user>For testing: overrides max_scan_time. 0 indicates not used.</description_user>
            <type>octet_string</type>
            <range_min>14</range_min><range_max>14</range_max>
            <default>{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMLMEScanChannelProbeInterval" psid="2002">
            <description_user>For testing: overrides probe interval. 0 indicates not used.</description_user>
            <type>octet_string</type>
            <range_min>14</range_min><range_max>14</range_max>
            <default>{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMLMEScanDeltaRSSIThreshold" psid="2010">
            <description_user>Magnitude of the change in RSSI for which a scan result will be issued</description_user>
            <units>dB</units>
            <type>uint16</type>
            <range_min>1</range_min><range_max>255</range_max><default>20</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMLMEScanProbeInterval" psid="2007">
            <description_user>Time between transmissions of broadcast probe requests on a given channel when performing an active scan.</description_user>
            <units>TU</units>
            <type>uint16</type>
            <default>70</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMLMEScanHighRSSIThreshold" psid="2008">
            <description_user>Minimum RSSI for a new station to enter the coverage area of scan.</description_user>
            <units>dBm</units>
            <type>int16</type>
            <range_min>-128</range_min><range_max>127</range_max><default>-90</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMLMEScanMaximumAge" psid="2014">
            <description_user>Depricate</description_user>
            <type>uint16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMLMEScanMaximumResults" psid="2015">
            <description_user>Max number of scan results (for all scans) which will be stored before the oldest result is discarded, irrespective of its age. The value 0 specifies no maximum.</description_user>
            <type>uint16</type>
            <default>40</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMLMEScanMaxNumberOfProbeSets" psid="2087">
            <description_user>Max number of Probe Request sets that the scan engine will send on a single channel.</description_user>
            <type>uint16</type>
            <default>2</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMLMEScanStopIfLessThanXFrames" psid="2088">
            <description_user>Stop scanning on a channel if less than X Beacons or Probe Responses are received.</description_user>
            <type>uint16</type>
            <default>4</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMLMEAutonomousScanNoisy" psid="2016">
            <description_user>Deprecated</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiGoogleMaxNumberOfPeriodicScans" psid="2260">
            <description_user>Max number of periodic scans for Google scan.</description_user>
            <type>uint16</type>
            <default>6</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiGoogleMaxRSSISampleSize" psid="2261">
            <description_user>Max number of RSSI samples used for averaging RSSI in Google scan.</description_user>
            <type>uint16</type>
            <default>8</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiGoogleMaxHotlistAPs" psid="2262">
            <description_user>Max number of entries for hotlist APs in Google scan.</description_user>
            <type>uint16</type>
            <default>64</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiGoogleMaxSignificantWifiChangeAPs" psid="2263">
            <description_user>Max number of entries for significant WiFi change APs in Google scan.</description_user>
            <type>uint16</type>
            <default>64</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiGoogleMaxBssidHistoryEntries" psid="2264">
            <description_user>Max number of BSSID/RSSI that the device can hold in Google scan.</description_user>
            <type>uint16</type>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiBSSMaxIdlePeriodEnabled" psid="2508">
            <description_user>If set STA will configure keep-alive with options specified in a received BSS max idle period IE</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMLMEConnectionTimeOut" psid="2000">
            <description_user>Firmware waits for unifiMLMEConnectionTimeOut of no successful Tx/Rx (including beacon) to/from AP before it disconnects from AP.For STA case - Setting it to less than 3 seconds may result in frequent disconnection with the AP</description_user>
            <units>milliseconds</units>
            <type>uint16</type>
            <default>3000</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMLMEStationInactivityTimeOut" psid="2098">
            <description_user>Timeout for instigating ConnectonFailure procedures. Setting it to less than 3 seconds may result in frequent disconnection or roaming with the AP.
            Zero value disables the feature. Any value written lower than INACTIVITY_MINIMUM_TIMEOUT becomes INACTIVITY_MINIMUM_TIMEOUT.</description_user>
            <units>second</units>
            <type>uint16</type>
            <default>3</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMLMECliInactivityTimeOut" psid="2099">
            <description_user>Timeout for instigating ConnectonFailure procedures. Zero value disables the feature. Any value written lower than INACTIVITY_MINIMUM_TIMEOUT becomes INACTIVITY_MINIMUM_TIMEOUT.</description_user>
            <units>second</units>
            <type>uint16</type>
            <default>10</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMLMEStationInitialKickTimeOut" psid="2100">
            <description_user>Timeout for sending the AP a NULL frame to kick off the EAPOL exchange.</description_user>
            <units>millisecond</units>
            <type>uint16</type>
            <default>50</default>
        </config_element>
        <config_element name="unifiMLMEDataReferenceTimeout" psid="2005">
            <description_user>Maximum time allowed for the data in data references corresponding to MLME primitives to be made available to the firmware. The special value 0 specifies an infinite timeout.</description_user>
            <description_internal>Note that the default has to be sufficient to allow for any MLME-SET.request used to set a different value! The value 65535 is reserved for future internal expansion (infinite timeout).</description_internal>
            <units>TU</units>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <range_max>65534</range_max><default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPowerManagementDelayTimeout" psid="2514">
            <description_user>When UniFi enters power save mode it signals the new state by setting the power management bit in the frame control field of a NULL frame. It then remains active for the period since the previous unicast reception, or since the transmission of the NULL frame, whichever is later. This entry controls the maximum time during which UniFi will continue to listen for data. This allows any buffered data on a remote device to be cleared. Specifies an upper limit on the timeout. UniFi internally implements a proprietary algorithm to adapt the timeout depending upon the situation.This is used by firmware when current station VIF is only station VIF which can be scheduled</description_user>
            <units>&#x00b5;s</units>
            <type>uint32</type>
            <range_max>2147483647</range_max><default>30000</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiConcurrentPowerManagementDelayTimeout" psid="2516">
            <description_user>When UniFi enters power save mode it signals the new state by setting the power management bit in the frame control field of a NULL frame. It then remains active for the period since the previous unicast reception, or since the transmission of the NULL frame, whichever is later. This entry controls the maximum time during which UniFi will continue to listen for data. This allows any buffered data on a remote device to be cleared. This is same as unifiPowerManagementDelayTimeout but this value is considered only when we are doing multivif operations and other VIFs are waiting to be scheduled.Note that firmware automatically chooses one of unifiPowerManagementDelayTimeout and unifiConcurrentPowerManagementDelayTimeout depending upon the current situation.It is sensible to set unifiPowerManagementDelayTimeout to be always more thanunifiConcurrentPowerManagementDelayTimeout.</description_user>
            <units>&#x00b5;s</units>
            <type>uint32</type>
            <range_max>2147483647</range_max><default>6000</default>
            <nature>software</nature>
        </config_element>
       <config_element name="unifiDisableLegacyPowerSave" psid="2510">
            <description_user>This affects Station VIF power save behaviour.
            Setting it to true will disable legacy power save (i.e. we wil use fast power save to retrieve data)
            Note that actually disables full power save mode (i.e sending trigger to retrieve frames which will be PS-POLL for legacy and QOS-NULL for UAPSD)</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature>
         </config_element>
       <config_element name="unifiDebugForceActive" psid="2511">
            <description_user>Force station power save mode to be active (when scheduled).
            VIF scheduling, coex and other non-VIF specific reasons could still force power save on the VIF.
            Applies to all VIFs of type station (includes P2P client).
            is only provided for test purpose.
            Changes to the mib will only get applied after next host/mlme power management request.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
         </config_element>
       <config_element name="unifiIdleModeLiteEnabled" psid="2526">
            <description_user>Enables Idle Mode Lite, if softAP is active, and there has been no activity for a time.
            Idle mode lite should not be active if host has sent a command to change key.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature>
         </config_element>
       <config_element name="unifiIdleModeEnabled" psid="2527">
            <description_user>Enables Idle Mode, if single vif station is active, and there has been no activity for a time.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
       </config_element>
       <config_element name="unifiMacrameDebugStats" psid="2215">
           <description_user>MACRAME debug stats readout key. Use set to write a debug readout, then read the same key to get the actual readout.</description_user>
           <type>uint32</type>
           <function_list>
               <function type="get" function_name="mibuint32get" is_for_vif="false"></function>
               <function type="set" function_name="mibuint32set" is_for_vif="false"></function>
           </function_list>
           <nature>software</nature>
       </config_element>
       <config_element name="unifiNANEnabled" psid="6080">
            <description_user>Enables Neighbour Aware Networking (NAN)</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
       </config_element>
       <config_element name="unifiNANBeaconCapabilities" psid="6081">
            <description_user>The 16-bit field follows the coding of IEEE 802.11 Capability Information.</description_user>
            <type>uint16</type>
            <default>0x0720</default>
            <nature>software</nature>
       </config_element>

       <!-- PSID Range 6080-6099 Reserved for NAN -->
       <!-- <config_element name="ReservedForNAN" psid="6082"> -->
       <!-- <config_element name="ReservedForNAN" psid="6083"> -->
       <!-- <config_element name="ReservedForNAN" psid="6084"> -->
       <!-- <config_element name="ReservedForNAN" psid="6085"> -->
       <!-- <config_element name="ReservedForNAN" psid="6086"> -->
       <!-- <config_element name="ReservedForNAN" psid="6087"> -->
       <!-- <config_element name="ReservedForNAN" psid="6088"> -->
       <!-- <config_element name="ReservedForNAN" psid="6089"> -->
       <!-- <config_element name="ReservedForNAN" psid="6090"> -->
       <!-- <config_element name="ReservedForNAN" psid="6091"> -->
       <!-- <config_element name="ReservedForNAN" psid="6092"> -->
       <!-- <config_element name="ReservedForNAN" psid="6093"> -->
       <!-- <config_element name="ReservedForNAN" psid="6094"> -->
       <!-- <config_element name="ReservedForNAN" psid="6095"> -->
       <!-- <config_element name="ReservedForNAN" psid="6096"> -->
       <!-- <config_element name="ReservedForNAN" psid="6097"> -->
       <!-- <config_element name="ReservedForNAN" psid="6098"> -->
       <!-- <config_element name="ReservedForNAN" psid="6099"> -->
       <!-- PSID Range 6080-6099 Reserved for NAN -->

       <config_element name="unifiLowPowerRxConfig" psid="6018">
            <description_user>Enables low power radio RX for idle STA and AP VIFs respectively.
            Setting/clearing bit 0 enables/disabled LP RX for (all) STA/Cli VIFs.
            Setting/clearing bit 1 enables/disabled LP RX for AP/GO VIFs.</description_user>
            <type>uint16</type>
            <default>3</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <nature>software</nature>
         </config_element>
       <config_element name="unifiStationActivityIdleTime" psid="2512">
            <description_user>Time since last station activity when it can be considered to be idle. Only used in SoftAP mode when determining if all connected stations are idle (not active).</description_user>
            <type>uint32</type>
            <units>milliseconds</units>
            <default>500</default>
            <nature>software</nature>
         </config_element>
        <config_element name="unifiApBeaconMaxDrift" psid="2507">
            <description_user>The maximum drift in microseconds we will allow for each beacon sent when we're trying to move it to get a 50% duty cycle between GO and STA in multiple VIF scenario. We'll delay our TX beacon by a maximum of this value until we reach our target TBTT. We have 3 possible cases for this value: a) ap_beacon_max_drift = 0x0000  -  Feature disabled b) ap_beacon_max_drift between 0x0001 and 0xFFFE -  Each time we transmit the beacon we'll move it a little bit forward but never more than this. (Not implemented yet) c) ap_beacon_max_drift = 0xFFFF - Move the beacon to the desired position in one shot.</description_user>
            <units>&#x00b5;s</units>
            <type>uint16</type>
            <default>0xFFFF</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMacBeaconTimeout" psid="2270">
            <description_user>The maximum time in microseconds we want to stall TX data when expecting a beacon at EBRT time as a station.</description_user>
            <units>&#x00b5;s</units>
            <type>uint16</type>
            <default>128</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRSSIMaxAveragingPeriod" psid="2210">
            <description_user>Limits the period over which the value of unifiRSSI is averaged. If no more than unifiRSSIMinReceivedFrames frames have been received in the period, then the value of unifiRSSI is reset to the value of the next measurement and the rolling average is restarted. This ensures that the value is timely (although possibly poorly averaged) when little data is being received.</description_user>
            <units>TU</units>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <range_min>1</range_min>
            <default>3000</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRSSIMinReceivedFrames" psid="2211">
            <description_user>See the description of unifiRSSIMaxAveragingPeriod for how the combination of attributes is used.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <range_min>1</range_min>
            <default>2</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiCSROnlyEIFSDuration" psid="2362">
            <description_user>Specifies time that is used for EIFS. A value of 0 causes the build in value to be used.</description_user>
            <access_rights>read_only</access_rights>
            <units>&#x00b5;s</units>
            <type>uint16</type>
            <default>12</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiForceChannelBW" psid="2370">
            <description_user>Test/debug Mib to force channel bandwidth to specified value.
            This can also be used to allow emulator/silicon back to back connection to communicate at bandwidth other than default (20 MHz)
            Setting it to 0 uses the default bandwidth as selected by firmware
            channel_bw_20_mhz   = 20,
            channel_bw_40_mhz   = 40,
            channel_bw_80_mhz   = 80
            </description_user>
            <type>uint16</type>
            <default>0</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTestSetChannelBW" psid="2037">
            <description_user>Test/debug Mib to set channel bandwidth to specified value.</description_user>
            <type>unifiBWTableIndex</type>
            <function_list>
                <function type="set" function_name="mibcapbwset" is_for_vif="true" ></function>
            </function_list>
        </config_element>
        <config_element name="unifiSwToHwQueueStats" psid="2250">
            <description_user>The timing statistics of packets being queued between SW-HW</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <table_name>unifiQueueStatsIdTable</table_name>
            <function_list>
                <function type="get" function_name="mibqueuestatsget" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiHostToSwQueueStats" psid="2251">
            <description_user>The timing statistics of packets being queued between HOST-SW</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <table_name>unifiQueueStatsIdTable</table_name>
            <function_list>
                <function type="get" function_name="mibqueuestatsget" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiQueueStatsEnable" psid="2252">
            <description_user>Enables recording timing statistics of packets being queued between HOST-SW-HW</description_user>
            <type>boolean</type>
            <default>false</default>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRateStatsRate" psid="2212">
            <description_user>The rate corresponding to the current table entry. The value is rounded to the nearest number of units where necessary. Most rates do not require rounding, but when short guard interval is in effect the rates are no longer multiples of the base unit. Note that there may be two occurrences of the value 130: the first corresponds to MCS index 7, and the second, if present, to MCS index 6 with short guard interval.</description_user>
            <description_internal>Get the rate for rate statistics table entry index.</description_internal>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <units>500 kbps</units>
            <table_name>unifiRateStatsTable</table_name>
            <function type="get" function_name="mibuint16get"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRateStatsRxSuccessCount" psid="2206">
            <description_user>The number of successful receptions of complete management and data frames at the rate indexed by unifiRateStatsIndex.This number will wrap to zero after the range is exceeded.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <table_name>unifiRateStatsTable</table_name>
            <function_list>
                <function type="get" function_name="mibratestatsget" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRateStatsTxSuccessCount" psid="2207">
            <description_user>The number of successful (acknowledged) unicast transmissions of complete data or management frames the rate indexed by unifiRateStatsIndex. This number will wrap to zero after the range is exceeded.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <table_name>unifiRateStatsTable</table_name>
            <function_list>
                <function type="get" function_name="mibratestatsget" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTxDataConfirm" psid="2253">
            <description_user>Allows to request on a per access class basis that an MA_UNITDATA.confirm be generated after each packet transfer. The default value is applied for all ACs.</description_user>
            <type>boolean</type>
            <default>false</default>
            <table_name>unifiAcTxConfirmTable</table_name>
            <function_list>
                <function type="set" function_name="mibtxdatacfmset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTxDataRate" psid="2208">
            <description_user>The bit rate currently in use for transmissions of unicast data frames; On an infrastructure BSS, this is the data rate used in communicating with the associated access point, if there is none, an error is returned</description_user>
            <description_internal>Request is made per-VIF. Rate is read from station records</description_internal>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mibtxdatarateget" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiLastBssTxDataRate" psid="2213">
            <description_user>Last BSS Tx DataRate. See unifiTxDataRate description.</description_user>
            <type>uint16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRxDataRate" psid="2196">
            <description_user>The bit rate of the last received frame on this VIF.</description_user>
            <description_internal>Request is made per-VIF and only support for STA VIF type.</description_internal>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibrxdatarateget" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiNoAckActivationCount" psid="2240">
            <description_user>The number of frames that are discarded due to HW No-ack activated during test.
            This number will wrap to zero after the range is exceeded.</description_user>
            <description_internal>Number of discarded frames when HW No-ack is activated during test.</description_internal>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibuint32get"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRxFcsErrorCount" psid="2241">
            <description_user>The number of received frames that are discarded due to bad FCS (CRC).
            This number will wrap to zero after the range is exceeded.</description_user>
            <description_internal>Number of discarded received frames due to bad FCS (CRC) as detected by the HW. </description_internal>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibuint32get"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiReadReg" psid="8051">
            <description_user>Read value from a register and return it.</description_user>
            <description_internal> Register access function. </description_internal>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <table_name>unifiReadRegTable</table_name>
            <function_list>
                <function type="get" function_name="mibreadreg"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiReadHardwareCounter" psid="5087">
            <description_user>Read a value from a hardware packet counter in a specific mac instance and return it.</description_user>
            <description_internal> Hardware counter access function. </description_internal>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <table_name>unifiReadHardwareCounterTable</table_name>
            <function_list>
                <function type="get" function_name="mibreadhardwarecounter"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRsnCapabilities" psid="2034">
            <description_user>Encodes the RSN Capabilities field of IEEE 802.11 RSN Information Element.</description_user>
            <type>uint16</type>
            <default>0x248C</default>
        </config_element>
        <config_element name="unifiHwTxTimeout" psid="2205">
            <description_user>Maximum time in milliseconds for a frame to be queued in the hardware/DPIF.</description_user>
            <type>uint16</type>
            <units>milliseconds</units>
            <default>512</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiSwTxTimeout" psid="2204">
            <description_user>Maximum time in seconds for a frame to be queued in firmware, ready to be sent, but not yet actually pumped to hardware.</description_user>
            <type>uint16</type>
            <units>second</units>
            <default>5</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiSNR" psid="2202">
            <description_user>Provides a running average of the Signal to Noise Ratio (SNR) for packets received by UniFi&apos;s radio.</description_user>
            <units>dB</units>
            <access_rights>read_only</access_rights>
            <type>int16</type>
            <function type="get" function_name="mibgetsnr" is_for_vif="true"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiLastBssSNR" psid="2203">
            <description_user>Last BSS SNR. See unifiSNR description.</description_user>
            <type>int16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiSNRExtraOffsetCCK" psid="2209">
            <description_user>This offset is added to SNR values received at 802.11b data rates. This accounts for differences in the RF pathway between 802.11b and 802.11g demodulators. The offset applies to values of unifiSNR as well as SNR values in scan indications. Not used in 5GHz mode.</description_user>
            <units>dB</units>
            <access_rights>read_only</access_rights>
            <type>int16</type>
            <default>8</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiScanMaxProbeTransmitLifetime" psid="2531">
            <description_user>If non-zero, used during active scans as the maximum lifetime for probe requests. It is the elapsed time after the initial transmission at which further attempts to transmit the probe are terminated.</description_user>
            <type>uint32</type>
            <units>TU</units>
            <range_min>1</range_min><default>64</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiProbeResponseNonAPLifetime" psid="2533">
            <description_user>Lifetime of proberesponse frame in unit of ms for all vifs which are not an infrastructe AP.</description_user>
            <type>uint16</type>
            <units>ms</units>
            <default>500</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiProbeResponseAPLifetime" psid="2539">
            <description_user>Lifetime of proberesponse frame in unit of ms for infrastructure AP.</description_user>
            <type>uint16</type>
            <units>ms</units>
            <default>100</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiProbeResponseMaxRetry" psid="2534">
            <description_user>Number of retries of probe response frame.</description_user>
            <type>uint16</type>
            <default>5</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPowerSaveTransitionPacketThreshold" psid="2532">
            <description_user>If VIF has this many packets queued/transmitted/received in last unifiFastPowerSaveTransitionPeriod then firmware may decide to come out of aggressive power save mode. This is applicable to STA (CLI) and GO (VIF).Note that this is only a guideline. Firmware internal factors may override this MIB.Also see unifiExitPowerSavePeriod and unifiAggressivePowerSaveTransitionPeriod.</description_user>
            <type>uint16</type>
            <default>10</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiExitPowerSavePeriod" psid="2535">
            <description_user>Period in TUs over which firmware counts number of packet transmitted/queued/received to decide to come out of aggressive power save mode. This is applicable to STA (CLI) and GO (AP) VIF. Note that this is only a guideline. Firmware internal factors may override this MIB. Also see unifiPowerSaveTransitionPacketThreshold and unifiAggressivePowerSaveTransitionPeriod</description_user>
            <type>uint16</type>
            <units>TU</units>
            <default>200</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiAggressivePowerSaveTransitionPeriod" psid="2536">
            <description_user>Defines how many unifiExitPowerSavePeriod firmware should wait in which VIF had received/transmitted/queued less than unifiPowerSaveTransitionPacketThreshold packets - before entering aggressive power save mode (when not in aggressive power save mode) This is applicable to STA (CLI) and GO (AP) VIF. Note that this is only a guideline. Firmware internal factors may override this MIB. Also see unifiPowerSaveTransitionPacketThreshold and unifiExitPowerSavePeriod.</description_user>
            <type>uint16</type>
            <units>TU</units>
            <default>5</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiActiveTimeAfterMoreBit" psid="2537">
            <description_user>After seeing the "more" bit set in a message from the AP, the STA will goto active mode for this duration of time. After this time, traffic information is evaluated to determine whether the STA should stay active or go to powersave. Setting this value to 0 means that the described functionality is disabled.</description_user>
            <type>uint32</type>
            <units>TU</units>
            <default>30</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiForcedScheduleDuration" psid="2538">
            <description_user>Defines the time to keep a VIF scheduled after an outgoing packet is queued, if the "Immediate_Response_Expected" bit is set in the Tx_Control associated with a frame transmission request. The firmware may choose to override this value based on internal logic.</description_user>
            <type>uint16</type>
            <units>TU</units>
            <default>50</default>
            <function_list>
                <function type="get" function_name="mibuint16get" is_for_vif="true"></function>
                <function type="set" function_name="mibuint16set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
       </config_element>
       <config_element name="unifiMAXVifScheduleDuration" psid="2541">
            <description_user>Default time for which a non-scan VIF can be scheduled. Applies to multiVIF scenario. Internal firmware logic or BSS state (e.g. NOA) may cut short the schedule.</description_user>
            <type>uint16</type>
            <units>TU</units>
            <default>20</default>
            <nature>software</nature>
        </config_element>
       <config_element name="unifiVifLongIntervalTime" psid="2542">
            <description_user>When the scheduler expects a VIF to schedule for time longer than this parameter (specified in TUs), then the VIF may come out of powersave. Only valid for STA VIFs.</description_user>
            <type>uint16</type>
            <units>TU</units>
            <default>60</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiUartConfigure" psid="2110">
            <description_user>UART configuration using the values of the other unifiUart* attributes. The value supplied for this attribute is ignored.</description_user>
            <is_internal>true</is_internal>
            <type>uint16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiUartPios" psid="2111">
            <description_user>Specification of which PIOs should be connected to the UART. Currently defined values are: 1 - UART not used; all PIOs are available for other uses. 2 - Data transmit and receive connected to PIO[12] and PIO[14] respectively. No hardware handshaking lines. 3 - Data and handshaking lines connected to PIO[12:15].</description_user>
            <is_internal>true</is_internal>
            <type>unifiUartPios</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiWatchdogTimeout" psid="2152">
            <description_user>Maximum time the background may be busy or locked out for. If this time is exceeded, UniFi will reset. If this key is set to 65535 then the watchdog will be disabled.</description_user>
            <units>ms</units>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <range_min>1</range_min><default>1500</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiLoggerEnabled" psid="2320">
            <description_user>Enable reporting of the following events for Android logging:
                - firmware connectivity events
                - fate of management frames sent by the host through the MLME SAP
                It can take the following values:
                - 0: reporting is disabled
                - 1: partial reporting is enabled. Beacons and EAPOL frames will not be reported
                - 2: full reporting is enabled. Beacons and EAPOL frames are included.</description_user>
            <type>unifiWifiLogger</type>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiLoggerMaxDelayedEvents" psid="6124">
            <description_user>Maximum number of events to keep when host is suspended.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <default>10</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMaPacketFateEnabled" psid="2321">
            <description_user>Enable reporting of the fate of the TX packets sent by the host</description_user>
            <type>boolean</type>
            <default>false</default>
            <function_list>
                <function type="set" function_name="mibmapacketfateenableset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiForceShortSlotTime" psid="5080">
            <description_user>If set to true, forces FW to use short slot times for all VIFs.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRSSI" psid="2200">
            <description_user>Running average of the Received Signal Strength Indication (RSSI) for packets received by UniFi&apos;s radio. The value should only be treated as an indication of the signal strength; it is not an accurate measurement. The result is only meaningful if the unifiRxExternalGain attribute is set to the correct calibration value. If UniFi is part of a BSS, only frames originating from devices in the BSS are reported (so far as this can be determined). The average is reset when UniFi joins or starts a BSS or is reset.</description_user>
            <description_internal>Use the lack of a (default) value to signal to rame that the RSSI hasn&apos;t been calibrated, and thus calls to mibgetrssi() will return FALSE. </description_internal>
            <units>dBm</units>
            <access_rights>read_only</access_rights>
            <type>int16</type>
            <function type="get" function_name="mibgetrssi" is_for_vif="true"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiLastBssRSSI" psid="2201">
            <description_user>Last BSS RSSI. See unifiRSSI description.</description_user>
            <type>int16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiBeaconCu" psid="2296">
            <description_user>Provides a channel utilization of peer, value 255=100% channel utilization.</description_user>
            <access_rights>read_only</access_rights>
            <type>int16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPeerBandwidth" psid="2094">
            <description_user>The bandwidth used with peer station prior it disconnects</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <table_name>unifiPeerIdTable</table_name>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiCurrentPeerNss" psid="2095">
            <description_user>The number of spatial streams used with peer station prior it disconnects</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <table_name>unifiPeerIdTable</table_name>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPeerTxDataRate" psid="2096">
            <description_user>The tx rate that was used for transmissions prior disconnection;</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <table_name>unifiPeerIdTable</table_name>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPeerRSSI" psid="2097">
            <description_user>The recorded RSSI from peer station prior it disconnects</description_user>
            <access_rights>read_only</access_rights>
            <type>int16</type>
            <table_name>unifiPeerIdTable</table_name>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTxSettings" psid="5031">
            <description_user>Hardware specific transmitter settings</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <table_name>unifiTxSettingsTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxGainSettings" psid="5032">
            <description_user>Hardware specific transmitter gain settings</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <table_name>unifiTxGainSettingsTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxPowerDetectorResponse" psid="5055">
            <description_user>Hardware specific transmitter detector response settings.
                              2G settings before 5G. Increasing order within band.</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <table_name>unifiTxPowerDetectorResponseTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxDetectorTemperatureCompensation" psid="5056">
            <description_user>Hardware specific transmitter detector temperature compensation settings.
                              2G settings before 5G. Increasing order within band.</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <table_name>unifiTxDetectorTemperatureCompensationTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxDetectorFrequencyCompensation" psid="5057">
            <description_user>Hardware specific transmitter detector frequency compensation settings.
                              2G settings before 5G. Increasing order within band.</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <table_name>unifiTxDetectorFrequencyCompensationTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxOpenLoopTemperatureCompensation" psid="5058">
            <description_user>Hardware specific transmitter open-loop temperature compensation settings.
                              2G settings before 5G. Increasing order within band.</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <table_name>unifiTxOpenLoopTemperatureCompensationTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxOpenLoopFrequencyCompensation" psid="5059">
            <description_user>Hardware specific transmitter open-loop frequency compensation settings.
                              2G settings before 5G. Increasing order within band.</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <table_name>unifiTxOpenLoopFrequencyCompensationTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxPaGainDpdTemperatureCompensation" psid="5066">
            <description_user>Hardware specific transmitter PA gain for DPD temperature compensation settings.
                              2G settings before 5G. Increasing order within band.</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <table_name>unifiTxPaGainDpdTemperatureCompensationTable</table_name>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxPaGainDpdFrequencyCompensation" psid="5067">
            <description_user>Hardware specific transmitter PA gain for DPD frequency compensation settings.
                              2G settings before 5G. Increasing order within band.</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <table_name>unifiTxPaGainDpdFrequencyCompensationTable</table_name>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxFtrimSettings" psid="2372">
            <description_user>Hardware specific transmitter frequency compensation settings</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <table_name>unifiTxFtrimSettingsTable</table_name>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxGainStepSettings" psid="5081">
            <description_user>Hardware specific transmitter gain step settings.
                              2G settings before 5G. Increasing order within band.</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <table_name>unifiTxGainStepSettingsTable</table_name>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxOfdmSelect" psid="5060">
            <description_user>Hardware specific transmitter OFDM selection settings</description_user>
            <type>octet_string</type>
            <range_min>4</range_min><range_max>8</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxDigGain" psid="5061">
            <description_user>Specify gain specific modulation power optimisation.</description_user>
            <type>octet_string</type>
            <range_min>16</range_min><range_max>48</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiChipTemperature" psid="5062">
            <description_user>Read the chip temperature as seen by WLAN radio firmware.</description_user>
            <access_rights>read_only</access_rights>
            <type>int16</type>
            <units>celcius</units>
            <function type="get" function_name="mibint16get"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="UnifiBatteryVoltage" psid="5063">
            <description_user>Battery voltage</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <units>millivolt</units>
            <function type="get" function_name="mibuint16get"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiLoadDpdLut" psid="2255">
            <description_user>Write a static DPD LUT to the FW</description_user>
            <description_internal>For testing: Write DPD LUT entry</description_internal>
            <type>octet_string</type>
            <range_min>147</range_min><range_max>147</range_max>
            <function_list>
                <function type="get" function_name="mibbmsgget"></function>
                <function type="set" function_name="mibricedpdlutset"></function>
            </function_list>
            <table_name>unifiLoadDpdLutTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiOverrideDpdLut" psid="2258">
            <description_user>Write a DPD LUT directly to the HW</description_user>
            <description_internal>Used for Matlab characterisation by writing a previously calculated and (possibly) smoothed LUT to the HW. The primary need for this is because writing the LUT directly in Matlab is very slow and hence impractical for any characterisation work. </description_internal>
            <type>octet_string</type>
            <range_min>147</range_min><range_max>147</range_max>
            <function_list>
                <function type="set" function_name="mibricedpdlutset"></function>
            </function_list>
            <table_name>unifiLoadDpdLutTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiDpdPredistortGains" psid="2257">
            <description_user>DPD pre-distort gains.  Takes a range of frequencies, where
                    f_min &lt;= f_channel &lt; f_max.
                    The format is [freq_min_msb, freq_min_lsb, freq_max_msb, freq_max_lsb,
                    DPD policy bitmap, bandwidth_bitmap, power_trim_enable,
                    OFDM0_gain, OFDM1_gain, CCK_gain, TR_gain,
                    CCK PSAT gain, OFDM PSAT gain].</description_user>
            <type>octet_string</type>
            <range_min>13</range_min><range_max>13</range_max>
            <table_name>unifiDpdPredistortGainsTable</table_name>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiDpdMasterSwitch" psid="2256">
            <description_user>Enables Digital Pre-Distortion</description_user>
            <description_internal>Bitmask of DPD features to enable for testing, requires d01_d01 or later. </description_internal>
            <type>uint16</type>
            <default>0</default>
            <function_list>
                <function type="get" function_name="mibuint16get" is_for_vif="false"></function>
                <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiCCAMasterSwitch" psid="5102">
            <description_user>Enables CCA</description_user>
            <description_internal>Bitmask of CCA features to enable.</description_internal>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mibhalmacmacconfiggenericget" is_for_vif="false"></function>
                <function type="set" function_name="mibhalmacmacconfiggenericset" is_for_vif="false"></function>
            </function_list>
        </config_element>
        <config_element name="unifiBbBbaCcaCfg" psid="5108">
            <description_user>Enables/disables CCA</description_user>
            <description_internal>Bitmask of CCA features to enable in PHY. Changes applied when radio is next switched on.
                To enable:  mlme_set_req 5108 0 . 0
                To disable: mlme_set_req 5108 255 . 0

                Note in the example above, it disables the CCA STF and so will prevent packet sync.</description_internal>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mibhalmacmodemgenericget" is_for_vif="false"></function>
                <function type="set" function_name="mibhalmacmodemgenericset" is_for_vif="false"></function>
            </function_list>
        </config_element>
        <config_element name="unifiRxSyncCCACfg" psid="5103">
            <description_user>Configures CCA per 20 MHz sub-band.</description_user>
            <description_internal>Configure to take into account the CCA of each 20M subband for the primary channel.</description_internal>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mibhalmacmodemgenericget" is_for_vif="false"></function>
                <function type="set" function_name="mibhalmacmodemgenericset" is_for_vif="false"></function>
            </function_list>
        </config_element>
        <config_element name="unifiMacCCABusyTime" psid="5104">
            <description_user>Counts the time CCA indicates busy</description_user>
            <description_internal>This register counts the time CCA indicates busy (for pri20/sec20 and sec40), in units of 16 us.</description_internal>
            <table_name>unifiMacBusyTimeTable</table_name>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mibhalmacmacconfiggenericget" is_for_vif="false"></function>
            </function_list>
        </config_element>
        <config_element name="unifiMacSecChanClearTime" psid="5105">
            <description_user>Configures PIFS</description_user>
            <description_internal>Secondary Channel must be free for this amount of time (50ns unit) before it is declared non-busy for starting a Txop. Related to PIFS.</description_internal>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mibhalmacmacconfiggenericget" is_for_vif="false"></function>
                <function type="set" function_name="mibhalmacmacconfiggenericset" is_for_vif="false"></function>
            </function_list>
        </config_element>
        <config_element name="unifiCCACSThresh" psid="5101">
            <description_user>Configures CCA CS thresholds.</description_user>
            <description_internal>Configures CCA CS (packet sync) thresholds. Indexed by siso/mimo.</description_internal>
            <table_name>unifiCCACSThreshTable</table_name>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mibhalmacmodemgenericget" is_for_vif="false"></function>
                <function type="set" function_name="mibhalmacmodemgenericset" is_for_vif="false"></function>
            </function_list>
        </config_element>
        <config_element name="unifiCoexDebugOverrideBt" psid="2425">
            <description_user>Enables overriding of all BT activities by WLAN. </description_user>
            <description_internal>When this MIB is set then no macrame blackouts are registered for any BT activities
                 and also WLAN trumps all BT activities at the HW CDL arbitration level. This MIB should be enabled only for debugging
                 purposes. This MIB will only have an effect when its either compiled into the FW image or is configured at WLAN boot via
                 an hcf file.
                 </description_internal>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTxPowerTrimConfig" psid="5072">
            <description_user>Configuration settings for the TX power trim.
                The format is [band,
                pcal_ofdm0_to_cck_mso, pcal_ofdm0_to_cck_lso,
                pcal_ofdm0_to_ofdm1_mso, pcal_ofdm0_to_ofdm1_lso,
                pcal_20_to_80_mso, pcal_20_to_80_lso,
                pcal_20_to_40_mso, pcal_20_to_40_lso,
                psat_v2i_gain, psat_mix_gain, psat_drv_gain, psat_pa_gain,
                psat_power_ref_mso, psat_power_ref_lso,
                psat_drv_bias, psat_pa_bias,
                max_adjust_up_mso, max_adjust_up_lso,
                max_adjust_down_mso, max_adjust_down_lso].</description_user>
            <type>octet_string</type>
            <range_min>21</range_min><range_max>21</range_max>
            <table_name>unifiTxPowerTrimConfigTable</table_name>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiClearRadioTrimCache" psid="5088">
            <description_user>Clears the radio trim cache. The parameter is ignored.</description_user>
            <description_internal>Invalidates all entries in the trim cache. </description_internal>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRxAgcControl" psid="4079">
            <description_user>Override the AGC by adjusting the Rx minimum and maximum gains of each stage.
                Set requests write the values to a static structure in
                mac/arch/maxwell/hal/halradio_agc.c.  The saved values are written
                to the Jar register WLRF_RADIO_AGC_CONFIG2 and to the Night registers
                WL_RADIO_AGC_CONFIG2 and WL_RADIO_AGC_CONFIG3.  The saved values are also
                used to configure the AGC whenever halradio_agc_setup() is called.
                Get requests read the values from the static structure in
                mac/arch/maxwell/hal/halradio_agc.c.
                AGC enables are not altered.  Fixed gain may be tested by setting the
                minimums and maximums to the same value.

                Version.
            octet  0  -  Version number for this mib.
                Gain values.  Default in brackets.
            octet  1  -  5G LNA minimum gain (0).
            octet  2  -  5G LNA maximum gain (4).
            octet  3  -  2G LNA minimum gain (0).
            octet  4  -  2G LNA maximum gain (5).
            octet  5  -  Mixer minimum gain (0).
            octet  6  -  Mixer maximum gain (2).
            octet  7  -  ABB minimum gain (0).
            octet  8  -  ABB maximum gain (27).
            octet  9  -  Digital minimum gain (0).
            octet 10  -  Digital maximum gain (7).</description_user>
            <type>octet_string</type>
            <range_min>11</range_min><range_max>11</range_max>
            <function_list>
                <function type="get" function_name="mibbmsgget" is_for_vif="false"></function>
                <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxAntennaConnectionLossFrequency" psid="5033">
            <description_user>The corresponding set of frequency values for TxAntennaConnectionLossTable</description_user>
            <type>uint16</type>
            <range_min>3940</range_min><range_max>12000</range_max>
            <function type="set" function_name="mibricegenericset" is_for_vif="false"></function>
            <table_name>unifiTxAntennaConnectionLossTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxAntennaConnectionLoss" psid="5034">
            <description_user>The set of Antenna Connection Loss value, which is used for TPO/EIRP conversion</description_user>
            <type>int16</type>
            <range_min>-128</range_min><range_max>127</range_max>
            <function type="set" function_name="mibricegenericset" is_for_vif="false"></function>
            <table_name>unifiTxAntennaConnectionLossTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxAntennaMaxGainFrequency" psid="5035">
            <description_user>The corresponding set of frequency values for TxAntennaMaxGain</description_user>
            <type>uint16</type>
            <range_min>3940</range_min><range_max>12000</range_max>
            <function type="set" function_name="mibricegenericset" is_for_vif="false"></function>
            <table_name>unifiTxAntennaMaxGainTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiTxAntennaMaxGain" psid="5036">
            <description_user>The set of Antenna Max Gain value, which is used for TPO/EIRP conversion</description_user>
            <type>int16</type>
            <range_min>-128</range_min><range_max>127</range_max>
            <function type="set" function_name="mibricegenericset" is_for_vif="false"></function>
            <table_name>unifiTxAntennaMaxGainTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRxExternalGainFrequency" psid="5037">
            <description_user>The set of RSSI offset value</description_user>
            <type>uint16</type>
            <range_min>3940</range_min><range_max>12000</range_max>
            <function type="set" function_name="mibricegenericset" is_for_vif="false"></function>
            <table_name>unifiRxExternalGainTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRxExternalGain" psid="5038">
            <description_user>The table giving frequency-dependent RSSI offset value</description_user>
            <type>int16</type>
            <range_min>-128</range_min><range_max>127</range_max>
            <function type="set" function_name="mibricegenericset" is_for_vif="false"></function>
            <table_name>unifiRxExternalGainTable</table_name>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiCurrentTxpowerLevel" psid="6020">
            <description_user>Maximum air power for the VIF. Values are expressed in 0.25 dBm units.</description_user>
            <access_rights>read_only</access_rights>
            <type>int16</type>
            <default>0</default>
            <function type="get" function_name="mibint16get" is_for_vif="true"></function>
            <units>qdBm</units>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDebugInstantDelivery" psid="6069">
            <description_user>Instant delivery control of the debug messages when set to true. Note: will not allow the host to suspend when set to True.</description_user>
            <type>boolean</type>
            <default>false</default>
            <function_list>
                <function type="set" function_name="mibdebuginstantdeliveryset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDebugEnable" psid="6071">
            <description_user>Debug to host state. Debug is either is sent to the host or it isn't.</description_user>
            <type>boolean</type>
            <default>true</default>
            <function_list>
                <function type="set" function_name="mibdebugenableset" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDebugModuleControl" psid="5029">
            <description_user>Debug Module levels for all modules.
            Module debug level is used to filter debug messages sent to the host.
            Only 6 levels of debug per module are available:
            a.  -1     No debug created.
            b.  0      Debug if compiled in. Should not cause Buffer Full in normal testing.
            c.  1 - 3  Levels to allow sensible setting of the .hcf file while running specific tests or debugging
            d.  4      Debug will harm normal execution due to excessive levels or processing time required. Only used in emergency debugging.
            Additional control for FSM transition and FSM signals logging is provided.

            Debug module level and 2 boolean flags are encoded within a uint16:
            Function  |  Is sending FSM signals  |  Is sending FSM transitions  |  Reseved  |  Module level (signed int)
            ----------+--------------------------+------------------------------+-----------+----------------------------
            Bits      |         15               |              14              |   13 - 8  |       7 - 0

            Note: 0x00FF disables any debug for a module
                  0xC004 enables all debug for a module</description_user>
            <type>uint16</type>
            <table_name>unifiDebugConfigTable</table_name>
            <default_list>
                <!-- To find the module see unifiDebugModulesIndex  -->
                <!-- Please don't add comments that hint what the index is. -->
                <default index1="1">  0xC004 </default>
                <default index1="2">  0x0000 </default>
                <default index1="3">  0x00FF </default>
                <default index1="4">  0xC004 </default>
                <default index1="5">  0x00FF </default>
                <default index1="6">  0xC000 </default>
                <default index1="7">  0xC004 </default>
                <default index1="8">  0xC004 </default>
                <default index1="9">  0x00FF </default>
                <default index1="10"> 0x00FF </default>
                <default index1="11"> 0x0001 </default>
                <default index1="12"> 0x00FF </default>
                <default index1="13"> 0x00FF </default>
                <default index1="14"> 0xC000 </default>
                <default index1="15"> 0x00FF </default>
                <default index1="16"> 0x00FF </default>
                <default index1="17"> 0x00FF </default>
                <default index1="18"> 0x00FF </default>
                <default index1="19"> 0x00FF </default>
                <default index1="20"> 0xC000 </default>
                <default index1="21"> 0xC000 </default>
                <default index1="22"> 0xC004 </default>
                <default index1="23"> 0x0001 </default>
                <default index1="24"> 0xC004 </default>
                <default index1="25"> 0x0001 </default>
                <default index1="26"> 0x00FF </default>
                <default index1="27"> 0x00FF </default>
                <default index1="28"> 0x00FF </default>
                <default index1="29"> 0x0001 </default>
                <default index1="30"> 0x0001 </default>
                <default index1="31"> 0x00FF </default>
                <default index1="32"> 0x00FF </default>
                <default index1="33"> 0x00FF </default>
                <default index1="34"> 0x00FF </default>
                <default index1="35"> 0xC001 </default>
                <default index1="36"> 0x0000 </default>
                <default index1="37"> 0x0001 </default>
                <default index1="38"> 0x00FF </default>
                <default index1="39"> 0x00FF </default>
                <default index1="40"> 0x00FF </default>
                <default index1="41"> 0x00FF </default>
                <default index1="42"> 0x00FF </default>
                <default index1="43"> 0x00FF </default>
                <default index1="44"> 0x00FF </default>
                <default index1="45"> 0x00FF </default>
                <default index1="46"> 0x00FF </default>
                <default index1="47"> 0x00FF </default>
                <default index1="48"> 0x00FF </default>
                <default index1="49"> 0x00FF </default>
                <default index1="50"> 0x0001 </default>
                <default index1="51"> 0x00FF </default>
                <default index1="52"> 0x0000 </default>
                <default index1="53"> 0x00FF </default>
                <default index1="54"> 0xC004 </default>
                <default index1="55"> 0x0004 </default>
                <default index1="56"> 0x0004 </default>
                <default index1="57"> 0x00FF </default>
                <default index1="58"> 0xC000 </default>
                <default index1="59"> 0x00FF </default>
                <default index1="60"> 0x0000 </default>
            </default_list>
           <nature>software</nature>
        </config_element>
        <!-- unifiTxOOBConstraintTable Transmit out-of-band regulatory constraint table -->
        <config_element name="unifiTxOOBConstraints" psid="5064">
          <description_user>OOB constraints table.
		| octects | description                                                                                                                                                                                                                                                                                                                                                                                                                                           |
		|---------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
		|       0 | DPD applicability bitmask: 0 = no DPD, 1 = dynamic DPD, 2 = static DPD, 3 = applies to both static and dynamic DPD                                                                                                                                                                                                                                                                                                                                    |
		|     1-2 | Bitmask indicating which regulatory domains this rule applies to FCC=bit0, ETSI=bit1, JAPAN=bit2                                                                                                                                                                                                                                                                                                                                                      |
		|     3-4 | Bitmask indicating which band edges this rule applies to RICE_BAND_EDGE_ISM_24G_LOWER = bit 0, RICE_BAND_EDGE_ISM_24G_UPPER = bit 1, RICE_BAND_EDGE_U_NII_1_LOWER = bit 2, RICE_BAND_EDGE_U_NII_1_UPPER = bit 3, RICE_BAND_EDGE_U_NII_2_LOWER = bit 4, RICE_BAND_EDGE_U_NII_2_UPPER = bit 5, RICE_BAND_EDGE_U_NII_2E_LOWER = bit 6, RICE_BAND_EDGE_U_NII_2E_UPPER = bit 7, RICE_BAND_EDGE_U_NII_3_LOWER = bit 8, RICE_BAND_EDGE_U_NII_3_UPPER = bit 9 |
		|       5 | Bitmask indicating which modulation types this rule applies to (LSB/b0=DSSS/CCK, b1= OFDM0 modulation group, b2= OFDM1 modulation group)                                                                                                                                                                                                                                                                                                              |
		|       6 | Bitmask indicating which channel bandwidths this rule applies to (LSB/b0=20MHz, b1=40MHz, b2=80MHz)                                                                                                                                                                                                                                                                                                                                                   |
		|       7 | Minimum distance to nearest band edge in 500 kHz units for which this constraint becomes is applicable.                                                                                                                                                                                                                                                                                                                                               |
		|       8 | Maximum power (EIRP) for this particular constraint - specified in units of quarter dBm.                                                                                                                                                                                                                                                                                                                                                              |
		|    9-32 | Spectral shaping configuration to be used for this particular constraint. The value is specific to the radio hardware and should only be altered under advice from the IC supplier.                                                                                                                                                                                                                                                                   |
		                                                                                                                                                                                     |</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>255</range_max>
            <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
            <table_name>unifiTxOOBConstraintTable</table_name>
        </config_element>
        <!-- end of unifiTxOOBConstraintTable -->
        <!-- unifiRegDomVersion Regulatory domain version. -->
        <config_element name="unifiRegDomVersion" psid="8019">
            <description_user>Regulatory domain version encoded into 2 bytes, major version as MSB and minor version as LSB</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>

            <default>0x0105</default>
           <nature>software</nature>
        </config_element>
        <!-- unifiRegulatoryTable Regulatory information for all countries. -->
        <!-- Columns -->
        <config_element name="unifiRegulatoryParameters" psid="8011">
            <description_user>Regulatory parameters.
            Each row of the table contains the regulatory rules for one country:
            octet 0 - first character of alpha2 code for country
            octet 1 - second character of alpha2 code for country
            octet 2 - regulatory domain for the country
            Followed by the rules for the country, numbered 0..n in this description
            octet 7n+3 - LSB start frequency octet
            7n+4 - MSB start frequency octet
            7n+5 - LSB end frequency octet
            7n+6 - MSB end frequency octet
            7n+7 - maximum bandwidth octet
            7n+8 - maximum power octet
            7n+9 - rule flags</description_user>
            <access_rights>read_only</access_rights>
            <type>octet_string</type>
            <range_min>3</range_min><range_max>73</range_max>
            <table_name>unifiRegulatoryTable</table_name>
            <default_list>

    <default index1="1">{0x30,0x30,0x02,
             0x62,0x09,0xA8,0x09,0x28,0x14,0x00,
             0x99,0x09,0xB2,0x09,0x28,0x14,0x01,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="2">{0x58,0x58,0x02,
             0x62,0x09,0xA8,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="3">{0x41,0x44,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0x50,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="4">{0x41,0x45,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="5">{0x41,0x46,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="6">{0x41,0x47,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="7">{0x41,0x49,0x02,
             0x62,0x09,0xA8,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="8">{0x41,0x4C,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="9">{0x41,0x4D,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x14,0x12,0x00}</default>
    <default index1="10">{0x41,0x4E,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="11">{0x41,0x4F,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="12">{0x41,0x51,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="13">{0x41,0x52,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0xD6,0x15,0x50,0x18,0x02,
             0x12,0x16,0x62,0x16,0x50,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="14">{0x41,0x53,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="15">{0x41,0x54,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="16">{0x41,0x55,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xE6,0x14,0x50,0x17,0x12,
             0x5E,0x15,0xE0,0x15,0x50,0x1E,0x02,
             0x12,0x16,0x62,0x16,0x50,0x1E,0x02,
             0x5D,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="17">{0x41,0x57,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x5D,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="18">{0x41,0x58,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="19">{0x41,0x5A,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x12,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x12,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="20">{0x42,0x41,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="21">{0x42,0x42,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="22">{0x42,0x44,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="23">{0x42,0x45,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="24">{0x42,0x46,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x18,0x02}</default>
    <default index1="25">{0x42,0x47,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x5D,0x16,0xF3,0x16,0x50,0x0E,0x00}</default>
    <default index1="26">{0x42,0x48,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x14,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x14,0x14,0x12,
             0x67,0x16,0xCB,0x16,0x14,0x14,0x00}</default>
    <default index1="27">{0x42,0x49,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="28">{0x42,0x4A,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x14,0x14,0x00}</default>
    <default index1="29">{0x42,0x4C,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="30">{0x42,0x4D,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="31">{0x42,0x4E,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="32">{0x42,0x4F,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x1E,0x12,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x10}</default>
    <default index1="33">{0x42,0x52,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x12,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="34">{0x42,0x53,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="35">{0x42,0x54,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="36">{0x42,0x56,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="37">{0x42,0x57,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="38">{0x42,0x59,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x12,0x16,0x4E,0x16,0x28,0x1B,0x02}</default>
    <default index1="39">{0x42,0x5A,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="40">{0x43,0x41,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0xE0,0x15,0x50,0x18,0x02,
             0x12,0x16,0x62,0x16,0x50,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="41">{0x43,0x43,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0xD6,0x15,0x50,0x14,0x02,
             0x12,0x16,0x62,0x16,0x50,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="42">{0x43,0x44,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="43">{0x43,0x46,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x28,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x28,0x18,0x02,
             0x72,0x15,0x4E,0x16,0x28,0x18,0x02}</default>
    <default index1="44">{0x43,0x47,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="45">{0x43,0x48,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="46">{0x43,0x49,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x18,0x02}</default>
    <default index1="47">{0x43,0x4B,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="48">{0x43,0x4C,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="49">{0x43,0x4D,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="50">{0x43,0x4E,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x12,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="51">{0x43,0x4F,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="52">{0x43,0x52,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x14,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x14,0x18,0x02,
             0x72,0x15,0x62,0x16,0x14,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x14,0x1E,0x00}</default>
    <default index1="53">{0x43,0x55,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x17,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="54">{0x43,0x56,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="55">{0x43,0x58,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0xD6,0x15,0xA0,0x1B,0x02,
             0x12,0x16,0x62,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="56">{0x43,0x59,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="57">{0x43,0x5A,0x02,
             0x60,0x09,0xB3,0x09,0x28,0x14,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xE6,0x14,0x50,0x14,0x12,
             0x5E,0x15,0x5D,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="58">{0x44,0x45,0x02,
             0x60,0x09,0xB3,0x09,0x28,0x14,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xE6,0x14,0x50,0x14,0x12,
             0x5E,0x15,0x5D,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="59">{0x44,0x4A,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00}</default>
    <default index1="60">{0x44,0x4B,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="61">{0x44,0x4D,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x17,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="62">{0x44,0x4F,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x17,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="63">{0x44,0x5A,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x17,0x00,
             0x82,0x14,0xE6,0x14,0x50,0x17,0x02,
             0x5E,0x15,0x26,0x16,0xA0,0x1E,0x02}</default>
    <default index1="64">{0x45,0x43,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x14,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x14,0x18,0x02,
             0x72,0x15,0x62,0x16,0x14,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x14,0x1E,0x00}</default>
    <default index1="65">{0x45,0x45,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="66">{0x45,0x47,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x28,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x28,0x14,0x02}</default>
    <default index1="67">{0x45,0x48,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02}</default>
    <default index1="68">{0x45,0x52,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00}</default>
    <default index1="69">{0x45,0x53,0x02,
             0x60,0x09,0xB3,0x09,0x28,0x14,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xE6,0x14,0x50,0x14,0x12,
             0x5E,0x15,0x5D,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="70">{0x45,0x54,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="71">{0x46,0x49,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="72">{0x46,0x4A,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0xD6,0x15,0x50,0x14,0x02,
             0x12,0x16,0x62,0x16,0x50,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="73">{0x46,0x4B,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="74">{0x46,0x4C,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="75">{0x46,0x4D,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="76">{0x46,0x4F,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="77">{0x46,0x52,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="78">{0x47,0x41,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="79">{0x47,0x42,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="80">{0x47,0x44,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="81">{0x47,0x45,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x12,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="82">{0x47,0x46,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="83">{0x47,0x47,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="84">{0x47,0x48,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x18,0x02}</default>
    <default index1="85">{0x47,0x49,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="86">{0x47,0x4C,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="87">{0x47,0x4D,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="88">{0x47,0x4E,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="89">{0x47,0x50,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="90">{0x47,0x51,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="91">{0x47,0x52,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="92">{0x47,0x53,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="93">{0x47,0x54,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x17,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="94">{0x47,0x55,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x14,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x14,0x18,0x02,
             0x72,0x15,0x62,0x16,0x14,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x14,0x1E,0x00}</default>
    <default index1="95">{0x47,0x57,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="96">{0x47,0x59,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x1E,0x00,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="97">{0x48,0x4B,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x12,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="98">{0x48,0x4D,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0xD6,0x15,0x50,0x14,0x02,
             0x12,0x16,0x62,0x16,0x50,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="99">{0x48,0x4E,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="100">{0x48,0x52,0x02,
             0x60,0x09,0xB3,0x09,0x28,0x14,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xE6,0x14,0x50,0x14,0x12,
             0x5E,0x15,0x5D,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="101">{0x48,0x54,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="102">{0x48,0x55,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="103">{0x49,0x44,0x03,
             0x62,0x09,0xB2,0x09,0x14,0x14,0x00,
             0x67,0x16,0xCB,0x16,0x14,0x17,0x00}</default>
    <default index1="104">{0x49,0x45,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="105">{0x49,0x4C,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xE6,0x14,0x50,0x17,0x12,
             0x72,0x15,0x62,0x16,0x50,0x17,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x17,0x01}</default>
    <default index1="106">{0x49,0x4D,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="107">{0x49,0x4E,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x67,0x16,0xB7,0x16,0x50,0x14,0x10,
             0xB7,0x16,0xCB,0x16,0x14,0x14,0x00}</default>
    <default index1="108">{0x49,0x4F,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="109">{0x49,0x51,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="110">{0x49,0x52,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x28,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x28,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="111">{0x49,0x53,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="112">{0x49,0x54,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="113">{0x4A,0x45,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="114">{0x4A,0x4D,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="115">{0x4A,0x4F,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x00,
             0x67,0x16,0xCB,0x16,0x50,0x17,0x00}</default>
    <default index1="116">{0x4A,0x50,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x2E,0x13,0x7E,0x13,0x28,0x17,0x00,
             0xA6,0x13,0xE2,0x13,0x28,0x17,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x17,0x02}</default>
    <default index1="117">{0x4B,0x45,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1E,0x02,
             0x67,0x16,0xCB,0x16,0x28,0x17,0x00}</default>
    <default index1="118">{0x4B,0x47,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="119">{0x4B,0x48,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1B,0x00}</default>
    <default index1="120">{0x4B,0x49,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0xD6,0x15,0x50,0x14,0x02,
             0x12,0x16,0x62,0x16,0x50,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="121">{0x4B,0x4D,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="122">{0x4B,0x4E,0x02,
             0x62,0x09,0xA8,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1E,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="123">{0x4B,0x50,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="124">{0x4B,0x52,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x5E,0x15,0x62,0x16,0xA0,0x1E,0x02,
             0x5D,0x16,0xDA,0x16,0x50,0x1E,0x00}</default>
    <default index1="125">{0x4B,0x57,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="126">{0x4B,0x59,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="127">{0x4B,0x5A,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xE6,0x14,0x50,0x14,0x02,
             0x12,0x16,0x4E,0x16,0x50,0x14,0x02}</default>
    <default index1="128">{0x4C,0x41,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="129">{0x4C,0x42,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="130">{0x4C,0x43,0x02,
             0x62,0x09,0xA8,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1E,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="131">{0x4C,0x49,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="132">{0x4C,0x4B,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x14,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x14,0x18,0x02,
             0x72,0x15,0x62,0x16,0x14,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x14,0x1E,0x00}</default>
    <default index1="133">{0x4C,0x52,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="134">{0x4C,0x53,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="135">{0x4C,0x54,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="136">{0x4C,0x55,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="137">{0x4C,0x56,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="138">{0x4C,0x59,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="139">{0x4D,0x41,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12}</default>
    <default index1="140">{0x4D,0x43,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="141">{0x4D,0x44,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="142">{0x4D,0x45,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="143">{0x4D,0x46,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="144">{0x4D,0x47,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="145">{0x4D,0x48,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="146">{0x4D,0x4B,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="147">{0x4D,0x4C,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="148">{0x4D,0x4D,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x72,0x15,0x4E,0x16,0x50,0x1E,0x02}</default>
    <default index1="149">{0x4D,0x4E,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="150">{0x4D,0x4F,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x17,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1E,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="151">{0x4D,0x50,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="152">{0x4D,0x51,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="153">{0x4D,0x52,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="154">{0x4D,0x53,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="155">{0x4D,0x54,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="156">{0x4D,0x55,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x18,0x02}</default>
    <default index1="157">{0x4D,0x56,0x02,
             0x60,0x09,0xB3,0x09,0x28,0x14,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xE6,0x14,0x50,0x14,0x12,
             0x5D,0x16,0xDA,0x16,0x50,0x14,0x00}</default>
    <default index1="158">{0x4D,0x57,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="159">{0x4D,0x58,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0xD6,0x15,0x50,0x18,0x02,
             0x12,0x16,0x62,0x16,0x50,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="160">{0x4D,0x59,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x12,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x18,0x00}</default>
    <default index1="161">{0x4D,0x5A,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="162">{0x4E,0x41,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="163">{0x4E,0x43,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="164">{0x4E,0x45,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="165">{0x4E,0x46,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0xD6,0x15,0x50,0x14,0x02,
             0x12,0x16,0x62,0x16,0x50,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="166">{0x4E,0x47,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x1E,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="167">{0x4E,0x49,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="168">{0x4E,0x4C,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="169">{0x4E,0x4F,0x02,
             0x60,0x09,0xB3,0x09,0x28,0x14,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xE6,0x14,0x50,0x14,0x12,
             0x5E,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="170">{0x4E,0x50,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x67,0x16,0xB7,0x16,0x50,0x14,0x00}</default>
    <default index1="171">{0x4E,0x52,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="172">{0x4E,0x55,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="173">{0x4E,0x5A,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x12,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="174">{0x4F,0x4D,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="175">{0x50,0x41,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x5E,0x15,0x62,0x16,0xA0,0x1E,0x00,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="176">{0x50,0x45,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="177">{0x50,0x46,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="178">{0x50,0x47,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="179">{0x50,0x48,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="180">{0x50,0x4B,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="181">{0x50,0x4C,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="182">{0x50,0x4D,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="183">{0x50,0x4E,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="184">{0x50,0x52,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="185">{0x50,0x53,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="186">{0x50,0x54,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="187">{0x50,0x57,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="188">{0x50,0x59,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="189">{0x51,0x41,0x03,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xE6,0x14,0x50,0x14,0x12,
             0x5E,0x15,0x62,0x16,0xA0,0x1B,0x12,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x12}</default>
    <default index1="190">{0x52,0x45,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="191">{0x52,0x4F,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="192">{0x52,0x53,0x02,
             0x60,0x09,0xB3,0x09,0x28,0x14,0x00,
             0x1E,0x14,0xE6,0x14,0x28,0x17,0x10,
             0x5E,0x15,0x5D,0x16,0x14,0x1E,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="193">{0x52,0x55,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x12,0x16,0x62,0x16,0x50,0x1E,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="194">{0x52,0x57,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x18,0x02}</default>
    <default index1="195">{0x53,0x41,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xB7,0x16,0x50,0x0E,0x00}</default>
    <default index1="196">{0x53,0x42,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00}</default>
    <default index1="197">{0x53,0x43,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="198">{0x53,0x44,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="199">{0x53,0x45,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="200">{0x53,0x47,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1E,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="201">{0x53,0x48,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="202">{0x53,0x49,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="203">{0x53,0x4A,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="204">{0x53,0x4B,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="205">{0x53,0x4C,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="206">{0x53,0x4D,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="207">{0x53,0x4E,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02}</default>
    <default index1="208">{0x53,0x4F,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00}</default>
    <default index1="209">{0x53,0x52,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="210">{0x53,0x53,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="211">{0x53,0x54,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="212">{0x53,0x56,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x14,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x14,0x17,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x14,0x1E,0x00}</default>
    <default index1="213">{0x53,0x58,0x00,
             0x62,0x09,0xA8,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="214">{0x53,0x59,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="215">{0x53,0x5A,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="216">{0x54,0x43,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="217">{0x54,0x44,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="218">{0x54,0x46,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="219">{0x54,0x47,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x28,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x28,0x14,0x02,
             0x72,0x15,0x4E,0x16,0x28,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="220">{0x54,0x48,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x12,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="221">{0x54,0x4A,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="222">{0x54,0x4B,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="223">{0x54,0x4C,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="224">{0x54,0x4D,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02}</default>
    <default index1="225">{0x54,0x4E,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02}</default>
    <default index1="226">{0x54,0x4F,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00}</default>
    <default index1="227">{0x54,0x52,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="228">{0x54,0x54,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="229">{0x54,0x56,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00}</default>
    <default index1="230">{0x54,0x57,0x01,
             0x60,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x17,0x00,
             0x82,0x14,0xE6,0x14,0x50,0x17,0x02,
             0x5E,0x15,0x62,0x16,0xA0,0x17,0x02,
             0x67,0x16,0xDA,0x16,0x50,0x1E,0x00}</default>
    <default index1="231">{0x54,0x5A,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="232">{0x55,0x41,0x02,
             0x60,0x09,0xB3,0x09,0x28,0x14,0x00,
             0x1E,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xE6,0x14,0x50,0x14,0x12,
             0x72,0x15,0x26,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="233">{0x55,0x47,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xB7,0x16,0x50,0x1E,0x00}</default>
    <default index1="234">{0x55,0x4D,0x00,
             0x62,0x09,0xA8,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="235">{0x55,0x53,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x17,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="236">{0x55,0x59,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="237">{0x55,0x5A,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02}</default>
    <default index1="238">{0x56,0x41,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="239">{0x56,0x43,0x02,
             0x62,0x09,0xA8,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="240">{0x56,0x45,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x17,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x17,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="241">{0x56,0x47,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="242">{0x56,0x49,0x01,
             0x62,0x09,0xA8,0x09,0x28,0x1E,0x00,
             0x32,0x14,0x82,0x14,0x50,0x18,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="243">{0x56,0x4E,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0x50,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="244">{0x56,0x55,0x01,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x11,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x18,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x18,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x1E,0x00}</default>
    <default index1="245">{0x57,0x46,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
    <default index1="246">{0x57,0x53,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x28,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x28,0x14,0x02,
             0x72,0x15,0x62,0x16,0x28,0x1B,0x02,
             0x67,0x16,0xA3,0x16,0x28,0x1B,0x00}</default>
    <default index1="247">{0x58,0x4B,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="248">{0x59,0x45,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="249">{0x59,0x54,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="250">{0x5A,0x41,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x10,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x12,
             0x72,0x15,0x62,0x16,0xA0,0x1E,0x00,
             0x67,0x16,0xCB,0x16,0x50,0x0E,0x00}</default>
    <default index1="251">{0x5A,0x4D,0x00,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x62,0x16,0xA0,0x14,0x02,
             0x67,0x16,0xCB,0x16,0x50,0x14,0x00}</default>
    <default index1="252">{0x5A,0x57,0x02,
             0x62,0x09,0xB2,0x09,0x28,0x14,0x00,
             0x32,0x14,0x82,0x14,0x50,0x14,0x00,
             0x82,0x14,0xD2,0x14,0x50,0x14,0x02,
             0x72,0x15,0x4E,0x16,0xA0,0x1B,0x02}</default>
            </default_list>
            <nature>software</nature>
        </config_element>
        <!-- end of unifiRegulatoryTable -->
        <!--  Operating Class information for all countries. -->
        <config_element name="unifiOperatingClassTableIndex" psid="0">
		    <type>integer</type>
		    <range_min>1</range_min><range_max>200</range_max>
		    <description_user>Index for unifiOperatingClassTable</description_user>
		</config_element>
		<config_element name="unifiOperatingClassParamters" psid="8015">
		    <description_user>Supported Operating Class parameters.</description_user>
		    <access_rights>read_only</access_rights>
		    <type>octet_string</type>
		    <range_min>6</range_min><range_max>73</range_max>
		    <table_name>unifiOperatingClassTable</table_name>
		    <default_list>
                <default index1="1">{0x53,0x54,0x70,0x73,0x74,0x75,0x7A,0x7B,0x7C,
		                             0x7D,0x7E,0x7F,0x80,0x81,0x82}</default>		      <!-- Global -->
                <default index1="2">{0x01,0x02,0x03,0x05,0x06,0x07,0x08,0x09,0x0A,0x10,
		                             0x11,0x80,0x81,0x82}</default>		                  <!-- Europe -->
                <default index1="3">{0x01,0x03,0x05,0x16,0x17,0x19,0x1A,0x1B,0x1C,0x1E,
		                             0x1F,0x20,0x21,0x80,0x81,0x82}</default>		      <!-- US -->
                <default index1="4">{0x01,0x02,0x03,0x04,0x05,0x06,0x20,0x21,0x24,0x25,
		                             0x26,0x29,0x2A,0x2B,0x3A,0x80,0x81,0x82}</default>	  <!-- Japan -->
		    </default_list>
		    <nature>software</nature>
		  </config_element>
		  <!-- end of unifiOperatingClassTable -->
		  <config_element name="unifiScanParametersTableIndex" psid="0">
              <type>integer</type>
              <range_min>1</range_min><range_max>20</range_max>
              <description_user>Index for unifiScanParametersTable. Index is a Scan_Type as defined in FAPI. </description_user>
		  </config_element>
		  <config_element name="unifiScanParameters" psid="2154">
		  <description_user>Scan parameters.
		    Each row of the table contains 2 entries for a scan: first entry when there is 0 registered VIFs, second - when there is 1 or more registered VIFs.
		    Entry has the following structure:
		    octet  0        -  Scan priority                          (uint8_t)
		    octet  1        -  Enable Early Channel Exit              (uint8_t as bool)
		    octet  2 ~ 3    -  Probe Interval in Time Units           (uint16_t)
		    octet  4 ~ 5    -  Max Active Channel Time in Time Units  (uint16_t)
		    octet  6 ~ 7    -  Max Passive Channel Time in Time Units (uint16_t)
		    octet  8 ~ 9    -  Scan Policy                            (uint16_t)
		    Size of each entry is 10 octets, row size is 20 octets. A Time Units value specifies a time interval as a multiple of TU (1024 us).</description_user>
		  <type>octet_string</type>
		  <range_min>20</range_min><range_max>20</range_max>
		  <table_name>unifiScanParametersTable</table_name>
		  <default_list>
		    <!-- Initial scan
		             0 VIFS:      6      true      24TU           58TU          102TU
		          >= 1 VIFS (no such thing as initial scan with >= 1 VIFS):
		                          6      true      24TU           58TU          102TU -->
		    <default index1="1">{ 0x06,  0x01,     0x18,0x00,     0x3A,0x00,    0x66,0x00,    0x00,0x00,
		                          0x06,  0x01,     0x18,0x00,     0x3A,0x00,    0x66,0x00,    0x00,0x00  }</default>
		    <!-- Full scan
		             0 VIFS:      6      true      68TU           146TU         117TU
		          >= 1 VIFS:      6      true      24TU           58TU          102TU -->
		    <default index1="2">{ 0x06,  0x01,     0x44,0x00,     0x92,0x00,    0x75,0x00,    0x00,0x00,
		                          0x06,  0x01,     0x18,0x00,     0x3A,0x00,    0x66,0x00,    0x00,0x00  }</default>
		    <!-- Scheduled scan
		             0 VIFS:      2      true      68TU           146TU         117TU
		           = 1 VIFS:      2      true      24TU           58TU          102TU -->
		    <default index1="3">{ 0x02,  0x01,     0x44,0x00,     0x92,0x00,    0x75,0x00,    0x00,0x00,
		                          0x02,  0x01,     0x18,0x00,     0x3A,0x00,    0x66,0x00,    0x00,0x00  }</default>
		    <!-- P2P full scan
		             0 VIFS:      6      true      24TU           68TU          102TU
		          >= 1 VIFS:      6      true      24TU           50TU          102TU -->
		    <default index1="4">{ 0x06,  0x01,     0x18,0x00,     0x44,0x00,    0x66,0x00,    0x00,0x00,
		                          0x06,  0x01,     0x18,0x00,     0x32,0x00,    0x66,0x00,    0x00,0x00  }</default>
		    <!-- P2P social scan
		             0 VIFS:      6      false     24TU           68TU          N/A
		          >= 1 VIFS:      6      false     24TU           50TU          N/A   -->
		    <default index1="5">{ 0x06,  0x00,     0x18,0x00,     0x44,0x00,    0x00,0x00,    0x00,0x00,
		                          0x06,  0x00,     0x18,0x00,     0x32,0x00,    0x00,0x00,    0x00,0x00  }</default>
		    <!-- OBSS scan
		             0 VIFS:      4      true      24TU           58TU          N/A
		          >= 1 VIFS       (no scan with >= 1 VIFS):-->
		    <default index1="6">{ 0x04,  0x01,     0x18,0x00,     0x3A,0x00,    0x00,0x00,    0x00,0x00,
		                          0x04,  0x01,     0x18,0x00,     0x3A,0x00,    0x00,0x00,    0x00,0x00  }</default>
		    <!-- AP Auto Channel Selection scan
		             0 VIFS:      4      true      24TU           39TU          N/A
		          >= 1 VIFS       (no scan with >= 1 VIFS):-->
		    <default index1="7">{ 0x04,  0x01,     0x18,0x00,     0x27,0x00,    0x00,0x00,    0x00,0x00,
		                          0x04,  0x01,     0x18,0x00,     0x27,0x00,    0x00,0x00,    0x00,0x00  }</default>
		    <!-- PNO scan
		             0 VIFS:      0      true      68TU           146TU         117TU
		          >= 1 VIFS       (no scan with >= 1 VIFS):-->
		    <default index1="8">{ 0x00,  0x01,     0x44,0x00,     0x92,0x00,    0x75,0x00,    0x00,0x00,
		                          0x00,  0x01,     0x44,0x00,     0xF4,0x00,    0x75,0x00,    0x00,0x00  }</default>
		    <!-- GSCAN
		             0 VIFS:      2      true      68TU           146TU         117TU
		          >= 1 VIFS:      2      true      24TU           58TU          102TU -->
		    <default index1="9">{ 0x02,  0x01,     0x44,0x00,     0x92,0x00,    0x75,0x00,    0x00,0x00,
		                          0x02,  0x01,     0x18,0x00,     0x3A,0x00,    0x66,0x00,    0x00,0x00  }</default>
		    <!-- Measurement scan
		             0 VIFS       (no scan with 0 VIFS):
		          >= 1 VIFS:      3      true      24TU           58TU          102TU  -->
		    <default index1="10">{0x03,  0x01,     0x18,0x00,     0x3A,0x00,    0x66,0x00,    0x80,0x00,
		                          0x03,  0x01,     0x18,0x00,     0x3A,0x00,    0x66,0x00,    0x80,0x00  }</default>
		    <!-- Soft Neighbour Roaming scan
		             0 VIFS NA:   4      false     27TU           68TU          117TU
		          >= 1 VIFS:      4      false     27TU           68TU          117TU   -->
		    <default index1="11">{0x04,  0x00,     0x1B,0x00,     0x44,0x00,    0x75,0x00,    0x00,0x00,
		                          0x04,  0x00,     0x1B,0x00,     0x44,0x00,    0x75,0x00,    0x00,0x00  }</default>
		    <!-- Soft Cached Roaming scan
		             0 VIFS NA:   4      false     27TU           68TU          117TU
		          >= 1 VIFS:      4      false     27TU           68TU          117TU         Any_RA    -->
		    <default index1="12">{0x04,  0x00,     0x1B,0x00,     0x44,0x00,    0x75,0x00,    0x04,0x00,
		                          0x04,  0x00,     0x1B,0x00,     0x44,0x00,    0x75,0x00,    0x04,0x00  }</default>
		    <!-- Soft All Roaming scan
		             0 VIFS NA:   4      true      27TU           68TU          117TU
		          >= 1 VIFS:      4      true      27TU           68TU          117TU         Any_RA    -->
		    <default index1="13">{0x04,  0x01,     0x1B,0x00,     0x44,0x00,    0x75,0x00,    0x04,0x00,
		                          0x04,  0x01,     0x1B,0x00,     0x44,0x00,    0x75,0x00,    0x04,0x00  }</default>
		    <!-- Hard Neighbour Roaming scan
		             0 VIFS NA:   8      false     39TU           98TU          117TU
		          >= 1 VIFS:      8      false     39TU           98TU          117TU   -->
		    <default index1="14">{0x08,  0x00,     0x27,0x00,     0x62,0x00,    0x75,0x00,    0x00,0x00,
		                          0x08,  0x00,     0x27,0x00,     0x62,0x00,    0x75,0x00,    0x00,0x00  }</default>
		    <!-- Hard Cached Roaming scan
		             0 VIFS NA:   8      false     39TU           98TU          117TU
		          >= 1 VIFS:      8      false     39TU           98TU          117TU         Any_RA    -->
		    <default index1="15">{0x08,  0x00,     0x27,0x00,     0x62,0x00,    0x75,0x00,    0x04,0x00,
		                          0x08,  0x00,     0x27,0x00,     0x62,0x00,    0x75,0x00,    0x04,0x00  }</default>
		    <!-- Hard All Roaming scan
		             0 VIFS NA:   8      false     39TU           98TU          117TU
		          >= 1 VIFS:      8      false     39TU           98TU          117TU         Any_RA    -->
		    <default index1="16">{0x08,  0x00,     0x27,0x00,     0x62,0x00,    0x75,0x00,    0x04,0x00,
		                          0x08,  0x00,     0x27,0x00,     0x62,0x00,    0x75,0x00,    0x04,0x00  }</default>
		    <!-- OBSS Internal scan
		             0 VIFS NA:   3      false     5TU            20TU          100TU
		          >= 1 VIFS       3      false     5TU            20TU          100TU -->
		    <default index1="17">{0x03,  0x01,     0x05,0x00,     0x14,0x00,    0x64,0x00,    0x00,0x00,
		                          0x03,  0x01,     0x05,0x00,     0x14,0x00,    0x64,0x00,    0x00,0x00  }</default>
		    <!-- NAN scan
		             0 VIFS NA:   3      false     N/A            N/A           200TU
		          >= 1 VIFS:      3      false     N/A            N/A           200TU         Passive    -->
		    <default index1="18">{0x03,  0x00,     0x00,0x00,     0x00,0x00,    0xC8,0x00,    0x01,0x00,
		                          0x03,  0x00,     0x00,0x00,     0x00,0x00,    0xC8,0x00,    0x01,0x00  }</default>
		    <!-- Single Channel scan
		             0 VIFS:      6      false     70TU          232TU         232TU
		          >= 1 VIFS:      6      false     70TU          232TU         232TU -->
		    <default index1="19">{0x06,  0x00,     0x46,0x00,     0xE8,0x00,    0xE8,0x00,    0x00,0x00,
		                          0x06,  0x00,     0x46,0x00,     0xE8,0x00,    0xE8,0x00,    0x00,0x00  }</default>
		    <!-- Dummy Entry -->
		    <default index1="20">{0x00,  0x01,     0x02,0x03,     0x04,0x05,    0x06,0x07,    0x08,0x09,
		                          0x09,  0x08,     0x07,0x06,     0x05,0x04,    0x03,0x02,    0x01,0x00  }</default>  </default_list>
		    <nature>software</nature>
		  </config_element>
		  <config_element name="unifiTdlsInP2pActivated" psid="2556">
		   <description_user>Use TDLS in P2P mode.</description_user>
		   <type>boolean</type>
		   <default>true</default>
		   <nature>software</nature>
		  </config_element>
		 <config_element name="unifiTdlsActivated" psid="2558">
		   <description_user>Use TDLS mode.</description_user>
		   <type>boolean</type>
		   <default>true</default>
		   <nature>software</nature>
		  </config_element>
		 <config_element name="unifiTdlsTPThresholdPktSecs" psid="2559">
		   <description_user>Used for the argument "throughput_threshold_pktsecs" of RAME-MLME-ENABLE-PEER-TRAFFIC-REPORTING.request signal defined in SC-505422-DD.</description_user>
		   <type>uint32</type>
		   <default>100</default>
		   <nature>software</nature>
		  </config_element>
		 <config_element name="unifiTdlsRssiThreshold" psid="2560">
		   <description_user>Used for the FW initiated TDLS Discovery/Setup procedure.
		   If the RSSI of a received TDLS Discovery Response frame is greater than this value,the TDLS FSM shall initiate the TDLS Setup procedure.</description_user>
		   <type>int16</type>
		   <default>-75</default>
		   <nature>software</nature>
		  </config_element>
		 <config_element name="unifiTdlsMaximumRetry" psid="2561">
		   <description_user>Transmission of a TDLS Action frame or
		   a TDLS Discovery Response Public Action frame shall be retried unifiTdlsMaximumRetry times until the frame is transmitted successfully.</description_user>
		   <type>uint16</type>
		   <default>3</default>
		   <nature>software</nature>
		  </config_element>
		 <config_element name="unifiTdlsTPMonitorSecs" psid="2562">
		   <description_user>The measurement period for recording the number of packets sent to a peer over a TDLS link.</description_user>
		   <type>uint16</type>
		   <default>10</default>
		   <nature>software</nature>
		  </config_element>
		 <config_element name="unifiTdlsBasicHtMcsSet" psid="2563">
		   <description_user>The default Basic HT MCS SET used on a TDLS Link. Used to build the HT Operation element in TDLS Setup frames.</description_user>
		   <type>octet_string</type>
		   <range_min>16</range_min><range_max>16</range_max>
		   <default>{ 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }</default>
		  </config_element>
		 <config_element name="unifiTdlsBasicVhtMcsSet" psid="2564">
		   <description_user>Used to build the VHT Operation element in the TDLS Setup Confirm frame</description_user>
		   <type>octet_string</type>
		   <range_min>2</range_min><range_max>2</range_max>
		   <default>{ 0xfe, 0xff }</default>
		  </config_element>
		 <config_element name="dot11TDLSDiscoveryRequestWindow" psid="2565">
		   <description_user>TDLS shall not transmit the TDLS Discovery Request frame within dot11TDLSDiscoveryRequestWindow DTIM intervals
		   after transmitting TDLS Discovery Request frame.</description_user>
		   <type>uint32</type>
		   <default>10</default>
		   <nature>software</nature>
		  </config_element>
		 <config_element name="dot11TDLSResponseTimeout" psid="2566">
		   <description_user>If no TDLS Setup Response frame is received within dot11TDLSResponseTimeout,
		    or if a TDLS Setup Response frame is received with a nonzero status code,
		    the TDLS initiator STA shall terminate the setup procedure and discard the TDLS Setup Response frame.</description_user>
		   <type>uint32</type>
		   <default>5</default>
		   <nature>software</nature>
		  </config_element>
		 <config_element name="dot11TDLSChannelSwitchActivated" psid="2567">
		   <description_user>When true, indicates that the STA implementation is capable of supporting TDLS Channel Switching.</description_user>
		   <type>boolean</type>
		   <default>false</default>
		   <nature>software</nature>
		  </config_element>
		 <config_element name="unifiTdlsDesignForTestMode" psid="2568">
		   <description_user>Set TDLS design for test mode</description_user>
		   <type>uint32</type>
		   <default>0x00000000</default>
		  </config_element>
		 <config_element name="unifiTdlsKeyLifeTimeInterval" psid="2577">
		   <description_user>Build the Key Lifetime Interval in the TDLS Setup Request frame.</description_user>
		   <type>uint32</type>
		   <default>0x000FFFFF</default>
		   <nature>software</nature>
		  </config_element>
		 <config_element name="unifiTdlsTeardownFrameTxTimeout" psid="2578">
		   <description_user>Allowed time in milliseconds for a TDLS Teardown frame to be trasmitted over the air</description_user>
		   <type>uint16</type>
		   <default>500</default>
		   <nature>software</nature>
		  </config_element>
		  <config_element name="unifiWifiSharingEnabled" psid="2580">
            <description_user>Enabled Wifi Sharing feature</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiWiFiSharing5GHzChannel" psid="2582">
            <description_user>Applicable 5GHz Primary Channels mask. Defined in a uint64 represented by the octet string.
            First byte of the octet string maps to LSB. Bits 0-13 representing 2.4G channels are always set to 0. Mapping defined in mlme_freq_list[]; i.e. Bit 14 maps to channel 36.</description_user>
            <type>octet_string</type>
            <range_min>8</range_min><range_max>8</range_max>
            <default>{ 0x00, 0xC0, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00 }</default>
            <nature>software</nature>
         </config_element>
		 <config_element name="unifiWifiSharingChannelSwitchCount" psid="2583">
		   <description_user>Channel switch announcement count which will be used in the Channel announcement IE when using wifi sharing</description_user>
		   <type>uint16</type>
		   <default>10</default>
           <range_min>3</range_min><range_max>10</range_max>
		   <nature>software</nature>
		 </config_element>
		 <config_element name="unifiChannelAnnouncementCount" psid="2584">
		   <description_user>Channel switch announcement count which will be used in the Channel announcement IE</description_user>
		   <type>uint16</type>
		   <default>10</default>
		   <nature>software</nature>
		  </config_element>
		  <config_element name="unifiStaChannelSwitchSlowApActivated" psid="2601">
         	<description_user>ChanelSwitch: Enable waiting for a slow AP.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
         </config_element>
         <config_element name="unifiStaChannelSwitchSlowApMaxTime" psid="2604">
		    <description_user>ChannelSwitch delay for Slow APs. In Seconds.</description_user>
		    <type>uint32</type>
		    <default>70</default>
		    <nature>software</nature>
		 </config_element>
   		 <config_element name="unifiStaChannelSwitchSlowApPollInterval" psid="2605">
		    <description_user>ChannelSwitch polling interval for Slow APs. In Seconds.</description_user>
		    <type>uint16</type>
		    <default>1</default>
		    <nature>software</nature>
		 </config_element>
   		 <config_element name="unifiStaChannelSwitchSlowApProcedureTimeoutIncrement" psid="2606">
		    <description_user>ChannelSwitch procedure timeout increment for Slow APs. In Seconds.</description_user>
		    <type>uint16</type>
		    <default>10</default>
		    <nature>software</nature>
		 </config_element>
		 <config_element name="unifiRATestStoredSA" psid="2585">
		   <description_user>Source address of router assuming that is contained in virtural router advertisement packet
		   is only used for the test purpose, specified in chapter '6.2 Forward Received RA frame to Host' in SC-506393-TE</description_user>
		   <type>octet_string</type>
		   <default>0x00000000</default>
		   <nature>software</nature>
		 </config_element>
		 <config_element name="unifiRATestStoreFrame" psid="2586">
		   <description_user>Virtual router advertisement packet
		   is only used for the test purpose, specified in chapter '6.2 Forward Received RA frame to Host' in SC-506393-TE</description_user>
		   <type>octet_string</type>
		   <default>0x00000000</default>
		   <nature>software</nature>
		 </config_element>
		 <config_element name="dot11TDLSPeerUAPSDBufferSTAActivated" psid="2587">
		   <description_user>Indicate that the STA implementation is capable of supporting TDLS peer U-APSD.</description_user>
		   <type>boolean</type>
		   <default>false</default>
		   <nature>software</nature>
		  </config_element>
        <config_element name="unifiSupportedChannels" psid="8012">
            <description_user>Supported 20MHz channel centre frequency grouped in sub-bands. For each sub-band: starting channel number, followed by number of channels</description_user>
            <type>octet_string</type>
            <range_min>0</range_min><range_max>20</range_max>
            <default> {0x01,0x0e,0x24,0x04,0x34,0x04,0x64,0x0c,0x95,0x05}
            </default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDefaultCountry" psid="8013">
            <description_user>Allows setting of default country code. Hosts sets the default country (index 1). Each VIF maintains current country code and updates it, but never reads.
            The host can access currently used country code of each VIF, but can't modify it.</description_user>
            <type>octet_string</type>
            <range_min>3</range_min><range_max>3</range_max>
            <table_name>unifiDefaultCountryTable</table_name>
            <!-- <default>{0x30, 0x30, 0x20}</default> World-->
            <!-- <default>{0x55, 0x53, 0x20}</default> US-->
            <!-- <default>{0x4B, 0x52, 0x20}</default> KR-->
            <default_list>
                <!-- Default country code, can only be written by host. -->
                <default index1="1">{ 0x30, 0x30, 0x20 } </default>
                <!-- VIF1 country code, can only be written by fw. -->
                <default index1="2">{ 0x30, 0x30, 0x20 } </default>
                <!-- VIF2 country code, can only be written by fw. -->
                <default index1="3">{ 0x30, 0x30, 0x20 } </default>
            </default_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDefaultCountryWithoutCH12CH13" psid="8020">
            <description_user>Update the default country code to ensure CH12 and CH13 are not used.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiCountryList" psid="8014">
            <description_user>Defines the ordered list of countries present in unifiRegulatoryTable. Each country is coded as 2 ASCII characters. If unifiRegulatoryTable is modified, such as a country is either added, deleted or its relative location is modified, has to be updated as well.</description_user>
            <access_rights>read_only</access_rights>
            <type>octet_string</type>
            <range_min>2</range_min><range_max>270</range_max>
            <default>

{ 0x30, 0x30, 0x58, 0x58, 0x41, 0x44, 0x41, 0x45, 0x41, 0x46, 0x41, 0x47, 0x41, 0x49, 0x41, 0x4c, 0x41, 0x4d, 0x41, 0x4e, 0x41, 0x4f, 0x41, 0x51, 0x41, 0x52, 0x41, 0x53, 0x41, 0x54, 0x41, 0x55, 0x41, 0x57, 0x41, 0x58, 0x41, 0x5a, 0x42, 0x41, 0x42, 0x42, 0x42, 0x44, 0x42, 0x45, 0x42, 0x46, 0x42, 0x47, 0x42, 0x48, 0x42, 0x49, 0x42, 0x4a, 0x42, 0x4c, 0x42, 0x4d, 0x42, 0x4e, 0x42, 0x4f, 0x42, 0x52, 0x42, 0x53, 0x42, 0x54, 0x42, 0x56, 0x42, 0x57, 0x42, 0x59, 0x42, 0x5a, 0x43, 0x41, 0x43, 0x43, 0x43, 0x44, 0x43, 0x46, 0x43, 0x47, 0x43, 0x48, 0x43, 0x49, 0x43, 0x4b, 0x43, 0x4c, 0x43, 0x4d, 0x43, 0x4e, 0x43, 0x4f, 0x43, 0x52, 0x43, 0x55, 0x43, 0x56, 0x43, 0x58, 0x43, 0x59, 0x43, 0x5a, 0x44, 0x45, 0x44, 0x4a, 0x44, 0x4b, 0x44, 0x4d, 0x44, 0x4f, 0x44, 0x5a, 0x45, 0x43, 0x45, 0x45, 0x45, 0x47, 0x45, 0x48, 0x45, 0x52, 0x45, 0x53, 0x45, 0x54, 0x46, 0x49, 0x46, 0x4a, 0x46, 0x4b, 0x46, 0x4c, 0x46, 0x4d, 0x46, 0x4f, 0x46, 0x52, 0x47, 0x41, 0x47, 0x42, 0x47, 0x44, 0x47, 0x45, 0x47, 0x46, 0x47, 0x47, 0x47, 0x48, 0x47, 0x49, 0x47, 0x4c, 0x47, 0x4d, 0x47, 0x4e, 0x47, 0x50, 0x47, 0x51, 0x47, 0x52, 0x47, 0x53, 0x47, 0x54, 0x47, 0x55, 0x47, 0x57, 0x47, 0x59, 0x48, 0x4b, 0x48, 0x4d, 0x48, 0x4e, 0x48, 0x52, 0x48, 0x54, 0x48, 0x55, 0x49, 0x44, 0x49, 0x45, 0x49, 0x4c, 0x49, 0x4d, 0x49, 0x4e, 0x49, 0x4f, 0x49, 0x51, 0x49, 0x52, 0x49, 0x53, 0x49, 0x54, 0x4a, 0x45, 0x4a, 0x4d, 0x4a, 0x4f, 0x4a, 0x50, 0x4b, 0x45, 0x4b, 0x47, 0x4b, 0x48, 0x4b, 0x49, 0x4b, 0x4d, 0x4b, 0x4e, 0x4b, 0x50, 0x4b, 0x52, 0x4b, 0x57, 0x4b, 0x59, 0x4b, 0x5a, 0x4c, 0x41, 0x4c, 0x42, 0x4c, 0x43, 0x4c, 0x49, 0x4c, 0x4b, 0x4c, 0x52, 0x4c, 0x53, 0x4c, 0x54, 0x4c, 0x55, 0x4c, 0x56, 0x4c, 0x59, 0x4d, 0x41, 0x4d, 0x43, 0x4d, 0x44, 0x4d, 0x45, 0x4d, 0x46, 0x4d, 0x47, 0x4d, 0x48, 0x4d, 0x4b, 0x4d, 0x4c, 0x4d, 0x4d, 0x4d, 0x4e, 0x4d, 0x4f, 0x4d, 0x50, 0x4d, 0x51, 0x4d, 0x52, 0x4d, 0x53, 0x4d, 0x54, 0x4d, 0x55, 0x4d, 0x56, 0x4d, 0x57, 0x4d, 0x58, 0x4d, 0x59, 0x4d, 0x5a, 0x4e, 0x41, 0x4e, 0x43, 0x4e, 0x45, 0x4e, 0x46, 0x4e, 0x47, 0x4e, 0x49, 0x4e, 0x4c, 0x4e, 0x4f, 0x4e, 0x50, 0x4e, 0x52, 0x4e, 0x55, 0x4e, 0x5a, 0x4f, 0x4d, 0x50, 0x41, 0x50, 0x45, 0x50, 0x46, 0x50, 0x47, 0x50, 0x48, 0x50, 0x4b, 0x50, 0x4c, 0x50, 0x4d, 0x50, 0x4e, 0x50, 0x52, 0x50, 0x53, 0x50, 0x54, 0x50, 0x57, 0x50, 0x59, 0x51, 0x41, 0x52, 0x45, 0x52, 0x4f, 0x52, 0x53, 0x52, 0x55, 0x52, 0x57, 0x53, 0x41, 0x53, 0x42, 0x53, 0x43, 0x53, 0x44, 0x53, 0x45, 0x53, 0x47, 0x53, 0x48, 0x53, 0x49, 0x53, 0x4a, 0x53, 0x4b, 0x53, 0x4c, 0x53, 0x4d, 0x53, 0x4e, 0x53, 0x4f, 0x53, 0x52, 0x53, 0x53, 0x53, 0x54, 0x53, 0x56, 0x53, 0x58, 0x53, 0x59, 0x53, 0x5a, 0x54, 0x43, 0x54, 0x44, 0x54, 0x46, 0x54, 0x47, 0x54, 0x48, 0x54, 0x4a, 0x54, 0x4b, 0x54, 0x4c, 0x54, 0x4d, 0x54, 0x4e, 0x54, 0x4f, 0x54, 0x52, 0x54, 0x54, 0x54, 0x56, 0x54, 0x57, 0x54, 0x5a, 0x55, 0x41, 0x55, 0x47, 0x55, 0x4d, 0x55, 0x53, 0x55, 0x59, 0x55, 0x5a, 0x56, 0x41, 0x56, 0x43, 0x56, 0x45, 0x56, 0x47, 0x56, 0x49, 0x56, 0x4e, 0x56, 0x55, 0x57, 0x46, 0x57, 0x53, 0x58, 0x4b, 0x59, 0x45, 0x59, 0x54, 0x5a, 0x41, 0x5a, 0x4d, 0x5a, 0x57 }
            </default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiStationQosInfo" psid="2517">
            <description_user>QoS capability for a non-AP Station, and is encoded as per IEEE 802.11 QoS Capability.</description_user>
            <type>uint16</type>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiListenIntervalSkippingDTIM" psid="2518">
            <description_user>Listen interval of beacons when in single-vif power saving mode and receiving DTIMs is enabled. No DTIMs are skipped during MVIF operation. A maximum of the listen interval beacons are skipped, which may be less than the number of DTIMs that can be skipped.
            The value is a lookup table for DTIM counts. Each 4bits, in LSB order, represent DTIM1, DTIM2, DTIM3, DTIM4, DTIM5, (unused).
            This key is only used for STA VIF, connected to an AP. For P2P group client intervals, refer to unifiP2PListenIntervalSkippingDTIM, PSID=2523.</description_user>
            <range_min>0</range_min><range_max>4294967295</range_max><default>0x00054645</default>
            <units>DTIM intervals</units>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiP2PListenIntervalSkippingDTIM" psid="2523">
            <description_user>Listen interval of beacons when in single-vif, P2P client power saving mode and receiving DTIMs. No DTIMs are skipped during MVIF operation. A maximum of (listen interval - 1) beacons are skipped, which may be less than the number of DTIMs that can be skipped.
            The value is a lookup table for DTIM counts. Each 4bits, in LSB order, represent DTIM1, DTIM2, DTIM3, DTIM4, DTIM5, (unused).
            This key is only used for P2P group client. For STA connected to an AP, refer to unifiListenIntervalSkippingDTIM, PSID=2518.</description_user>
            <range_min>0</range_min><range_max>4294967295</range_max><default>0x00011111</default>
            <units>DTIM intervals</units>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiListenIntervalMaxTime" psid="2530">
            <description_user>Maximum number length of time, in Time Units (1TU = 1024us), that can be used as a beacon listen interval. This will limit how many beacons maybe skipped, and affects
            the DTIM beacon skipping count; DTIM skipping (if enabled) will be such that skipped count = (unifiListenIntervalMaxTime / DTIM_period).</description_user>
            <range_min>0</range_min><range_max>65536</range_max><default>1000</default>
            <units>TU</units>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiListenInterval" psid="2519">
            <description_user>Beacon Listen Interval</description_user>
            <range_min>0</range_min><range_max>100</range_max><default>5</default>
            <units>beacon intervals</units>
            <access_rights>read_only</access_rights>
            <type>int16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiBeaconsReceivedPercentage" psid="2245">
            <description_user>Percentage of beacons received, calculated as received / expected. The percentage is scaled to an integer value between 0 (0%) and 1000 (100%).</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibuint32get" is_for_vif="true"></function>
                <function type="set" function_name="mibuint32set" is_for_vif="true"></function>
            </function_list>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiHtCapabilities" psid="2032">
            <description_user>HT capabilities of the chip. See SC-503520-SP for further details. NOTE: Greenfield has been disabled due to interoperability issues wuth SGI.</description_user>
            <type>octet_string</type>
            <range_min>21</range_min><range_max>21</range_max>
            <default>{ 0x6f, 0x01, 0x17, 0xff, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
            </default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiVhtCapabilities" psid="2540">
            <description_user>VHT capabilities of the chip. see SC-503520-SP.</description_user>
            <type>octet_string</type>
            <range_min>12</range_min><range_max>12</range_max>
            <default>{ 0x31, 0x71, 0x00, 0x03, 0xfe, 0xff, 0x00, 0x00, 0xfe, 0xff, 0x00, 0x00 }</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiFrameResponseTimeOut" psid="2080">
            <description_user>How long to wait for a frame (Auth, Assoc, ReAssoc) after Rame replies to a send frame request</description_user>
            <range_min>0</range_min><range_max>500</range_max><default>200</default>
            <units>TU</units>
            <type>uint16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiFrameResponseCfmTxLifetimeTimeOut" psid="2084">
            <description_user>How long to wait to retry a frame (Auth, Assoc, ReAssoc) after TX Cfm trasnmission_status = TxLifetime.</description_user>
            <default>10</default>
            <units>TU</units>
            <type>uint16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiFrameResponseCfmFailureTimeOut" psid="2085">
            <description_user>How long to wait to retry a frame (Auth, Assoc, ReAssoc) after TX Cfm trasnmission_status != Successful | TxLifetime.</description_user>
            <default>40</default>
            <units>TU</units>
            <type>uint16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiConnectionFailureTimeout" psid="2081">
            <description_user>How long the complete connection procedure has before the MLME times out and issues a Connect Indication (fail).</description_user>
            <range_min>0</range_min><range_max>4000</range_max><default>1500</default>
            <units>TU</units>
            <type>uint16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiConnectingProbeTimeout" psid="2082">
            <description_user>How long to wait for a ProbeRsp when syncronising before resending a ProbeReq</description_user>
            <range_min>0</range_min><range_max>100</range_max><default>10</default>
            <units>TU</units>
            <type>uint16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDisconnectTimeout" psid="2083">
            <description_user>How long the firmware attempts to perform a disconnect or disconnect all STAs (triggered by MLME_DISCONNECT-REQ or MLME_DISCONNECT-REQ 00:00:00:00:00:00) before responding with MLME-DISCONNECT-IND and aborting the disconnection attempt. This is particulary important when a SoftAP is attempting to disconnect associated stations which might have "silently" left the ESS.</description_user>
            <range_min>0</range_min><range_max>3000</range_max><default>1500</default>
            <units>milliseconds</units>
            <type>uint16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiForceActiveDuration" psid="2086">
            <description_user>How long the firmware temporarily extends PowerSave for STA as a workaround for wonky APs such as D-link.</description_user>
            <range_min>0</range_min><range_max>1000</range_max><default>200</default>
            <units>milliseconds</units>
            <type>uint16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiBaTxEnableTid" psid="2221">
            <description_user>Configure BA TX on a per-TID basis. Bit mask is two bits per TID (B1 = autosetup, B0 = enable).</description_user>
            <type>uint32</type>
            <!--
            P15 = PRIORITY_contention

            B1  = auto-setup BA TX
            B0  = enable BA TX

            P15 .. P7 P6 P5 P4 P3 P2 P1 P0
             00    00 00 01 01 01 01 01 11 = 0x557
            -->
            <default>0x0557</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiBaConfig" psid="2225">
            <description_user>Block Ack Configuration. It is composed of A-MSDU supported, TX MPDU per A-MPDU, RX Buffer size, TX Buffer size and Block Ack Timeout. see init_mlme_ba() for more detail</description_user>
            <default>0x3fff01</default>
            <type>uint32</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMoveBKtoBE" psid="2227">
            <description_user> Enable or disable workaround to make the Dataplane translate AC_BK data into AC_BE data
            </description_user>
            <access_rights>read_write</access_rights>
            <type>boolean</type>
            <function_list>
                <function type="get" function_name="mibboolget" is_for_vif="false" ></function>
                <function type="set" function_name="mibboolset" is_for_vif="false" ></function>
            </function_list>
            <default>true</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiSupportedDataRates" psid="2041">
            <description_user>Defines the supported non-HT data rates. It is encoded as N+1 octets where the first octet is N and the subsequent octets each describe a single supported rate.</description_user>
            <access_rights>read_only</access_rights>
            <units>500 kbps</units>
            <type>octet_string</type>
            <range_min>2</range_min><range_max>16</range_max>
            <default>{ 0x02, 0x04, 0x0b, 0x0c, 0x12, 0x16, 0x18, 0x24, 0x30, 0x48, 0x60, 0x6c }
            </default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDualBandConcurrency" psid="6123">
            <description_user>Identify whether the chip supports dualband concurrency or not.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiApOlbcDuration" psid="2076">
            <description_user>How long the AP enables reception of BEACON frames to perform Overlapping Legacy BSS Condition(OLBC). If set to 0 then OLBC is disabled.</description_user>
            <default>300</default>
            <units>milliseconds</units>
            <type>uint16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiApOlbcInterval" psid="2077">
            <description_user>How long between periods of receiving BEACON frames to perform Overlapping Legacy BSS Condition(OLBC). This value MUST exceed the OBLC duration MIB unifiApOlbcDuration. If set to 0 then OLBC is disabled.</description_user>
            <default>2000</default>
            <units>milliseconds</units>
            <type>uint16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMaxClient" psid="2550">
            <description_user>Restricts the maximum number of associated STAs for SoftAP.</description_user>
            <range_min>1</range_min><default>10</default>
            <type>uint16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPMFAssociationComebackTimeDelta" psid="6050">
            <description_user>indicates a delta time for the assocication comeback time element in the SA Query request frame. The association comeback time in the SA Query request frame will be set to TSF + unifiPMFAssociationComebackTimeDelta.</description_user>
            <type>uint32</type>
            <units>TU</units>
            <default>1100</default>
            <nature>software</nature>
        </config_element>
        <!-- end of Hardmac Elements -->

        <!-- GO protection during scan -->
        <config_element name="unifiScanAbsenceDuration" psid="2548">
            <description_user>Duration of the Absence time to use when protecting P2PGO VIFs from scan operations. A value of 0 disables the feature.</description_user>
            <default>7</default>
            <units>beacon intervals</units>
           <type>uint16</type>
           <nature>software</nature>
        </config_element>
        <config_element name="unifiScanAbsencePeriod" psid="2549">
            <description_user>Period of the Absence/Presence times cycles to use when protecting P2PGO VIFs from scan operations.</description_user>
            <default>14</default>
            <units>beacon intervals</units>
           <type>uint16</type>
           <nature>software</nature>
        </config_element>
        <!-- VHT Activation Control Elements -->
        <config_element name="unifiVhtActivated" psid="2045">
            <description_user>Enables VHT mode.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPLM689WorkaroundEnable" psid="2038">
            <description_user>Enables the PLM workaround to do an HT reasociation if the initial VHT association succeeded.</description_user>
            <type>boolean</type>
            <default>true</default>
        </config_element>
        <config_element name="unifiPLM689WorkaroundTriggerDHCPDiscoverCount" psid="2039">
            <description_user>Start the PLM workaround timer after unifiPLM689WorkaroundTriggerDHCPDiscovercount DHCP discover frames sent by the host.</description_user>
            <default>2</default>
            <units>DHCP Discover Frames</units>
            <type>uint16</type>
        </config_element>
        <config_element name="unifiPLM689WorkaroundTriggerDHCPDiscoverTimeout" psid="2040">
            <description_user>Triggers the PLM workaround after unifiPLM689WorkaroundTriggerDHCPDiscoverTimeout milliseconds after unifiPLM689WorkaroundTriggerDHCPDiscovercountDHCP discover frames sent by the host.</description_user>
            <default>1000</default>
            <units>milliseconds</units>
            <type>uint16</type>
        </config_element>
        <config_element name="unifiPLM689WorkaroundAddresses" psid="2042">
            <description_user>VHT capabilities of the chip. see SC-503520-SP.</description_user>
            <type>octet_string</type>
            <range_min>6</range_min><range_max>6</range_max>
            <default>{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}</default>
        </config_element>
        <config_element name="unifiPLM689WorkaroundTriggerStaticIPTimeout" psid="2047">
            <description_user>Triggers the static PLM workaround after unifiPLM689WorkaroundTriggerStaticIPTimeout milliseconds.</description_user>
            <default>3</default>
            <units>seconds</units>
            <type>uint16</type>
        </config_element>
        <config_element name="unifiPLM689WorkaroundTriggerARPCount" psid="2048">
            <description_user>Triggers the static PLM workaround after unifiPLM689WorkaroundTriggerARPCount ARP requests were sent.</description_user>
            <default>5</default>
            <units>frames</units>
            <type>uint16</type>
        </config_element>
        <!-- end of VHT Activation Control Elements -->
        <config_element name="unifiTqamActivated" psid="2235">
            <description_user>Enables Vendor VHT IE for 256-QAM mode on 2.4GHz.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <!-- end of TQAM / Vendor VHT IE -->
        <!-- HT Activation Control Elements -->
        <config_element name="unifiHtActivated" psid="2046">
            <description_user>Enables HT mode.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature>
        </config_element>
        <!-- end of HT Activation Control Elements -->
        <config_element name="unifiWipsActivated" psid="5050">
            <description_user>Enables Wips.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifi24G40MHZChannels" psid="2035">
            <description_user>Enables 40Mz wide channels in the 2.4G band</description_user>
            <access_rights>read_only</access_rights>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTxUsingLdpcEnabled" psid="5030">
            <description_user>LDPC will be used to code packets, for transmit only. If disabled, chip will not send LDPC coded packets even if peer supports it. To advertise reception of LDPC coded packets,enable bit 0 of unifiHtCapabilities, and bit 4 of unifiVhtCapabilities.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTxSGI20Enabled" psid="5040">
            <description_user>SGI 20MHz will be used to code packets for transmit only. If disabled, chip will not send SGI 20MHz packets even if peer supports it. To advertise reception of SGI 20MHz packets, enable bit 5 of unifiHtCapabilities.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTxSGI40Enabled" psid="5041">
            <description_user>SGI 40MHz will be used to code packets, for transmit only. If disabled, chip will not send SGI 40MHz packets even if peer supports it. To advertise reception of SGI 40MHz packets, enable bit 6 of unifiHtCapabilities.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTxSGI80Enabled" psid="5042">
            <description_user>SGI 80MHz will be used to code packets, for transmit only. If disabled, chip will not send SGI 80MHz packets even if peer supports it. To advertise reception of SGI 80MHz packets, enable bit 5 of unifiVhtCapabilities.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTxSGI160Enabled" psid="5043">
            <description_user>SGI 160/80+80MHz will be used to code packets, for transmit only. If disabled, chip will not send SGI 160/80+80MHz packets even if peer supports it. To advertise reception of SGI 160/80+80MHz packets, enable bit 6 of unifiVhtCapabilities.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMacAddressRandomisation" psid="5044">
            <description_user>Mac Address Randomisation should be applied for Probe Requests.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiSuBeamformerEnabled" psid="5045">
            <description_user>SU Beamformer will be used, for transmit only. If disabled, chip will not use SU Beamformer even if peer supports it. To advertise SU Beamformee capability, enable bit 12 of unifiVhtCapabilities.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMuBeamformerEnabled" psid="5046">
            <description_user>MU Beamformer will be used, for transmit only. If disabled, chip will not use MU Beamformer even if peer supports it. To advertise MU Beamformee capability, enable bit 20 of unifiVhtCapabilities.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMacAddressRandomisationMask" psid="5047">
            <description_user>FW randomises MAC Address bits that have a corresponding bit set to 0 in the MAC Mask for Probe Requests. This excludes U/L and I/G bits which will be set to Local and Individual respectively.</description_user>
            <type>octet_string</type>
            <range_min>6</range_min><range_max>6</range_max><default>{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiMacSequenceNumberRandomisationActivated" psid="2020">
            <description_user>Enabling Sequence Number Randomisation to be applied for Probe Requests when scanning. Note: Randomisation only happens, if mac address gets randomised.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature>
        </config_element>

        <!-- Start of roaming-relevant MIBs -->
        <config_element name="unifiRoamingEnabled" psid="2049">
            <description_user>Enable Roaming functionality</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature>
        </config_element>
          <config_element name="unifiRoamingInP2pActivated" psid="2090">
           <description_user>Activate Roaming in P2P.</description_user>
           <type>boolean</type>
           <default>false</default>
           <nature>software</nature>
          </config_element>
        <config_element name="unifiRoamRssiScanTrigger" psid="2050">
            <description_user>The current RSSI value below which roaming scan shall start</description_user>
            <type>int16</type>
            <units>dBm</units>
            <range_min>-128</range_min><range_max>127</range_max>
            <default>-75</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamRssiScanNoCandidateDeltaTrigger" psid="2064">
            <description_user>The value, in dBm, by which unifiRoamRssiScanTrigger is lowered when no roaming candidates are found. </description_user>
            <type>uint16</type>
            <units>dBm</units>
            <access_rights>read_only</access_rights>
            <range_min>1</range_min><range_max>255</range_max><default>10</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamDeltaTrigger" psid="2051">
            <description_user>Hysteresis value, in dBm, for UnifiRoamRssiScanTrigger and unifiRoamCUScanTrigger. i.e.: If the current AP RSSI is greater than UnifiRoamRssiScanTrigger + UnifiRoamRssiDeltaTrigger, soft roaming scan can be terminated.</description_user>
            <type>uint16</type>
            <units>dBm</units>
            <range_min>1</range_min><range_max>255</range_max><default>10</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamCachedChannelScanPeriod" psid="2052">
            <description_user>The scan period for cached channels background roaming (microseconds)</description_user>
            <type>uint32</type>
            <units>microseconds</units>
            <range_min>1</range_min><default>20000000</default>
            <nature>software</nature>
        </config_element>
        <config_element name="UnifiRoamTrackingScanPeriod" psid="2299">
            <description_user>The scan period for tracking not yet suitable candidate(s)(microseconds)</description_user>
            <type>uint32</type>
            <range_min>1</range_min>
            <default>5000000</default>
            <nature>software</nature>
            <units>microseconds</units>
        </config_element>
        <config_element name="unifiRoamConnectionQualityCheckWaitAfterConnect" psid="2506">
            <description_user>The amount of time a STA will wait after connection before starting to check the MLME-installed connection quality trigger thresholds</description_user>
            <type>uint16</type>
            <units>ms</units>
            <default>200</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamScanBand" psid="2055">
            <description_user>Indicates whether only intra-band or all-band should be used for roaming scan. 2 - Roaming across band 1 - Roaming within band</description_user>
            <type>uint16</type>
            <range_min>1</range_min><range_max>2</range_max><default>2</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamFullChannelScanFrequency" psid="2058">
            <description_user>Every how many cached channel scans run a full channel scan.
            </description_user>
            <type>uint16</type>
            <access_rights>read_write</access_rights>
            <range_min>1</range_min>
            <default>9</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamMode" psid="2060">
            <description_user>Enable/Disable host resume when roaming. 0: Wake up the host all the time. 1: Only wakeup the host if the AP is not white-listed. 2: Don't wake up the host.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>2</range_max><default>1</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamEAPTimeout" psid="2065">
            <description_user>Timeout for receiving the first EAP/EAPOL frame from the AP during roaming</description_user>
            <type>uint16</type>
            <units>ms</units>
            <access_rights>read_only</access_rights>
            <default>200</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamRSSIBoost" psid="2298">
            <description_user>The value in dBm of the RSSI boost for each band</description_user>
            <type>int16</type>
            <table_name>unifiRoamRSSIBoostTable</table_name>
            <default_list>
                <default index1="1">0</default>
                <default index1="2">0</default>
            </default_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamCuLocal" psid="2300">
            <description_user>Channel utilisation for the STA VIF, value 255=100% channel utilisation. - used for roaming</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>255</range_max><default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamCUScanNoCandidateDeltaTrigger" psid="2301">
            <description_user>The delta, in percentage points, to apply to unifiRoamCUScanTrigger when no candidate found during first cycle of cached channel soft scan, triggered by channel utilization.</description_user>
            <type>uint16</type>
            <units>percentage points</units>
            <range_min>0</range_min><range_max>100</range_max><default>15</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamAPSelectDeltaFactor" psid="2302">
            <description_user>Candidate AP selection delta versus current AP that triggers a roam.</description_user>
            <type>uint16</type>
            <units>percentage points</units>
            <range_min>0</range_min><range_max>100</range_max><default>20</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamCUWeight" psid="2303">
            <description_user>Weight of CUfactor, in percentage points, in AP selection algorithm.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>100</range_max><default>35</default>
        </config_element>
        <config_element name="unifiRoamCUFactor" psid="2295">
            <description_user>Bi dimensional octet string table for allocating CUfactor to CU values. First index is the radio band, and the second will be CU table entry.
            The tables define the maximum CU value to which the values do apply(MAX CU), an OFFSET and an A value for the equation:
            CUfactor = OFFSET - A*(CU)/10
            </description_user>
            <type>octet_string</type>
            <table_name>unifiRoamCUFactorTable</table_name>
            <default_list>
                <default index1="1">{0x09, 0x64, 0x00}</default>
                <default index1="2">{0x45, 0x6F, 0x0D}</default>
                <default index1="3">{0x65, 0x14, 0x00}</default>
                <default index1="4">{0x1D, 0x64, 0x00}</default>
                <default index1="5">{0x4F, 0x94, 0x10}</default>
                <default index1="6">{0x65, 0x14, 0x00}</default>
            </default_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamRssiweight" psid="2305">
            <description_user>Weight of RSSI factor, in percentage points, in AP selection algorithm.</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>100</range_max><default>65</default>
        </config_element>
        <config_element name="unifiRoamRssiFactor" psid="2306">
            <description_user>Table allocating RSSIfactor to RSSI values range.</description_user>
            <type>octet_string</type>
            <table_name>unifiRoamRssiFactorTable</table_name>
            <default_list>
                <default index1="1">{0xC9, 0x64, 0x00, 0x00}</default>
                <default index1="2">{0xC4, 0x5A, 0x02, 0x3C}</default>
                <default index1="3">{0xBA, 0x3C, 0x03, 0x46}</default>
                <default index1="4">{0xB0, 0x14, 0x04, 0x50}</default>
                <default index1="5">{0xA6, 0x00, 0x02, 0x5A}</default>
                <default index1="6">{0x81, 0x00, 0x00, 0x00}</default>
            </default_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamCURssiScanTrigger" psid="2307">
            <description_user>The current channel Averaged RSSI value below which a soft roaming scan shall initially start, providing high channel utilisation (see unifiRoamCUScanTrigger). This is a table indexed by frequency band.</description_user>
            <type>int16</type>
            <table_name>unifiRSSICURoamScanTriggerTable</table_name>
            <default_list>
                <default index1="1"> -60 </default>
                <default index1="2"> -70 </default>
            </default_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamCUScanTrigger" psid="2308">
            <description_user>BSS Load / Channel Utilisation doesn't need to be monitored more than every 10th Beacons. This is a table indexed by frequency band.</description_user>
            <type>uint16</type>
            <table_name>unifiRoamCUScanTriggerTable</table_name>
            <default_list>
                <default index1="1"> 70 </default>
                <default index1="2"> 70 </default>
            </default_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamBSSLoadMonitoringFrequency" psid="2309">
            <description_user>How often should the BSS load be monitored? - used for roaming</description_user>
            <type>uint16</type>
            <units>received beacons</units>
            <range_min>0</range_min><range_max>100</range_max><default>10</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamBSSCUTriggerFrequency" psid="2641">
            <description_user>How long, in received beacons, should the BSS load be high before triggering roaming?</description_user>
            <type>uint16</type>
            <units>received beacons</units>
            <range_min>0</range_min><range_max>1000</range_max><default>100</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamOffloaded4wshkTimeout" psid="2314">
            <description_user>Maximum time allowed before an attempt to do an offloaded 4 way handshake is considered failed?</description_user>
            <type>uint16</type>
            <units>second</units>
            <access_rights>read_write</access_rights>
            <range_min>0</range_min><range_max>100</range_max><default>10</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamBlacklistSize" psid="2310">
            <description_user>Do not remove! Read by the host! And then passed up to the framework.</description_user>
            <type>uint16</type>
            <units>entries</units>
            <access_rights>read_write</access_rights>
            <range_min>0</range_min><range_max>100</range_max><default>5</default>
            <nature>software</nature>
        </config_element>

        <config_element name="unifiNchoActivated" psid="2293">
            <description_user>Activate Network Controlled Hand Over (NCHO)</description_user>
            <access_rights>read_only</access_rights>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamNchoScanControl" psid="2067">
            <description_user>NCHO: Indicates which control path shall be evaluated in order to determine which channels should be scanned for NCHO scans.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature><!-- scan --><!-- roam -->
        </config_element>
        <config_element name="unifiRoamNchoDfsScanMode" psid="2068">
            <description_user>NCHO: Specifies how DFS channels should be scanned for roaming. For certification and Host use only. 0: DFS roaming scan disabled. 1: DFS roaming scan enabled. Normal mode. i.e. passive scanning on DFS channels (Default) 2: DFS roaming scan enabled with active scanning on channel list supplied with MLME-SET-CACHED-CHANNELS.request</description_user>
            <type>uint16</type>
            <range_min>0</range_min><range_max>2</range_max><default>1</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamNchoFullScanPeriod" psid="2053">
            <description_user>NCHO: Specifies the period at which the full channel scan shall be run. For certification and Host use only.</description_user>
            <type>uint32</type>
            <units>microseconds</units>
            <range_min>1</range_min><default>120000000</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamNchoCachedScanPeriod" psid="2292">
            <description_user>NCHO: Specifies the period at which the cached channel scan shall be run. For certification and Host use only.</description_user>
            <type>uint32</type>
            <units>microseconds</units>
            <range_min>1</range_min><default>10000000</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamNchoScanMaxActiveChannelTime" psid="2057">
            <description_user>NCHO: Specifies the maximum time spent scanning a channel.</description_user>
            <type>uint16</type>
            <units>TU</units>
            <range_min>1</range_min><default>40</default>
            <nature>software</nature><!-- scan -->
        </config_element>
        <config_element name="unifiRoamNchoScanNProbe" psid="2072">
            <description_user>NCHO: The number of ProbeRequest frames per channel.  </description_user>
            <type>uint16</type><default>2</default>
            <nature>software</nature><!-- scan -->
        </config_element>
        <config_element name="unifiRoamNchoScanHomeTime" psid="2069">
            <description_user>NCHO: The time, in TU, to spend NOT scanning during a HomeAway scan.</description_user>
            <type>uint16</type>
            <units>TU</units>
            <range_min>40</range_min><default>45</default>
            <nature>software</nature><!-- scan -->
        </config_element>
        <config_element name="unifiRoamNchoScanHomeAwayTime" psid="2070">
            <description_user>NCHO: The time, in TU, to spend scanning during a HomeAway scan.</description_user>
            <type>uint16</type>
            <units>TU</units>
            <range_min>40</range_min><default>100</default>
            <nature>software</nature><!-- scan -->
        </config_element>
        <config_element name="unifiRoamNchoRssiDelta" psid="2075">
            <description_user>NCHO: Specifies the RSSI delta at a potential candidate is deemed eligible.</description_user>
            <type>uint16</type>
            <units>dBm</units>
            <range_min>0</range_min><range_max>127</range_max><default>10</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamNchoRssiTrigger" psid="2092">
            <description_user>The current channel Averaged RSSI value below which a NCHO scan shall start.</description_user>
            <type>int16</type>
            <units>dBm</units>
            <range_min>-128</range_min><range_max>127</range_max><default>-75</default>
            <nature>software</nature><!-- scan -->
        </config_element>
        <config_element name="unifiRoamNchoRssiTriggerHysteresis" psid="2093">
            <description_user>Hysteresis value that added to unifiRoamNchoRssiTrigger will result in the RSSI value that will stop eventual NCHO scans.</description_user>
            <type>uint16</type>
            <units>dBm</units>
            <range_min>0</range_min><range_max>127</range_max><default>5</default>
            <nature>software</nature><!-- scan -->
        </config_element>
        <!-- End of roaming-relevant MIBs -->
        <config_element name="dot11TDLSPeerUAPSDIndicationWindow" psid="53">
            <description_user>The minimum time that needs to pass after the most recent TPU SP, before a RAME_TPU_SP indication can be sent to MLME</description_user>
            <type>uint16</type>
            <units>beacon intervals</units>
            <default>1</default>
            <nature>software</nature>
        </config_element>
        <!-- mibs for RAA -->
        <config_element name="unifiRaaTxHostRate" psid="4148">
            <description_user>Fixed TX rate set by Host. Ideally this should be done by the driver. 0 means "host did not specified any rate".</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <!-- <default>16385</default> 11b 1M long preamble -->
            <!-- <default>32774</default> 11n MCS6 -->
            <!-- <default>32775</default> 11n MCS7 -->
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiWMMStallEnable" psid="4139">
            <description_user>For testing: Enable workaround stall WMM traffic if the admitted time has been used up, used for cert testing</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <default>1</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRaaSpeculationInterval" psid="4140">
            <description_user>For Rate Adaptation Algorithm. It defines the repeatable amount of time, in ms, that
            firmware will start to send speculation frames.</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
           <default>100</default>
           <nature>software</nature>
        </config_element>
        <config_element name="unifiRaaSpeculationPeriod" psid="4141">
            <description_user>For Rate Adaptation Algorithm. It defines the max amount of time, in ms, that
            firmware will use for sending speculation frames</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <default>10</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRaaNumbSpeculationFrames" psid="4142">
            <description_user>For Rate Adaptation Algorithm. It defines the max amount of speculation frames that firmware is
            allowed to send.</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <default>10</default>
           <nature>software</nature>
        </config_element>
        <config_element name="unifiRaaMaxSpecTimerMultiplier" psid="4138">
            <description_user>For Rate Adaptation Algorithm. It defines the max number to be multiplied to the speculation timer, which usually is 100 ms.
            </description_user>
            <type>uint16</type>
            <format>unsigned_decimal</format>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
                <function type="get" function_name="mibuint16get" is_for_vif="false" ></function>
            </function_list>
            <default>8</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRaaTxSuccessesCount" psid="4143">
            <description_user>For Rate Adaptation Algorithm. It represents the number of transmitted
            frames that were acked at a given rate.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <table_name>unifiRateStatsTable</table_name>
            <function_list>
                <function type="get" function_name="mibraaratestatsget" is_for_vif="true" ></function>
            </function_list>
        </config_element>
        <config_element name="unifiRaaTxFailuresCount" psid="4144">
            <description_user>For Rate Adaptation Algorithm. It represents the number of transmitted
            frames that were NOT acked at a given rate.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <table_name>unifiRateStatsTable</table_name>
            <function_list>
                <function type="get" function_name="mibraaratestatsget" is_for_vif="true" ></function>
            </function_list>
           <nature>software</nature>
        </config_element>
        <config_element name="unifiRaaTxPer" psid="4145">
            <description_user>For Rate Adaptation Algorithm. It represents the Packet Error Rate
            for a given rate on the RAA rate stats.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <table_name>unifiRateStatsTable</table_name>
            <function_list>
                <function type="get" function_name="mibraaratestatsget" is_for_vif="true" ></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRaaTxMTPer" psid="4147">
            <description_user>For Rate Adaptation Algorithm. It represents the Maximum Tolerable Packet Error
            Rate for each rate.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <table_name>unifiRateStatsTable</table_name>
            <function_list>
                <function type="get" function_name="mibraaratestatsget" is_for_vif="true" ></function>
            </function_list>
           <nature>software</nature>
        </config_element>
        <config_element name="unifiRaaResetStats" psid="4146">
            <description_user>For Rate Adaptation Algorithm. It Resets the stats table used by the RAA.</description_user>
            <type>uint16</type>
            <table_name>unifiRateStatsTable</table_name>
            <function_list>
                <function type="set" function_name="mibratestatsreset" is_for_vif="true" ></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiLaaProtectionConfigOverride" psid="2356">
            <description_user>Overrides the default Protection configuration.
            Only valid flag is DPIF_CONFIG_INFO_PROTECTION_TXOP_AMPDU.
            Default allows protection code to work out the rules based on configuration.
            If DPIF_CONFIG_INFO_PROTECTION_TXOP_AMPDU is unset then, the first A-MPDU in the TxOp is no longer protected.</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibuint16set" is_for_vif="false" ></function>
            </function_list>
            <default>4</default>
            <nature>software</nature>
        </config_element>

        <!-- RAA end -->
        <!-- mibs for Fallback -->
        <config_element name="unifiFallbackShortFrameRetryDistribution" psid="4149">
            <description_user>Configure the retry distribution for fallback for short frames
                octet 0 - Number of retries for starting rate.
                octet 1 - Number of retries for next rate.
                octet 2 - Number of retries for next rate.
                octet 3 - Number of retries for next rate.
                octet 4 - Number of retries for last rate.
                If 0 is written to an entry then the retries for that rate will be the short retry limit minus the sum
                of the retries for each rate above that entry (e.g. 15 - 5). Therefore, this should always be the value for octet 4.
                Also, when the starting rate has short guard enabled, the number of retries in octet 1 will be used and
                for the next rate in the fallback table (same MCS value, but with sgi disabled) octet 0 number of retries will
                be used.</description_user>
            <type>octet_string</type>
            <range_min>5</range_min><range_max>5</range_max><default>{0x03, 0x02, 0x01, 0x00, 0x00}</default>
            <function_list>
                <function type="get" function_name="mibdplanefallbackget" is_for_vif="false" ></function>
                <function type="set" function_name="mibdplanefallbackset" is_for_vif="false" ></function>
            </function_list>
            <nature>software</nature>
       </config_element>
       <!-- mibs for Fallback end -->
       <!-- mibs for Dplane debug -->
       <config_element name="unifiDPlaneDebug" psid="6073">
            <description_user>Bit mask for turning on individual debug entities in
            the data_plane that if enabled effect throughput. See DPLP_DEBUG_ENTITIES_T in dplane_dplp_debug.h for bits.
            Default of 0x3 means dplp and ampdu logs are enabled.</description_user>
            <type>uint32</type>
            <default>0x3</default>
            <function_list>
                <function type="get" function_name="mibdplanedebugmaskget" is_for_vif="false" ></function>
                <function type="set" function_name="mibdplanedebugmaskset" is_for_vif="false" ></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <!-- mibs for Dplane debug -->
        <config_element name="unifiThroughputDebug" psid="2254">
            <description_user>is used to access throughput related counters that can help diagnose throughput problems.
            The index of the MIB will access different counters, as described in SC-506328-DD.
            Setting any index for a VIF to any value, clears all DPLP debug stats for the MAC instance used by the VIF.
            This is useful mainly for debugging LAA or small scale throughput issues that require short term
            collection of the statistics.</description_user>

            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <table_name>unifiThroughputDebugTable</table_name>
            <function_list>
                <function type="get" function_name="mibthroughputdiagnosticsget" is_for_vif="true" ></function>
                <function type="set" function_name="mibthroughputdiagnosticsset" is_for_vif="true" ></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <!-- MIBs for Host Frame Statistics -->
        <config_element name="unifiFrameTXCounters" psid="2327">
            <description_user>Frame TX Counters used by the host. These are required by MCD.</description_user>
            <type>uint32</type>
            <table_name>unifiFrameTXCountersTable</table_name>
            <function_list>
                <function type="get" function_name="mib_frameTXcounters_get" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiFrameRXCounters" psid="2326">
            <description_user>Frame RX Counters used by the host. These are required by MCD. </description_user>
            <type>uint32</type>
            <table_name>unifiFrameRXCountersTable</table_name>
            <function_list>
                <function type="get" function_name="mib_frameRXcounters_get" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiEnableMgmtTxPacketStats" psid="2249">
            <description_user>Consider management packets for TX stats counters</description_user>
            <type>boolean</type>
            <default>true</default>
            <function_list>
                <function type="set" function_name="mib_mgmt_tx_packet_stats_set" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <!-- MIBs for Link Layer Statistics -->
        <config_element name="unifiBeaconReceived" psid="2228">
            <description_user>Access point beacon received count from connected AP</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibllsstatsget" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRadioLpRxRssiThresholdLower" psid="6028">
            <description_user>The lower RSSI threshold for switching between low power rx and normal rx.
            If the RSSI avg of received frames is lower than this value for a VIF, then that VIF will vote against using low-power radio RX.
            Low power rx could negatively influence the receiver sensitivity.</description_user>
            <type>int16</type>
            <units>dBm</units>
            <range_min>-128</range_min><range_max>127</range_max><default>-60</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRadioLpRxRssiThresholdUpper" psid="6029">
            <description_user>The upper RSSI threshold for switching between low power rx and normal rx.
            If the RSSI avg of received frames is higher than this value for a VIF, then that VIF will vote in favour of using low-power radio RX.
            Low power RX could negatively influence the receiver sensitivity.</description_user>
            <type>int16</type>
            <units>dBm</units>
            <range_min>-128</range_min><range_max>127</range_max><default>-50</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiLnaControlEnabled" psid="6013">
            <description_user>Enable dynamic switching of the LNA based on RSSI.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiLnaControlRssiThresholdLower" psid="6014">
            <description_user>The lower RSSI threshold for dynamic switching of the LNA.
            If the RSSI avg of received frames is lower than this value for all scheduled VIFs, then the external LNA will be enabled.</description_user>
            <type>int16</type>
            <units>dBm</units>
            <range_min>-128</range_min><range_max>127</range_max><default>-40</default>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiLnaControlRssiThresholdUpper" psid="6015">
            <description_user>The upper RSSI threshold for dynamic switching of the LNA.
            If the RSSI avg of received frames is higher than this value for all scheduled VIFs, then the external LNA will be disabled.</description_user>
            <type>int16</type>
            <units>dBm</units>
            <range_min>-128</range_min><range_max>127</range_max><default>-30</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiACRetries" psid="2229">
            <description_user>It represents the number of retransmitted frames under each ac priority
            (indexed by unifiAccessClassIndex). This number will wrap to zero after the range is exceeded.</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <table_name>unifiAcTxConfirmTable</table_name>
            <function_list>
                <function type="get" function_name="mibllsstatsget" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRadioOnTime" psid="2230">
            <description_user>msecs the radio is awake (32 bits number accruing over time)</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibllsstatsget" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRadioTxTime" psid="2231">
            <description_user>msecs the radio is transmitting (32 bits number accruing over time)</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibllsstatsget" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRadioRxTime" psid="2232">
            <description_user>msecs the radio is in active receive (32 bits number accruing over time)</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibllsstatsget" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRadioScanTime" psid="2233">
            <description_user>msecs the radio is awake due to all scan (32 bits number accruing over time)</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibllsstatsget" is_for_vif="false"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiPSLeakyAP" psid="2234">
            <description_user>indicate that this AP typically leaks packets beyond the guard time (5msecs).</description_user>
            <access_rights>read_only</access_rights>
            <type>uint32</type>
            <default>0</default>
            <function_list>
                <function type="get" function_name="mibllsstatsget" is_for_vif="true" ></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <!-- End of MIBs for Link Layer Statistics -->
        <config_element name="unifiRadioMeasurementActivated" psid="2043">
            <description_user>When TRUE Radio Measurements are supported.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRadioMeasurementCapabilities" psid="2044">
            <description_user>RM Enabled capabilities of the chip. See SC-503520-SP for further details.</description_user>
            <type>octet_string</type>
            <range_min>5</range_min><range_max>5</range_max><default>{ 0x73, 0x00, 0x00, 0x00, 0x00 }</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiOverrideDefaultBETXOP" psid="2365">
            <description_user>When set to non-zero value then this will override the BE TXOP for 11g (in 32 usec units) to the value specified here.</description_user>
            <type>uint16</type>
            <default>78</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiOverrideDefaultBETXOPForHT" psid="2364">
            <description_user>When set to non-zero value then this will override the BE TXOP for 11n and higher modulations (in 32 usec units) to the value specified here.</description_user>
             <type>uint16</type>
            <default>171</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRXABBTrimSettings" psid="2366">
          <description_user>Various settings to change RX ABB filter trim behavior.</description_user>
            <type>uint32</type>
            <default>0</default>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRadioTrimsEnable" psid="2367">
          <description_user>A bitmap for enabling/disabling trims at runtime
                            | lsb | trim     |
                            |-----+----------|
                            |   0 | RX ABB   |
                            |   1 | TX ABB   |
                            |   2 | WBRSSI   |
                            other trims might follow.</description_user>
            <type>uint32</type>
            <default>5</default>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRadioCCAThresholds" psid="2368">
          <description_user>The CCA thresholds so that the CCA-ED triggers at the regulatory value of -62 dBm.</description_user>
          <type>octet_string</type>
          <range_min>0</range_min><range_max>255</range_max>
          <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
          <table_name>unifiRadioCCAThresholdsTable</table_name>
          <default_list>
            <!-- A bug (SSB-37420) in the mib code means that if you want to use defaults octet strings in a table -->
            <!-- you need to specify atleast two rows, so here we just provide two identical rows. -->
            <default index1="1">{ 0x01, 0x03, 0x07, 0x03, 0x03, 0x00, 0x16, 0x00, 0x30, 0x00, 0x16, 0x00, 0x30 }</default>
            <default index1="2">{ 0x01, 0x03, 0x07, 0x03, 0x03, 0x00, 0x16, 0x00, 0x30, 0x00, 0x16, 0x00, 0x30 }</default>
          </default_list>
          <nature>hardware</nature>
        </config_element>
        <config_element name="unifiHardwarePlatform" psid="2369">
          <description_user>Hardware platform. This is necessary so we can apply tweaks to specific revisions, even though they might be running the same baseband and RF chip combination. Check unifiHardwarePlatform enum for description of the possible values.</description_user>
          <type>unifiHardwarePlatform</type>
          <default>0</default>
          <nature>hardware</nature>
        </config_element>
        <config_element name="unifiDPDTrainingDuration" psid="2371">
          <description_user>Duration of DPD training (in ms).</description_user>
          <type>uint16</type>
          <default>10</default>
          <nature>hardware</nature>
        </config_element>
        <config_element name="unifiDPDTrainPacketConfig" psid="2373">
          <description_user>
This MIB allows the dummy packets training bandwidth and rates to be overriden. Tipically the bandwidth would be the same as the channel bandwidth (for example 80 MHz packets for an 80 Mhz channel) and rates MCS1 and MCS5. With this MIB you can set, for example, an 80 MHz channel to be trained using 20 MHz bandwidth (centered or not) with MCS2 and MCS7 packets. The MIB index dictates what channel bandwidth the configuration is for (1 for 20 MHz, 2 for 40 MHz and so on). The format is:
    - octet 0: train bandwidth (this basically follows the halradio_channel_bw enum).
    - octet 1: train primary channel position
    - octet 2-3: OFDM 0 rate
    - octet 4-5: OFDM 1 rate
    - octet 6-7: CCK rate (unused)
The rates are encoded in host(FAPI) format, see SC-506179, section 4.41.
          </description_user>
          <access_rights>read_write</access_rights>
          <type>octet_string</type>
          <range_min>8</range_min><range_max>8</range_max>
          <function type="set" function_name="mibricechangefsmparams" is_for_vif="false"></function>
          <table_name>unifiDPDTrainPacketConfigTable</table_name>
          <default_list>
            <!-- 20 MHz: Train on 20 MHz bandwidth, using 11n20_13mbps (MCS1) and 11n20_52mbps (MCS5) -->
            <default index1="1">  {0x00, 0x00, 0x80, 0x01, 0x80, 0x05, 0x00, 0x00} </default>
            <!-- 40 MHz: Train on 40/20 MHz bandwidth, using 11n40_27mbps (MCS1) and 11n20_52mbps (MCS5) -->
            <default index1="2">  {0x01, 0x00, 0x82, 0x01, 0x80, 0x05, 0x00, 0x00} </default>
            <!-- 80 MHz: Train on 40 MHz bandwidth, using 11n40_27mbps (MCS1) and 11n40_108mbps (MCS5) -->
            <default index1="3">  {0x01, 0x00, 0x82, 0x01, 0x82, 0x05, 0x00, 0x00} </default>
          </default_list>
          <nature>hardware</nature>
        </config_element>
        <config_element name="unifiCurrentBssChannelFrequency" psid="2318">
            <description_user>Centre frequency for the connected channel</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiCurrentBssBandwidth" psid="2317">
            <description_user>Current bandwidth the STA is operating on
            channel_bw_20_mhz   = 20,
            channel_bw_40_mhz   = 40,
            channel_bw_80_mhz   = 80,
            channel_bw_160_mhz  = 160</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiCurrentBssNss" psid="2312">
            <description_user>specifies current AP antenna mode:
            0 = SISO,
            1 = MIMO (2x2),
            2 = MIMO (3x3),
            3 = MIMO (4x4)</description_user>
            <access_rights>read_only</access_rights>
            <type>unifiAntennaMode</type>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiAPMimoUsed" psid="2313">
            <description_user>AP uses MU-MIMO</description_user>
            <access_rights>read_only</access_rights>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamingCount" psid="2315">
            <description_user>Number of roams</description_user>
            <type>uint16</type>
            <access_rights>read_only</access_rights>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiRoamingAKM" psid="2316">
            <description_user>specifies current AKM
            0 = None
            1 = OKC
            2 = FT (FT_1X)
            3 = PSK
            4 = FT_PSK
            5 = PMKSA Caching</description_user>
            <access_rights>read_only</access_rights>
            <type>unifiRoamingAKM</type>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTPCEnabled" psid="6019">
            <description_user>Enables or disables TPC control.</description_user>
            <type>boolean</type>
            <function_list>
                <function type="set" function_name="mibboolset" is_for_vif="false" ></function>
                <function type="get" function_name="mibboolget" is_for_vif="false" ></function>
            </function_list>
            <default>true</default>
        </config_element>
        <config_element name="unifiTestTspecHack" psid="6060">
            <description_user>For testing: MLME Hack to allow in-house tspec testing</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTestTspecHackValue" psid="6061">
            <description_user>Saved dialog number of tspec request action frame from the Host</description_user>
            <type>uint16</type>
            <default>0</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiTestScanNoMedium" psid="6122">
            <description_user>For testing: Stop Scan from using the Medium to allow thruput testing.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>

        <!-- ******************************************************************************************* -->
        <config_element name="hutsReadWriteDataElementInt32" psid="6100">
            <description_user>Reserved for HUTS tests - Data element read/write entry of int32 type.</description_user>
            <type>uint32</type>
            <range_min>0</range_min><range_max>4294967295</range_max><default>1000</default>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteDataElementBoolean" psid="6101">
            <description_user>Reserved for HUTS tests - Data element read/write entry of boolean type.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteDataElementOctetString" psid="6102">
            <description_user>Reserved for HUTS tests - Data element read/write entry of octet string type.</description_user>
            <type>octet_string</type>
            <range_min>9</range_min><range_max>9</range_max>
            <default>{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }</default>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteTableInt16Row" psid="6103">
            <description_user>Reserved for HUTS tests - Data element read/write entry table of int16 type.</description_user>
            <access_rights>read_only</access_rights>
            <type>int16</type>
            <range_min>-32768</range_min><range_max>32767</range_max>
            <table_name>hutsReadWriteTableInt16IdTable</table_name>
            <function type="get" function_name="mibhutsint16get" is_for_vif="true"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteTableOctetStringRow" psid="6104">
            <description_user>Reserved for HUTS tests - Data element read/write entry table of octet string type.</description_user>
            <access_rights>read_only</access_rights>
            <type>octet_string</type>
            <range_min>6</range_min><range_max>73</range_max>
            <table_name>hutsReadWriteTableOctetStringTable</table_name>
            <default_list>
                <!-- Row 1 -->
                <default index1="1">{0x53,0x54,0x70,0x73,0x74,0x75,0x7A,0x7B,0x7C,
                                     0x7D,0x7E,0x7F,0x80,0x81,0x82}</default>
                <!-- Row 2 -->
                <default index1="2">{0x01,0x02,0x03,0x05,0x06,0x07,0x08,0x09,0x0A,0x10,
                                     0x11,0x80,0x81,0x82}</default>
                <!-- Row 3 -->
                <default index1="3">{0x01,0x03,0x05,0x16,0x17,0x19,0x1A,0x1B,0x1C,0x1E,
                                     0x1F,0x20,0x21,0x80,0x81,0x82}</default>
                <!-- Tow 4 -->
                <default index1="4">{0x01,0x02,0x03,0x04,0x05,0x06,0x20,0x21,0x24,0x25,
                                     0x26,0x29,0x2A,0x2B,0x3A,0x80,0x81,0x82}</default>
            </default_list>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteRemoteProcedureCallInt32" psid="6105">
            <description_user>Reserved for HUTS tests - Remote Procedure call read/write entry of int32 type.</description_user>
            <type>uint32</type>
            <default>0x000A0001</default>
            <function_list>
                <function type="get" function_name="mibuint32get" is_for_vif="true"></function>
                <function type="set" function_name="mibuint32set" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteRemoteProcedureCallOctetString" psid="6107">
            <description_user>Reserved for HUTS tests - Remote Procedure call read/write entry of octet string type.</description_user>
            <type>octet_string</type>
            <range_min>144</range_min><range_max>144</range_max>
            <function_list>
                <function type="get" function_name="miboctetstringget"></function>
                <function type="set" function_name="miboctetstringset"></function>
            </function_list>
            <table_name>hutsReadWriteRPCTableOctetStringTable</table_name>
            <nature>software</nature>
        </config_element>
       <config_element name="hutsReadWriteInternalAPIInt16" psid="6108">
            <description_user>Reserved for HUTS tests - Data element read/write entry of int16 type via internal API.</description_user>
            <default>-55</default>
            <type>int16</type>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIUint16" psid="6109">
            <description_user>Reserved for HUTS tests - Data element read/write entry of unsigned int16 type via internal API.</description_user>
            <type>uint16</type>
            <default>0x0730</default>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIUint32" psid="6110">
            <description_user>Reserved for HUTS tests - Data element read/write entry of unsigned int32 type via internal API.</description_user>
            <units>&#x00b5;s</units>
            <type>uint32</type>
            <range_max>2147483647</range_max><default>30000</default>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIInt64" psid="6111">
            <description_user>Reserved for HUTS tests - Data element read/write entry of int64 type via internal API.</description_user>
            <access_rights>read_only</access_rights>
            <type>int64</type>
            <function_list>
                <function type="get" function_name="mibtsftime" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIBoolean" psid="6112">
            <description_user>Reserved for HUTS tests - Data element read/write entry of boolean type via internal API.</description_user>
            <type>boolean</type>
            <default>true</default>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIOctetString" psid="6113">
            <description_user>Reserved for HUTS tests - Data element read/write entry of octet string type via internal API.</description_user>
            <type>octet_string</type>
            <range_min>8</range_min><range_max>8</range_max>
            <default>{ 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }</default>
            <nature>software</nature>
        </config_element>
        <!-- Index -->
        <config_element name="hutsReadWriteInternalAPIVarSizeTableindex" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>4</range_max>
        </config_element>
        <!-- Columns -->
        <config_element name="hutsReadWriteInternalAPIFixedSizeTableRow" psid="6114">
          <description_user>Reserved for HUTS tests - Fixed size table rows of int16 type via internal API</description_user>
          <type>int16</type>
          <range_min>0</range_min><range_max>100</range_max>
          <table_name>hutsReadWriteInternalAPIFixedSizeTable</table_name>
          <default_list>
            <default index1="1"> 80 </default>
            <default index1="2"> 80 </default>
            <default index1="3"> 80 </default>
            <default index1="4"> 80 </default>
          </default_list>
          <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIVarSizeTableRow" psid="6115">
          <description_user>Reserved for HUTS tests - Variable size table rows of octet string type via internal API</description_user>
            <access_rights>read_only</access_rights>
            <type>octet_string</type>
            <range_min>6</range_min><range_max>73</range_max>
            <table_name>hutsReadWriteInternalAPIVarSizeTable</table_name>
            <default_list>
            <!-- Row 1 -->
            <default index1="1">{0x53,0x54,0x70,0x73,0x74,0x75,0x7A,0x7B,0x7C,
                                 0x7D,0x7E,0x7F,0x80,0x81,0x82}</default>
            <!-- Row 2 -->
            <default index1="2">{0x01,0x02,0x03,0x05,0x06,0x07,0x08,0x09,0x0A,0x10,
                                 0x11,0x80,0x81,0x82}</default>
            <!-- Row 3 -->
            <default index1="3">{0x01,0x03,0x05,0x16,0x17,0x19,0x1A,0x1B,0x1C,0x1E,
                                 0x1F,0x20,0x21,0x80,0x81,0x82}</default>
            <!-- Row 4 -->
            <default index1="4">{0x01,0x02,0x03,0x04,0x05,0x06,0x20,0x21,0x24,0x25,
                                 0x26,0x29,0x2A,0x2B,0x3A,0x80,0x81,0x82}</default>
            </default_list>
            <nature>software</nature>
         </config_element>
        <config_element name="hutsReadWriteInternalAPIFixSizeTableKey1Row" psid="6116">
          <description_user>Reserved for HUTS tests - Fixed size table rows of int16 type via internal API</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <table_name>hutsReadWriteInternalAPIFixSizeTableKeys</table_name>
            <function_list>
                <function type="get" function_name="mibhutsint16get" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIFixSizeTableKey2Row" psid="6117">
          <description_user>Reserved for HUTS tests - Fixed size table rows of int16 type via internal API</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <table_name>hutsReadWriteInternalAPIFixSizeTableKeys</table_name>
            <function_list>
                <function type="get" function_name="mibhutsint16get" is_for_vif="true"></function>
            </function_list>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIFixVarSizeTableKey1Row" psid="6118">
            <description_user>The values stored in hutsReadWriteInternalAPIFixVarSizeTableKeys</description_user>
            <type>uint32</type>
            <table_name>hutsReadWriteInternalAPIFixVarSizeTableKeys</table_name>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIFixVarSizeTableKey2Row" psid="6119">
            <description_user>The values stored in hutsReadWriteInternalAPIFixVarSizeTableKeys</description_user>
            <type>octet_string</type>
            <table_name>hutsReadWriteInternalAPIFixVarSizeTableKeys</table_name>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIFixSizeTableKeyRow" psid="6120">
            <description_user>The number of received MPDUs discarded by the CCMP decryption algorithm.</description_user>
            <access_rights>read_only</access_rights>
            <type>int64</type>
            <range_min>0</range_min><range_max>4294967295</range_max>
            <table_name>hutsReadWriteInternalAPIFixSizeTableKeyRowTable</table_name>
            <function type="get" function_name="mibtsftime"></function>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIFixSizeTableKeyIndex1" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>1</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIFixSizeTableKeyIndex2" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>6</range_max>
            <description_user>table index</description_user>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIVarSizeTableKeyRow" psid="6121">
            <description_user>Write a DPD LUT entry</description_user>
            <type>octet_string</type>
            <range_min>144</range_min><range_max>144</range_max>
            <function_list>
                <function type="get" function_name="miboctetstringget"></function>
                <function type="set" function_name="miboctetstringset"></function>
            </function_list>
            <table_name>hutsReadWriteInternalAPIVarSizeTableKeyTable</table_name>
            <nature>software</nature>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIVarSizeTableKeyIndex1" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>3</range_max>
            <description_user>group index</description_user>
        </config_element>
        <config_element name="hutsReadWriteInternalAPIVarSizeTableKeyIndex2" psid="0">
            <type>integer</type>
            <range_min>1</range_min><range_max>3</range_max>
            <description_user>temperature index</description_user>
        </config_element>
        <config_element name="unifiCUMeasurementInterval" psid="2311">
            <description_user>The interval in ms to perform the channel usage update</description_user>
            <type>uint32</type>
            <range_min>1</range_min><range_max>1000</range_max><default>500</default>
            <nature>software</nature>
        </config_element>
        <config_element name="unifiDebugDisableRadioNannyActions" psid="5082">
            <description_user>Disable the radio nanny actions</description_user>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mibuint16get" is_for_vif="false"></function>
                <function type="set" function_name="mibricechangenonfsmparams"></function>
            </function_list>
            <default>0</default>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRxCckModemSensitivity" psid="5083">
            <description_user>Specify values of CCK modem sensitivity for scan, normal and low
                              sensitivity.</description_user>
            <type>octet_string</type>
            <range_min>6</range_min><range_max>6</range_max>
		    <default>{ 0x0a, 0x09, 0x05, 0xa, 0xa, 0x0 }</default>
            <function type="set" function_name="mibricechangenonfsmparams"></function>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiDpdPerBandwidth" psid="5084">
            <description_user>Bitmask to enable Digital Pre-Distortion per bandwidth</description_user>
            <description_internal>Enables DPD per bandwidth per band</description_internal>
            <type>uint16</type>
            <default>63</default>
            <function_list>
                <function type="set" function_name="mibricechangenonfsmparams"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiBBVersion" psid="5085">
            <description_user>Baseband chip version number determined by reading BBIC version</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mibuint16get" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRFVersion" psid="5086">
            <description_user>RF chip version number determined by reading RFIC version</description_user>
            <access_rights>read_only</access_rights>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mibuint16get" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRadioTXSettingsRead" psid="5089">
            <description_user>Read value from Tx settings.</description_user>
            <description_internal> Read TX debug settings. </description_internal>
            <access_rights>read_only</access_rights>
            <table_name>unifiRadioTXSettingsTable</table_name>
            <type>uint16</type>
            <function_list>
                <function type="get" function_name="mibradiotxsettingsread"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRadioRXSettingsRead" psid="5096">
            <description_user>Read value from Rx settings.</description_user>
            <description_internal> Read RX debug settings. </description_internal>
            <access_rights>read_only</access_rights>
            <table_name>unifiRadioRXSettingsTable</table_name>
            <type>octet_string</type>
            <function_list>
                <function type="get" function_name="mibradiorxsettingsread"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRadioCCADebug" psid="5100">
            <description_user>Read values from Radio CCA settings.</description_user>
            <access_rights>read_only</access_rights>
            <table_name>unifiRadioCCADebugTable</table_name>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibradioccadebug"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiNarrowbandCCADebug" psid="5107">
            <description_user>Read values from Radio CCA settings.</description_user>
            <access_rights>read_only</access_rights>
            <table_name>unifiNarrowbandCCADebugTable</table_name>
            <type>uint32</type>
            <function_list>
                <function type="get" function_name="mibhalmacmodemnarrowbandcca"></function>
            </function_list>
           <nature>software</nature>
        </config_element>
        <config_element name="unifiModemSgiOffset" psid="5090">
            <description_user>Overwrite SGI sampling offset. Indexed by Band and Bandwidth. Defaults currently defined in fw.</description_user>
            <table_name>unifiModemSgiOffsetTable</table_name>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibhalmacmodemgenericset" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRxRadioCsMode" psid="5092">
            <description_user>Configures RX Radio CS detection for 80MHz bandwidth. Note get is obsolete.</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibhalmacmodemgenericset"></function>
                <function type="get" function_name="mibhalmacmodemgenericget"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRxPriEnergyDetThreshold" psid="5093">
            <description_user>Energy detection threshold for primary 20MHz channel. Note get is obsolete.</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibhalmacmodemgenericset"></function>
                <function type="get" function_name="mibhalmacmodemgenericget"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRxSecEnergyDetThreshold" psid="5094">
            <description_user>Energy detection threshold for secondary 20MHz channel. Note get is obsolete.</description_user>
            <type>uint16</type>
            <function_list>
                <function type="set" function_name="mibhalmacmodemgenericset"></function>
                <function type="get" function_name="mibhalmacmodemgenericget"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRadioTxPowerOverride" psid="5091">
            <description_user>Option in radio code to override the power requested by the upper layer</description_user>
            <access_rights>read_write</access_rights>
            <type>int16</type>
            <range_min>-128</range_min><range_max>127</range_max>
            <table_name>unifiRadioTxPowerOverrideTable</table_name>
            <function_list>
              <function type="set" function_name="mibricegenericset" is_for_vif="false"></function>
              <function type="get" function_name="mibint16get" is_for_vif="false"></function>
            </function_list>
            <nature>hardware</nature>
        </config_element>
        <config_element name="unifiRfTestModeEnabled" psid="5054">
            <description_user>Set to true when running in RF Test mode. Setting this MIB key to true prevents setting mandatory HT MCS Rates.</description_user>
            <type>boolean</type>
            <default>false</default>
            <nature>software</nature>
        </config_element>

        <!-- ******************************************************************************************* -->
        <config_table table_name="dot11RSNAStatsTable" num_indices="2">
            <description_user>This table maintains per-STA statistics in an RSN. The entry with dot11RSNAStatsSTAAddress set to FF-FF-FF-FF-FF-FF shall contain statistics for broadcast/multicast traffic.</description_user>
            <index1 name="dot11RSNAConfigIndex" />
            <index2 name="dot11RSNAStatsIndex" />
        </config_table>
        <config_table table_name="unifiQueueStatsIdTable" num_indices="1">
            <description_user>Conceptual table for timing of queue transfers HOST-SW-HW</description_user>
            <index1 name="unifiQueueStatsIndex" />
        </config_table>
        <config_table table_name="unifiRateStatsTable" num_indices="1">
            <description_user>Conceptual table for transmit/receive rate statistics.</description_user>
            <index1 name="unifiRateStatsIndex" />
        </config_table>
        <config_table table_name="unifiThroughputDebugTable" num_indices="1">
            <description_user>Conceptual table for throughput diagnostics counters.</description_user>
            <index1 name="unifiThroughputDebugIndex" />
        </config_table>
        <config_table table_name="unifiReadRegTable" num_indices="1">
            <description_user>Conceptual table for reading registers.</description_user>
            <index1 name="unifiReadHardwareCounterIndex" />
        </config_table>
        <config_table table_name="unifiRadioTXSettingsTable" num_indices="2">
            <description_user>Conceptual table for tx settings.</description_user>
            <index1 name="unifiMacInstanceIndex" />
            <index2 name="unifiRadioTXSettingsIndex" />
        </config_table>
        <config_table table_name="unifiRadioRXSettingsTable" num_indices="2">
            <description_user>Conceptual table for rx settings.</description_user>
            <index1 name="unifiRadioInstanceIndex" />
            <index2 name="unifiRadioRXSettingsIndex" />
        </config_table>
        <config_table table_name="unifiRadioCCADebugTable" num_indices="2">
            <description_user>Conceptual table for radio CCA settings.</description_user>
            <index1 name="unifiRadioInstanceIndex" />
            <index2 name="unifiRadioCCADebugTableIndex" />
        </config_table>
        <config_table table_name="unifiNarrowbandCCADebugTable" num_indices="1">
            <description_user>Conceptual table for narrowband CCA settings.</description_user>
            <index2 name="unifiNarrowbandCCADebugTableIndex" />
        </config_table>
        <config_table table_name="unifiReadHardwareCounterTable" num_indices="2">
            <description_user>Conceptual table for reading hardware packet counters.  First index is the MAC instance from which to read, second index is the counter to be read.</description_user>
            <index1 name="unifiMacInstanceIndex" />
            <index2 name="unifiReadHardwareCounterIndex" />
        </config_table>
        <config_table table_name="unifiLoadDpdLutTable" num_indices="2">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <index1 name="unifiLoadDpdLutGroupIndex" />
            <index2 name="unifiLoadDpdLutTemperatureIndex" />
        </config_table>
        <config_table table_name="unifiRadioCCAThresholdsTable" num_indices="1">
            <description_user>This table contains hardware specific CCA Thresholds settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <index1 name="unifiRadioCCAThresholdsTableIndex" />
        </config_table>
        <config_table table_name="unifiTxSettingsTable" num_indices="1">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <index1 name="unifiTxSettingsTableIndex" />
        </config_table>
        <config_table table_name="unifiTxGainSettingsTable" num_indices="1">
            <description_user>This table contains hardware specific transmitter gain settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <index1 name="unifiTxGainSettingsTableIndex" />
        </config_table>
        <config_table table_name="unifiRadioTxPowerOverrideTable" num_indices="1">
            <description_user>Table for the power override settings via RICE</description_user>
            <index1 name="unifiRadioTXPowerOverrideTableIndex" />
        </config_table>
        <config_table table_name="unifiTxPowerDetectorResponseTable" num_indices="1">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <description_internal> This table defines the response of the power detectors(2G5/5G) in the external FEM. The detectors are sampled via the BIST ADC. The reference temperature and frequencies for this table are implicitly defined by the related temperature and frequency compensation tables. </description_internal>
            <index1 name="unifiTxPowerDetectorResponseTableIndex" />
        </config_table>
        <config_table table_name="unifiTxDetectorTemperatureCompensationTable" num_indices="1">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <description_internal> This table is used to compensate detector measurements for temperature. The reference temperature for temperature compensation is implicitly defined by the temperature at which the (interpolated) table values return zero correction.</description_internal>
            <index1 name="unifiTxDetectorTemperatureCompensationTableIndex" />
        </config_table>
        <config_table table_name="unifiTxDetectorFrequencyCompensationTable" num_indices="1">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <description_internal> This table is used to compensate detector measurements for frequency. The reference frequency for frequency compensation is implicitly defined by the frequency at which the (interpolated) table values return zero correction.</description_internal>
            <index1 name="unifiTxDetectorTemperatureCompensationTableIndex" />
        </config_table>
        <config_table table_name="unifiTxOpenLoopTemperatureCompensationTable" num_indices="1">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <description_internal> This table is used to open-loop compensate forward path gains for self-heating between transmit power calibrations. The reference temperature for temperature compensation is implicitly defined by the temperature at which the (interpolated) table values return zero correction.</description_internal>
            <index1 name="unifiTxOpenLoopTemperatureCompensationTableIndex" />
        </config_table>
        <config_table table_name="unifiTxOpenLoopFrequencyCompensationTable" num_indices="1">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <description_internal> This table is used to open-loop compensate forward path gains across frequency between transmit power calibrations. The reference frequency for frequency compensation is implicitly defined by the frequency at which the (interpolated) table values return zero correction.</description_internal>
            <index1 name="unifiTxOpenLoopFrequencyCompensationTableIndex" />
        </config_table>
        <config_table table_name="unifiTxPaGainDpdTemperatureCompensationTable" num_indices="1">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <description_internal> This table is used to open-loop compensate forward path PA gains when calculating DPD hot and cold LUTs for self-heating. The reference temperature for temperature compensation is implicitly defined by the temperature at which the (interpolated) table values return zero correction.</description_internal>
            <index1 name="unifiTxPaGainDpdTemperatureCompensationTableIndex" />
        </config_table>
        <config_table table_name="unifiTxPaGainDpdFrequencyCompensationTable" num_indices="1">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <description_internal> This table is used to compensate forward path PA gains when calculating DPD hot and cold LUTs across frequency. The reference frequency for frequency compensation is implicitly defined by the frequency at which the (interpolated) table values return zero correction.</description_internal>
            <index1 name="unifiTxPaGainDpdFrequencyCompensationTableIndex" />
        </config_table>
        <config_table table_name="unifiTxFtrimSettingsTable" num_indices="1">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <description_internal> This table is used to frequency compensate forward path.</description_internal>
            <index1 name="unifiTxFtrimSettingsTableIndex" />
        </config_table>
        <config_table table_name="unifiTxGainStepSettingsTable" num_indices="1">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <description_internal> This table is used to set the gain steps (v2i, mix, drv, pa) of the forward path.</description_internal>
            <index1 name="unifiTxGainStepSettingsTableIndex" />
        </config_table>
        <config_table table_name="unifiDpdPredistortGainsTable" num_indices="1">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <description_internal>This table is used to set DPD digital pre-distort gains of the forward path.</description_internal>
            <index1 name="unifiDpdPredistortGainsTableIndex" />
        </config_table>
        <config_table table_name="unifiTxPowerTrimConfigTable" num_indices="1">
            <description_user>This table contains hardware specific transmitter settings. Entries in this table should only be altered after advice from Applications Support.</description_user>
            <description_internal> This table is used to set psat, biases and adjustment ranges of the forward path during power trim.</description_internal>
            <index1 name="unifiTxPowerTrimConfigTableIndex" />
        </config_table>
        <config_table table_name="unifiTxAntennaConnectionLossTable" num_indices="1">
            <description_user>The table giving the frequency-dependent connection loss value, which is used as conversion factors for raw tx power at connector</description_user>
            <index1 name="unifiTxAntennaConnectionLossTableIndex" />
        </config_table>
        <config_table table_name="unifiTxAntennaMaxGainTable" num_indices="1">
            <description_user>The table giving the frequency-dependent antenna max gain value, which is used as conversion factors for raw tx power at connector</description_user>
            <index1 name="unifiTxAntennaMaxGainTableIndex" />
        </config_table>
        <config_table table_name="unifiRxExternalGainTable" num_indices="1">
            <description_user>The table giving frequency-dependent RSSI offset value</description_user>
            <index1 name="unifiRxExternalGainTableIndex" />
        </config_table>
        <config_table table_name="unifiTxOOBConstraintTable" num_indices="1">
            <description_user>Table containing settings necessary to ensure the IC observes transmit out-of-band regulatory constraints when operating near band edges.</description_user>
            <index1 name="unifiTxOOBConstraintTableIndex" />
        </config_table>
        <config_table table_name="unifiTxPowerAdjustTable" num_indices="1">
            <description_user>This table allows you to adjust absolute transmit power in a frequency and/or temperature dependant manner. The table allows you to specify datapoints in quarter dB based on frequency and temperature. The firmware will then perform a 2D interpolation to perform the right adjustment for the current frequency and temperature.</description_user>
            <index1 name="unifiTxPowerAdjustTableIndex" />
        </config_table>
        <config_table table_name="unifiDebugControlTable" num_indices="1">
            <description_user>The table is used to control various debug settings on a per module basis</description_user>
            <index1 name="unifiDebugControlTableIndex" />
        </config_table>
        <config_table table_name="unifiRegulatoryTable" num_indices="1">
            <description_user>This table holds the regulatory information for all countries.</description_user>
            <index1 name="unifiRegulatoryTableIndex" />
        </config_table>
        <config_table table_name="unifiPeerIdTable" num_indices="1">
            <description_user>Conceptual table for peer information at disconnect (Bandwith, Nss, RSSI, Tx data rate), index by Pid.</description_user>
            <index1 name="unifiPeerid" />
        </config_table>
        <config_table table_name="unifiOperatingClassTable" num_indices="1">
            <description_user>Operating Class table</description_user>
            <index1 name="unifiOperatingClassTableIndex" />
        </config_table>
        <config_table table_name="unifiScanParametersTable" num_indices="1">
            <description_user>Scan Parameters table</description_user>
            <index1 name="unifiScanParametersTableIndex" />
        </config_table>
        <config_table table_name="unifiSarBackoffTable" num_indices="1">
            <description_user>SarBackoff Parameters table</description_user>
            <index1 name="unifiBandTableIndex" />
        </config_table>
        <config_table table_name="unifiCCACSThreshTable" num_indices="1">
            <description_user>CCA CS threshold parameters table</description_user>
            <index1 name="unifiSisoMimoTableIndex" />
        </config_table>
        <config_table table_name="unifiMacBusyTimeTable" num_indices="2">
            <description_user>unifiMacBusyTime table</description_user>
            <index1 name="unifiMacInstanceIndex" />
            <index2 name="unifiMacBusyTimeTableIndex" />
        </config_table>
        <config_table table_name="unifiModemSgiOffsetTable" num_indices="2">
            <description_user>SGI sample offset parameters table</description_user>
            <index1 name="unifiBandTableIndex" />
            <index2 name="unifiBWTableIndex" />
        </config_table>
        <config_table table_name="unifiNoCellTable" num_indices="1">
        <description_user>NoCell Parameters table</description_user>
            <index1 name="unifiConnectionTypeTableIndex" />
        </config_table>
        <config_table table_name="unifiAcTxConfirmTable" num_indices="1">
            <description_user>Conceptual table for requesting Tx confirm, index by Access Class.</description_user>
            <index1 name="unifiAccessClassIndex" />
        </config_table>
        <config_table table_name="unifiDefaultCountryTable" num_indices="1">
            <description_user>Table of country codes.</description_user>
            <index1 name="unifiDefaultCountryIndex" />
        </config_table>
        <config_table table_name="unifiDebugConfigTable" num_indices="1">
            <description_user>Debug modules table</description_user>
            <index1 name="unifiDebugModulesIndex" />
        </config_table>
        <config_table table_name="unifiRSSICURoamScanTriggerTable" num_indices="1">
            <description_user>Table indexed by frequency band</description_user>
            <index1 name="unifiBandTableIndex" />
        </config_table>
        <config_table table_name="unifiRoamCUScanTriggerTable" num_indices="1">
            <description_user>Table indexed by frequency band</description_user>
            <index1 name="unifiBandTableIndex" />
        </config_table>
        <config_table table_name="unifiRoamRssiFactorTable" num_indices="1">
            <description_user>Table allocating RSSIfactor to RSSI values range</description_user>
            <index1 name="unifiRoamRssiFactorTableIndex" />
        </config_table>
        <config_table table_name="unifiRoamCUFactorTable" num_indices="1">
            <description_user>Table allocating CUfactor to Channel Utilization values range.</description_user>
            <index1 name="unifiRoamCUFactorTableIndex" />
        </config_table>
        <config_table table_name="unifiRoamRSSIBoostTable" num_indices="1">
            <description_user>Table allocating a RSSI boost to each band</description_user>
            <index1 name="unifiBandTableIndex" />
        </config_table>
        <!-- ******************************************************************************************* -->
        <config_table table_name="hutsReadWriteTableInt16IdTable" num_indices="1">
            <description_user>Specific table for uint16</description_user>
            <index1 name="hutsReadWriteTableInt16" />
        </config_table>
        <config_table table_name="hutsReadWriteTableOctetStringTable" num_indices="1">
            <description_user>Specific table for octet string</description_user>
            <index1 name="hutsReadWriteTableOctetString" />
        </config_table>
        <config_table table_name="hutsReadWriteRPCTableOctetStringTable" num_indices="2">
            <description_user>Specific table for RPC of octet string</description_user>
            <index1 name="hutsReadWriteRPCTableOctetStringTableIndex0" />
            <index2 name="hutsReadWriteRPCTableOctetStringTableIndex1" />
        </config_table>
        <config_table table_name="hutsReadWriteInternalAPIFixedSizeTable" num_indices="1">
            <description_user>Specific table of fixed size for internal API test</description_user>
            <index1 name="hutsReadWriteInternalAPIFixedSizeTableIndex" />
        </config_table>
        <config_table table_name="hutsReadWriteInternalAPIVarSizeTable" num_indices="1">
            <description_user>Specific table of variable size for internal API test</description_user>
            <index1 name="hutsReadWriteInternalAPIVarSizeTableindex" />
        </config_table>
        <config_table table_name="hutsReadWriteInternalAPIFixSizeTableKeys" num_indices="1">
            <description_user>Conceptual table for timing of queue transfers HOST-SW-HW</description_user>
            <index1 name="hutsReadWriteInternalAPIFixSizeTableKeysindex" />
        </config_table>
        <config_table table_name="hutsReadWriteInternalAPIFixVarSizeTableKeys" num_indices="1">
            <description_user>Table of integers for use by patches.</description_user>
            <index1 name="hutsReadWriteInternalAPIFixVarSizeTableKeysIndex" />
        </config_table>
        <config_table table_name="hutsReadWriteInternalAPIFixSizeTableKeyRowTable" num_indices="2">
            <description_user>xxxxxxxx</description_user>
            <index1 name="hutsReadWriteInternalAPIFixSizeTableKeyIndex1" />
            <index2 name="hutsReadWriteInternalAPIFixSizeTableKeyIndex2" />
        </config_table>
        <config_table table_name="hutsReadWriteInternalAPIVarSizeTableKeyTable" num_indices="2">
            <description_user>xxxxxxxx</description_user>
            <index1 name="hutsReadWriteInternalAPIVarSizeTableKeyIndex1" />
            <index2 name="hutsReadWriteInternalAPIVarSizeTableKeyIndex2" />
        </config_table>
        <config_table table_name="unifiDPDTrainPacketConfigTable" num_indices="1">
            <description_user> This table contains DPD train configuraion
            </description_user>
            <index1 name="unifiDPDTrainPacketConfigIndex" />
        </config_table>
        <config_table table_name="unifiFrameTXCountersTable" num_indices="1">
            <description_user> This table contains TX Counters.</description_user>
            <index1 name="unifiFrameTXCountersTableIndex" />
        </config_table>
        <config_table table_name="unifiFrameRXCountersTable" num_indices="1">
            <description_user> This table contains RX Counters.</description_user>
            <index1 name="unifiFrameRXCountersTableIndex" />
         </config_table>

        <!-- ******************************************************************************************* -->
    </metadata>
</metadata_list>
